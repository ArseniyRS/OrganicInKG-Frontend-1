{"version":3,"sources":["assets/icons/category.svg","assets/icons/about.svg","assets/icons/user.svg","assets/icons/delivery.svg","assets/icons/package.svg","assets/icons/radish.svg","assets/icons/information.svg","assets/icons/search.svg","assets/icons/badStatus.svg","assets/icons/goodStatus.svg","assets/icons/delete.svg","assets/icons/back.svg","assets/icons/checkPassword.svg","assets/icons/plus.svg","assets/icons/openList.svg","assets/icons/Rolling-0.6s-197px.svg","assets/icons/Rolling-0.6s-197px2.svg","assets/active_icons/category_active.svg","assets/active_icons/provider_active.svg","assets/active_icons/product_active.svg","assets/active_icons/user_active.svg","assets/active_icons/quest_active.svg","assets/active_icons/about_active.svg","assets/active_icons/order_active.svg","assets/active_icons/settings_active.svg","assets/icons/settings.svg","assets/img/logo.svg","assets/img/loader-logo.svg","assets/icons/error.svg","assets/icons/upload-button.svg","assets/icons/edit.svg","assets/icons/trash.svg","assets/icons/leftArrow.svg","redux/reducers/types.js","utils/api/Request.js","utils/templates/getTemplate.jsx","utils/templates/createOrChangeTemplate.js","utils/templates/deleteTemplate.js","utils/checkHasData.js","utils/templates/getSearchedTemplate.js","utils/templates/updateItemInStore.js","components/Auth/logout.js","redux/reducers/mainReducer.js","redux/reducers/orderReducer.js","components/Auth/expChecker.js","components/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Sidebar/SidebarItem.jsx","components/Sidebar/sideBarConfig.js","components/Sidebar/SidebarList.jsx","components/Search-panel/SearchPanel.jsx","components/Btns/AddBtn.jsx","redux/reducers/modalReducer.jsx","redux/reducers/tableReducer.js","components/Btns/DeleteBtn.jsx","components/Table/TableItemColumn.jsx","utils/toBeatifyFiledsValue.js","components/Table/Table-item.jsx","components/Modals/ErrorMessage.jsx","components/Table/Table.jsx","components/RecordViewer/RecordViewer.jsx","components/RecordViewer/RecordViewerContainer.jsx","components/Btns/EditBtn.jsx","components/Btns/CancelBtn.jsx","components/Inputs/SelectorInput/SelectorItem.jsx","components/Inputs/SelectorInput/SelectorList.jsx","components/Inputs/SelectorInput/Selector.js","components/Inputs/SelectorInput/SelectorInput.jsx","utils/toUglyfyFieldsValue.js","components/ImgUploader/ImgUploader.jsx","components/Inputs/PhoneInput/PhoneInput.jsx","components/Inputs/CheckInput/CheckInput.jsx","components/Inputs/Selector/SelectItem.js","components/Inputs/Selector/SelectBlock.js","components/Inputs/Selector/SelectField.jsx","components/Inputs/MapBlock/MapBlock.jsx","components/FormGenerator/FormInput.jsx","components/FormGenerator/Former.jsx","components/FormGenerator/validationGenerator.js","components/FormGenerator/FormContainer.jsx","components/PageRenderer/PageRendererContainer.jsx","configs/Orders/tableColumnsConfig.js","configs/Orders/recordViewConfig.js","configs/Orders/inputFormConfig.js","pages/Orders/OrdersPage.jsx","redux/reducers/userReducer.js","configs/Users/tableColumnsConfig.js","configs/Users/recordViewConfig.js","pages/Users/UsersPage.jsx","configs/Products/tableColumnsConfig.js","configs/Products/recordViewConfig.js","configs/Products/inputFormConfig.js","utils/templates/toClearImageArray.js","redux/reducers/productReducer.js","utils/templates/formDataTemplate.js","redux/reducers/providerReducer.js","redux/reducers/categoryReducer.js","pages/Products/ProductsPage.jsx","configs/Providers/inputFormConfig.js","configs/Providers/tableColumnsConfig.js","configs/Providers/recordViewConfig.js","pages/Providers/ProvidersPage.jsx","components/Inputs/PasswordInput/PasswordInput.jsx","components/Auth/AuthForm.jsx","components/Auth/AuthContainer.jsx","pages/Auth/AuthPage.jsx","configs/Categories/recordViewConfig.js","configs/Categories/tableColumnsConfig.js","configs/Categories/inputFormConfig.js","pages/Categories/CategoriesPage.jsx","components/Modals/Modal.jsx","components/Profile/ProfileForm.jsx","components/Profile/ProfileContainer.jsx","pages/Profile/ProfilePage.jsx","redux/reducers/faqReducer.jsx","components/pageLoader/pageLoader.js","configs/Faq/inputFormConfig.js","configs/Faq/tableColumnsConfig.js","configs/Faq/recordViewConfig.js","pages/Faq/FaqPage.js","redux/reducers/aboutUsReducer.js","configs/AboutUs/inputFormConfig.js","configs/AboutUs/tableColumnsConfig.js","configs/AboutUs/recordViewConfig.js","pages/AboutUs/AboutUsPage.js","configs/Settings/inputFormConfig.js","pages/Settings/SettingsPage.js","components/Notification/Notification.js","App.jsx","components/Auth/tokensChecker.js","redux/reducers/index.jsx","redux/store.jsx","index.jsx"],"names":["module","exports","SEARCHING","instance","axios","baseURL","authReq","data","post","then","response","authRefreshReq","categoryGetByIdReq","id","get","categoryPostReq","categoryDelByIdReq","delete","categoryUpdReq","put","catch","err","console","log","categoryGetSearchReq","searchText","page","productsGetReq","productGetByIdReq","productPostReq","productDelByIdReq","productUpdReq","productImgPostReq","headers","measureUnitGetReq","providersGetReq","providerGetByIdReq","providerPostReq","providerImgPostReq","providerDelByIdReq","providerUpdReq","providerActiveGetReq","providerPlaceOfProductionPostReq","providerPlaceOfProductionUpdReq","usersGetReq","userGetByIdReq","userDelByIdReq","userUpdReq","ordersGetReq","orderGetByIdReq","orderPostReq","orderDelByIdReq","orderUpdStatusReq","deliveryCashGetReq","deliveryCashUpdReq","faqGetReq","faqGetByIdReq","faqPostReq","faqDelByIdReq","faqUpdReq","aboutUsGetReq","aboutUsGetByIdReq","aboutUsPostReq","aboutUsDelByIdReq","aboutUsUpdReq","getTemplate","dispatch","getFunc","actionType","toggleLoader","a","showNotification","isOpen","title","body","result","type","payload","createOrChangeTemplate","func","notifObj","resultCode","deleteTemplate","deleteFunc","checkHasData","length","getSearchedTemplate","updateItemInStore","state","idx","newArrayData","findIndex","item","parseInt","slice","logout","localStorage","removeItem","initialState","authFetchLoader","isAuthorized","isPageLoader","authErrorMessage","username","userId","undefined","notification","toggleNotification","notif","writeAuthMessage","str","togglePageLoader","bool","toggleAuth","value","getUserName","getItem","firstName","phoneNumber","tokenToLocalStorage","setItem","accessToken","JSON","stringify","Date","parse","tokenExpirationTime","refreshExpirationTime","refreshToken","orders","orderById","deliveryCash","hasOrders","orderFetchLoader","orderToggleLoader","expChecker","exp","now","isExpired","token","getExpirationDate","Preloader","props","className","style","width","height","connect","main","writeUserId","useEffect","to","src","logoSVG","alt","onClick","withRouter","name","svg","activeSvg","history","useState","clicked","setClick","location","pathname","indexOf","classes","classNames","push","sideBarConfig","providerSVG","providerActiveSVG","orderSVG","orderActiveSVG","productSVG","productActiveSVG","userSVG","userActiveSVG","categorySVG","categoryActiveSVG","questionSVG","questionActiveSVG","aboutSVG","aboutActiveSVG","settingsSVG","settingsActiveSVG","elements","map","index","key","SearchPanel","searchSVG","placeholder","onChange","event","handleSearchText","target","AddBtn","urlToCreate","isOpenModal","confirmFunc","urlToTable","toggleModal","obj","recordViewId","elementsToDelete","tableMessage","writeTableMessage","table","confirmHandler","deleteSVG","TableItemColumn","column","render","toBeautifyFieldsValue","NaN","writeElementsToDelete","values","columns","handlerClick","deleting","check","setCheck","buff","splice","boxShadow","valuesToArray","Object","valsKey","keys","i","j","dataIndex","object","tableItemColumn","ErrorMsg","text","errorSVG","isLoading","getDataFunc","adding","hasData","clearTable","setSearchText","setPage","useDispatch","timeoutId","setTimeout","clearTimeout","dataLength","next","hasMore","loader","endMessage","textAlign","initialScrollY","titles","urlToUpd","match","editing","recordViewValuesConfig","backSVG","results","Array","isArray","valueChooser","params","array","fieldSearcherInObj","searchedField","prop","valueById","clearFunc","getByIdFunc","disabled","SelectorItem","isOpenList","setOpenList","handleClick","thirdStyle","checked","setChecked","styles","children","openList","SelectorList","Selector","setVisibleSelector","selectorRef","useRef","closeSelector","e","current","contains","document","addEventListener","removeEventListener","ref","SelectorInput","setFieldValue","visibleSelector","selected","setSelected","inputText","setInputText","toUglyfyFieldsValue","plusSVG","ImgUploader","imageCount","fileTypes","files","setFiles","error","setError","createFile","url","fetch","imgUrl","blob","metadata","file","File","getBase64","string","data_url","loadFiles","callback","reader","FileReader","readAsDataURL","useDropzone","accept","onDrop","acceptedFiles","split","getRootProps","getInputProps","thumbs","trashSVG","deleteItem","Url","toUpperCase","uploadBtnSVG","PhoneInput","mask","replace","CheckInput","marginTop","defaultChecked","SelectItem","fullName","SelectBlock","SelectField","selectedValue","setSelectedValue","readOnly","MapBlock","ymaps","React","placemarkRef","mapRef","city","country","region","street","place","setPlace","address","setAddress","enterprise","query","apikey","modules","instanceRef","onLoad","ympasInstance","coords","geometry","setCoordinates","Placemark","iconCaption","preset","draggable","createPlacemark","geoObjects","add","properties","set","geocode","res","firstGeoObject","getAddressLine","getLocalities","getCountry","getAdministrativeAreas","getThoroughfare","balloonContent","getAddress","defaultState","center","zoom","position","options","float","FormInput","label","selectInputData","selectorProperty","clearSelectorData","htmlFor","field","form","as","Former","inputs","initialVals","inputConfig","optionsForSelector","readonly","schema","config","dataType","Yup","required","min","max","nullable","validationGenerator","formTitle","initialValues","validationSchema","onSubmit","handleSubmit","errors","createReq","updReq","loadSelectorData","pageUrl","pageTitle","tableData","tableColumnsConfig","recordViewTitlesConfig","creatorTitle","updaterTitle","formInputsConfig","optionsForSelectorData","creatorInitialFormValues","updaterInitialFormValues","createFunc","updateFunc","exact","path","OrderColumns","background","color","borderRadius","padding","margin","recordViewOrderConfig","orderInputConfig","order","clearOrder","action","getOrderById","createOrder","deleteOrder","getOrders","updateOrder","orderStatus","clearOrders","orderNumber","client","lastName","deliveryAddress","deliveryType","desiredDeliveryDate","elsomPaymentOrderStatus","paymentType","storageAddress","product","products","amount","measureUnitResponse","totalPrice","currency","orderTotalPrice","status","users","userById","hasUsers","userFetchLoader","userToggleLoader","getUserById","UsersColumns","recordViewUserConfig","user","getUsers","deleteUser","clearUser","clearUsers","ProductColumns","recordViewProductConfig","productInputConfig","toClearImageArray","productById","ratingById","hasProducts","measureUnits","productFetchLoader","productToggleLoader","formDataProviderTemplate","formData","FormData","append","providers","providerById","activeProviders","hasProvider","providerFetchLoader","providerToggleLoader","categories","categoryById","searchedCategories","hasCategories","categoryFetchLoader","clearCategories","categoryToggleLoader","getCategory","category","provider","getActiveProviders","getProducts","getProductById","createProduct","resp","images","updateProduct","deleteProduct","clearProduct","getMeasureUnits","clearProducts","clearActiveProviders","units","supplier","description","price","measure","productImages","imageUrl","boughtCount","raiting","comments","comment","middleName","email","categoryId","supplierId","measureUnitId","providerInputConfig","ProviderColumns","goodStatusSVG","badStatusSVG","recordViewProviderConfig","getProviders","getProviderById","createProvider","placeOfProduction","newData","PASSPORT","SERTIFICATE","CONTRACT","updateProvider","deleteProvider","clearProvider","clearProviders","phone","produces","walletNumber","ewalletNumber","supplierFile","filter","supplierFileType","isActive","PasswordInput","visiblePassword","setVisiblePassword","checkPasSVG","password","submitHandler","authSignIn","statusCodeValue","AuthPage","recordViewCategoryConfig","CategoryColumns","categoryInputConfig","getCategoryById","createCategory","Blob","parentCategoryId","image","updateCategory","deleteCategory","clearCategory","getSearchedCategory","parentCategory","imagePath","isFetchLoader","modal","ProfileForm","urlToBack","profile","updateUser","ProfilePage","loaderLogoSVG","faq","faqById","hasFaq","faqFetchLoader","faqToggleLoader","faqInputConfig","FaqColumns","recordViewFaqConfig","getFaq","getFaqById","createFaq","updateFaq","deleteFaq","clearFaq","clearFaqs","question","answer","aboutUs","aboutUsById","hasAbout","aboutFetchLoader","aboutToggleLoader","aboutUsInputConfig","AboutUsColumns","recordViewAboutUsConfig","getAboutUs","getAboutUsById","createAboutUs","updateAboutUs","deleteAboutUs","clearAboutUs","clearAboutUses","header","paragraph","settingsInputConfig","updateDeliveryCash","deliveryPrice","getDeliveryCash","open","message","visible","authRefresh","tokensChecker","component","OrdersPage","UsersPage","ProductsPage","CategoriesPage","ProvidersPage","FaqPage","AboutUsPage","SettingsPage","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ee1e5c1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/category.6fb1c99f.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.aa636394.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6254b518.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.d6b82ec3.svg\";","module.exports = __webpack_public_path__ + \"static/media/package.4f531e3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/radish.8f2f758d.svg\";","module.exports = __webpack_public_path__ + \"static/media/information.aaab1020.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.4fe23475.svg\";","module.exports = __webpack_public_path__ + \"static/media/badStatus.a3728383.svg\";","module.exports = __webpack_public_path__ + \"static/media/goodStatus.59610b8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.03ad081f.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.dbbc4fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkPassword.daa811a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.26de1661.svg\";","module.exports = __webpack_public_path__ + \"static/media/openList.1e941aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px.1a1f3581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px2.a0c4e4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/category_active.006e9b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/provider_active.d827fc4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_active.844c787a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user_active.414bdbc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/quest_active.fdfd211b.svg\";","module.exports = __webpack_public_path__ + \"static/media/about_active.a58d305c.svg\";","module.exports = __webpack_public_path__ + \"static/media/order_active.688d21b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_active.49551fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.6f4b4b52.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.207a7640.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-logo.f79cb380.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.020896e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-button.70e2dfbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.d1ec101b.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.b8c498a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.addc9207.svg\";","\r\n\r\nexport const WRITE_RECORD_ID = 'WRITE_RECORD_ID'\r\nexport const WRITE_ELEMENTS_TO_DELETE = 'WRITE_ELEMENTS_TO_DELETE'\r\nexport const WRITE_TABLE_MESSAGE = 'WRITE_TABLE_MESSAGE'\r\nexport const SEARCHING='SEARCHING'\r\n\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\nexport const TOGGLE_FETCH_LOADER = 'TOGGLE_FETCH_LOADER'\r\nexport const TOGGLE_PAGE_LOADER = 'TOGGLE_PAGE_LOADER'\r\nexport const WRITE_AUTH_MESSAGE = 'WRITE_AUTH_MESSAGE'\r\nexport const WRITE_USERNAME = 'WRITE_USERNAME'\r\nexport const WRITE_USER_ID = 'WRITE_USER_ID'\r\n\r\n\r\n\r\nexport const WRITE_CATEGORIES = 'WRITE_CATEGORIES'\r\nexport const WRITE_CATEGORY_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const DELETED_CATEGORY = 'DELETED_CATEGORY'\r\nexport const CLEAR_CATEGORIES = 'CLEAR_CATEGORIES'\r\nexport const CATEGORY_TOGGLE_FETCH_LOADER = 'CATEGORY_TOGGLE_FETCH_LOADER'\r\n\r\n\r\n\r\nexport const TOGGLE_AUTH ='TOGGLE_AUTH'\r\nexport const TOGGLE_NOTIFICATION ='TOGGLE_NOTIFICATION'\r\n\r\n\r\nexport const WRITE_PRODUCTS = 'WRITE_PRODUCTS'\r\nexport const WRITE_PRODUCT_BY_ID = 'WRITE_PRODUCT_BY_ID'\r\nexport const WRITE_RAITING_BY_ID = 'WRITE_RAITING_BY_ID'\r\nexport const ADDED_PRODUCT = 'ADDED_PRODUCT'\r\nexport const DELETED_PRODUCT = 'DELETED_PRODUCT'\r\nexport const CLEAR_PRODUCTS = 'CLEAR_PRODUCTS'\r\nexport const WRITE_MEASURE_UNITS='WRITE_MEASURE_UNITS'\r\nexport const PRODUCT_TOGGLE_FETCH_LOADER='PRODUCT_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_PROVIDER_BY_ID = 'WRITE_PROVIDER_BY_ID'\r\nexport const WRITE_PROVIDER = 'WRITE_PROVIDER'\r\nexport const WRITE_ACTIVE_PROVIDERS = 'WRITE_ACTIVE_PROVIDERS'\r\nexport const DELETED_PROVIDER = 'DELETED_PROVIDER'\r\nexport const PROVIDER_TOGGLE_FETCH_LOADER = 'PROVIDER_TOGGLE_FETCH_LOADER'\r\nexport const CLEAR_PROVIDERS = 'CLEAR_PROVIDERS'\r\n\r\n\r\nexport const WRITE_USERS = 'WRITE_USERS'\r\nexport const WRITE_USER_BY_ID = 'WRITE_USER_BY_ID'\r\nexport const DELETED_USER = 'DELETED_USER'\r\nexport const USER_TOGGLE_FETCH_LOADER = 'USER_TOGGLE_FETCH_LOADER'\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\n\r\n\r\nexport const WRITE_ORDERS = 'WRITE_ORDERS'\r\nexport const WRITE_ORDER_BY_ID = 'WRITE_ORDER_BY_ID'\r\nexport const DELETED_ORDER = 'DELETED_ORDER'\r\nexport const CLEAR_ORDERS = 'CLEAR_ORDERS'\r\nexport const ORDER_TOGGLE_FETCH_LOADER = 'ORDER_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_DELIVERY_CASH = 'WRITE_DELIVERY_CASH'\r\n\r\n\r\nexport const WRITE_FAQ = 'WRITE_FAQ'\r\nexport const WRITE_FAQ_BY_ID = 'WRITE_FAQ_BY_ID'\r\nexport const DELETED_FAQ = 'DELETED_FAQ'\r\nexport const CLEAR_FAQ = 'CLEAR_FAQ'\r\nexport const FAQ_TOGGLE_FETCH_LOADER = 'FAQ_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const  WRITE_ABOUT_US = 'WRITE_ABOUT_US'\r\nexport const  WRITE_ABOUT_US_BY_ID = 'WRITE_ABOUT_US_BY_ID'\r\nexport const  DELETED_ABOUT_US = 'DELETED_ABOUT_US'\r\nexport const CLEAR_ABOUT_US = 'CLEAR_ABOUT_US'\r\nexport const  ABOUT_TOGGLE_FETCH_LOADER = 'ABOUT_TOGGLE_FETCH_LOADER'","\r\nimport * as axios from 'axios'\r\nconst tokenGetter = ()=>{ return { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`} }}\r\nconst instance = axios.create({\r\n    baseURL: 'https://organicinkg.net:8443/api/v1/',\r\n})\r\nexport const authReq = (data)=>instance.post('auth',data).then(response=>response.data)\r\nexport const authRefreshReq = (data)=>instance.post('refresh',data).then(response=>response.data)\r\n\r\n\r\nexport const categoryGetByIdReq = (id)=>instance.get(`categories/${id}`).then(response=>response.data)\r\nexport const categoryPostReq = (data)=>instance.post('categories',data)\r\nexport const categoryDelByIdReq = (id)=>instance.delete(`categories/${id}`)\r\nexport const categoryUpdReq = (data,id)=>instance.put(`categories/${id}`,data).catch(err=>console.log(err.response))\r\nexport const categoryGetSearchReq = (searchText,page)=>instance.get(`${searchText ? \r\n    `categories/search?name=${searchText}&page=${page}&size=20` \r\n    : `categories?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\n\r\n\r\nexport const productsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `products/like?prodName=${searchText}&page=${page}&size=20`\r\n    : `products?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const productGetByIdReq = (id)=>instance.get(`products/${id}`).then(response=>response.data)\r\nexport const productPostReq = (data)=>instance.post('products',data)\r\nexport const productDelByIdReq = (id)=>instance.delete(`products/${id}`)\r\nexport const productUpdReq = (data,id)=>instance.put(`products/${id}`,data)\r\n\r\nexport const productImgPostReq = (data)=>instance.post(`productImages`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\nexport const productImgUpdReq = (data,id)=> instance.put(`productImages/${id}`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\n\r\nexport const measureUnitGetReq = ()=>instance.get(`measureUnit`).then(response=>response.data)\r\n\r\n\r\nexport const providersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `supplier/search?name=${searchText}&page=${page}&size=20`\r\n    : `supplier?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const providerGetByIdReq = (id)=>instance.get(`supplier/${id}`).then(response=>response.data)\r\nexport const providerPostReq = (data)=>instance.post('supplier',data)\r\nexport const providerImgPostReq = (data)=> instance.post('supplierFile',data)\r\nexport const providerDelByIdReq = (id)=>instance.delete(`supplier/${id}`)\r\nexport const providerUpdReq = (data,id)=>instance.put(`supplier/${id}`,data)\r\nexport const providerActiveGetReq = ()=>instance.get(`supplier/active`).then(response=>response.data)\r\nexport const providerPlaceOfProductionPostReq = (data)=>instance.post(`placeOfProduction`,data)\r\nexport const providerPlaceOfProductionUpdReq = (data,id)=>instance.put(`placeOfProduction/${id}`,data)\r\n\r\nexport const usersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `client/search?firstName=${searchText}&page=${page}&size=20`\r\n    : `client/?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const userGetByIdReq = (id)=>instance.get(`client/${id}`).then(response=>response.data)\r\nexport const userDelByIdReq = (id)=>instance.delete(`client/${id}`)\r\nexport const userUpdReq = (data,id)=>instance.put(`client/${id}`,data)\r\n\r\n\r\n\r\n\r\nexport const ordersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `orders/search?name=${searchText}&page=${page}&size=20`\r\n    : `orders?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const orderGetByIdReq = (id)=>instance.get(`orders/${id}`).then(response=>response.data)\r\nexport const orderPostReq = (data)=>instance.post('orders',data)\r\nexport const orderDelByIdReq = (id)=>instance.delete(`orders/${id}`)\r\nexport const orderUpdStatusReq = (data,id)=>instance.put(`orders/status/${id}?orderStatus=${data}`,data)\r\n\r\nexport const deliveryCashGetReq = ()=>instance.get(`orderSetting/1`).then(response=>response.data)\r\nexport const deliveryCashUpdReq = (data)=>instance.put(`orderSetting/1`,data)\r\n\r\n\r\n\r\n\r\nexport const faqGetReq = (searchText,page)=>instance.get(`${searchText ? `faq/search?question=${searchText}&page=${page}&size=20`\r\n    : `faq/?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const faqGetByIdReq = (id)=>instance.get(`faq/${id}`).then(response=>response.data)\r\nexport const faqPostReq = (data)=>instance.post('faq',data)\r\nexport const faqDelByIdReq = (id)=>instance.delete(`faq/${id}`)\r\nexport const faqUpdReq = (data,id)=>instance.put(`faq/${id}`,data)\r\n\r\nexport const aboutUsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `about/search?header=${searchText}&page=${page}&size=20`\r\n    : `about/?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const aboutUsGetByIdReq = (id)=>instance.get(`about/${id}`).then(response=>response.data)\r\nexport const aboutUsPostReq = (data)=>instance.post('about',data)\r\nexport const aboutUsDelByIdReq = (id)=>instance.delete(`about/${id}`)\r\nexport const aboutUsUpdReq = (data,id)=>instance.put(`about/${id}`,data)","export const getTemplate = async (dispatch,getFunc, actionType,toggleLoader,id=null,showNotification)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(id).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  'Не загружаются запись...'\r\n    })));\r\n    if(response?.result || response?.result===null) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n\r\n    }\r\n    dispatch(toggleLoader(false))\r\n\r\n}","\r\n\r\nexport const createOrChangeTemplate = async (\r\n    dispatch,\r\n    func,\r\n    data,\r\n    toggleLoader,\r\n    id='',\r\n    showNotification\r\n    )=>{\r\n\r\n    dispatch(toggleLoader);\r\n    await func(data,id).then(response => {\r\n        const notifObj = {\r\n            isOpen: true,\r\n            title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n            body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' : id ? 'Запись изменена!':'Запись добавлена!'\r\n        }\r\n        dispatch(showNotification(notifObj))\r\n    }).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  id ? 'Запись не изменена!' :'Запись не добавлена!'\r\n    })))\r\n    dispatch(toggleLoader)\r\n}","\r\nexport const deleteTemplate = async (dispatch,deleteFunc,id,toggleLoader,actionType,showNotification)=>{\r\n    dispatch(toggleLoader(true))\r\n    await deleteFunc(id).then(()=>{\r\n        dispatch(showNotification({\r\n            isOpen: true,\r\n            title:  'Успех!',\r\n            body: 'Запись удалена!'\r\n        }))\r\n        dispatch({type:actionType,payload: id})\r\n    })\r\n   .catch(()=>{\r\n       dispatch(showNotification({\r\n           isOpen: true,\r\n           title: 'Ошибка!',\r\n           body:  'Запись не удалена!'\r\n       }))\r\n   })\r\n    dispatch(toggleLoader(false))\r\n}","export const checkHasData = data=>{\r\n    if(!data.length){\r\n        return false\r\n    }\r\n    return true\r\n}","export const getSearchedTemplate = async (dispatch,getFunc, actionType,toggleLoader,page,searchText,showNotification)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(searchText,page).catch(()=>dispatch(showNotification({\r\n        isOpen: true,\r\n        title: 'Ошибка!',\r\n        body:  'Не загружаются записи...'\r\n    })))\r\n    console.log(response)\r\n    if(response?.result) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n    }\r\n    dispatch(toggleLoader(false))\r\n}","export const updateItemInStore = (state,data,type)=>{\r\n    let idx = -1;\r\n    const newArrayData = [...state]\r\n    switch (type) {\r\n        case 'delete':\r\n            idx = state.findIndex(item=>item.id === parseInt(data))\r\n            return [...newArrayData.slice(0, idx), ...newArrayData.slice(idx + 1)]\r\n        case 'update':\r\n            idx = state.findIndex(item=>item.id === parseInt(data.id))\r\n            return [...newArrayData.slice(0, idx),data, ...newArrayData.slice(idx + 1)]\r\n        default:{\r\n            return\r\n        }\r\n    }\r\n}","export const logout = ()=>{\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('tokenExpirationTime')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('refreshExpirationTime')\r\n    localStorage.removeItem('id')\r\n}","import {\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME,\r\n    WRITE_USER_ID,\r\n    TOGGLE_NOTIFICATION\r\n} from './types'\r\nimport {authRefreshReq, authReq, userGetByIdReq} from \"../../utils/api/Request\";\r\nimport {logout} from \"../../components/Auth/logout\";\r\n\r\n\r\nconst initialState={\r\n    authFetchLoader: false,\r\n    isAuthorized: true,\r\n    isPageLoader: false,\r\n    authErrorMessage: '',\r\n    username: '',\r\n    userId: undefined,\r\n    notification: {\r\n        isOpen: false,\r\n        title: '',\r\n        body: ''\r\n    }\r\n}\r\n\r\n\r\nexport const mainReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_NOTIFICATION:\r\n            console.log('called')\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                authFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n        }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload,\r\n            }\r\n        case WRITE_USER_ID:\r\n        return {\r\n            ...state,\r\n            userId: action.payload\r\n        }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleNotification = notif=>{\r\n    return{\r\n        type: TOGGLE_NOTIFICATION,\r\n        payload: notif\r\n    }\r\n}\r\nexport const writeUserId = value=>{\r\n    return{\r\n        type: 'WRITE_USER_ID',\r\n        payload: value\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const toggleLoader = bool=>{\r\n    return{\r\n        type: 'TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const authRefresh = data=> {\r\n    return async dispatch => {\r\n        dispatch(toggleLoader(true))\r\n        await authRefreshReq(data).then(async response => {\r\n            if(response.resultCode==='NOT_FOUND'){\r\n                logout()\r\n            }else {\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const getUserName=()=>{\r\n    return async dispatch=>{\r\n        dispatch(toggleLoader(true))\r\n        await userGetByIdReq(localStorage.getItem('id')).then(response=>{\r\n            dispatch(writeUsername(response.result?.firstName ? response.result?.firstName : response.result?.phoneNumber))\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(toggleLoader(true))\r\n        await authReq(data).then(async response=>{\r\n            console.log(response)\r\n            if(response.result.statusCodeValue===400){\r\n                dispatch(writeAuthMessage('Неверно введены данные.'))\r\n            }else {\r\n                dispatch(togglePageLoader(true))\r\n                dispatch(toggleAuth(true))\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\n\r\nconst tokenToLocalStorage = (response)=>{\r\n    localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n    localStorage.setItem(\"tokenExpirationTime\", JSON.stringify(Date.parse(response.result.body.tokenExpirationTime)))\r\n    localStorage.setItem(\"refreshExpirationTime\", JSON.stringify(Date.parse(response.result.body.refreshExpirationTime)))\r\n    localStorage.setItem(\"id\", response.result.body.id)\r\n    localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n}\r\n\r\n\r\n","import {\r\n    WRITE_ORDERS,\r\n    WRITE_ORDER_BY_ID,\r\n    SEARCHING,\r\n    ORDER_TOGGLE_FETCH_LOADER,\r\n    WRITE_DELIVERY_CASH, DELETED_ORDER, CLEAR_ORDERS\r\n} from './types'\r\nimport {\r\n    deliveryCashGetReq,\r\n    deliveryCashUpdReq,\r\n    orderDelByIdReq, orderGetByIdReq, orderPostReq, ordersGetReq,  orderUpdStatusReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    orders: [],\r\n    orderById: {},\r\n    deliveryCash : {},\r\n    hasOrders: true,\r\n    orderFetchLoader: false\r\n}\r\n\r\n\r\nexport const orderReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ORDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                orderFetchLoader: action.payload\r\n            }\r\n        case WRITE_ORDERS:\r\n            return{\r\n                ...state,\r\n                orders: [...state.orders,...action.payload],\r\n                hasOrders: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_ORDERS:\r\n            return {\r\n                ...state,\r\n                orders: []\r\n            }\r\n        case WRITE_DELIVERY_CASH:\r\n            return{\r\n                ...state,\r\n                deliveryCash: action.payload,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                hasOrders: true\r\n            }\r\n        case WRITE_ORDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                orderById: action.payload\r\n            }\r\n        case DELETED_ORDER:\r\n            return{\r\n                ...state,\r\n                orders: updateItemInStore(state.orders,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearOrder = ()=>{\r\n    return{\r\n        type: WRITE_ORDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const orderToggleLoader = bool=>{\r\n    return{\r\n        type: ORDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const clearOrders = ()=>{\r\n    return{\r\n        type: CLEAR_ORDERS\r\n    }\r\n}\r\nexport const getOrders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, ordersGetReq, WRITE_ORDERS, orderToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getOrderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, orderGetByIdReq, WRITE_ORDER_BY_ID, orderToggleLoader,id,toggleNotification)\r\n}\r\nexport const getDeliveryCash = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,deliveryCashGetReq,WRITE_DELIVERY_CASH,orderToggleLoader,'',toggleNotification)\r\n}\r\n\r\nexport const updateDeliveryCash = data=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,deliveryCashUpdReq,{deliveryPrice: parseInt(data.deliveryPrice), deliveryType: \"COURIER\"},orderToggleLoader,1,toggleNotification)\r\n}\r\n\r\nexport const createOrder = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch, orderPostReq, data, orderToggleLoader)\r\n}\r\nexport const deleteOrder = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,orderDelByIdReq,id[i],orderToggleLoader,DELETED_ORDER,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateOrder = (id,data) =>{\r\n    return async dispatch =>{\r\n        dispatch(orderToggleLoader(true))\r\n        await orderUpdStatusReq( data.orderStatus,id)\r\n        dispatch(orderToggleLoader(false))\r\n    }\r\n}\r\n\r\n","const getExpirationDate = (token,exp)=> {\r\n    if (!token || !exp) {\r\n        return undefined\r\n    }\r\n    return exp\r\n};\r\n\r\nconst isExpired = (exp) => {\r\n    if (!exp) {\r\n        return false;\r\n    }\r\n    if (Date.now() < exp){\r\n        return exp - Date.now()\r\n    }else{\r\n        return false\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const  expChecker = ()=>isExpired(getExpirationDate(localStorage.getItem(\"accessToken\"),localStorage.getItem('tokenExpirationTime')))","import React from 'react'\r\nimport './Preloader.css'\r\nconst Preloader = (props)=>{\r\n    return(\r\n       <div className={'preloader'}>\r\n                <span className=\"circle circle-1\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-2\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-3\" style={{width: props.width,height: props.height}}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect} from 'react'\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {logout} from \"../Auth/logout\";\r\nimport {getUserName, toggleAuth, writeUserId} from \"../../redux/reducers/mainReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoSVG} from '../../assets/icons'\r\nimport {expChecker} from \"../Auth/expChecker\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Header = (props)=>{\r\n\r\nuseEffect(()=>{\r\n    if(expChecker()) {\r\n        props.getUserName()\r\n        props.writeUserId(parseInt(localStorage.getItem('id')))\r\n    }\r\n},[])\r\n    return(\r\n        <div className='header'>\r\n        <div className='container'>\r\n\r\n        <div className=\"header__container\">\r\n            <Link to={\"/providers\"}><img src={logoSVG} alt=\"\"/></Link>\r\n            <div className=\"header-profile\">\r\n                {props.username ?\r\n                <span className='header-profile__name'>{props.username}</span>\r\n                :\r\n                    <Preloader width={'6px'} height={'6px'}/>}\r\n\r\n                <Link to={\"/profile\"}><span className='header-profile__password'>Профиль</span></Link>\r\n                <span className='header-profile__divider'>/</span>\r\n                <span className='header-profile__exit' onClick={()=> {\r\n                    logout()\r\n                    props.toggleAuth(false)\r\n                }}>Выйти</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserName,writeUserId})(Header)","import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,svg,\r\n                         activeSvg,\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n           return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes} onClick={()=>{\r\n            setClick(true)\r\n            history.push(to)\r\n        }}><img src={clicked ? activeSvg : svg} alt=\"\"/><span>{name}</span></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","import {\r\n    categorySVG,\r\n    orderSVG,\r\n    productSVG,\r\n    providerSVG,\r\n    questionSVG,\r\n    userSVG,\r\n    orderActiveSVG,\r\n    categoryActiveSVG,\r\n    providerActiveSVG,\r\n    productActiveSVG,\r\n    userActiveSVG,\r\n    questionActiveSVG,\r\n    aboutActiveSVG,\r\n    aboutSVG, settingsSVG, settingsActiveSVG\r\n} from \"../../assets/icons\";\r\n\r\nexport const sideBarConfig = [\r\n    {\r\n        to: '/providers',\r\n        name: 'Поставщики',\r\n        svg: providerSVG,\r\n        activeSvg: providerActiveSVG\r\n    },\r\n    {\r\n        to: '/orders',\r\n        name: 'Заказы',\r\n        svg: orderSVG,\r\n        activeSvg: orderActiveSVG\r\n    },\r\n    {\r\n        to: '/products',\r\n        name: 'Товары',\r\n        svg: productSVG,\r\n        activeSvg: productActiveSVG\r\n    },\r\n    {\r\n        to: '/users',\r\n        name: 'Пользователи',\r\n        svg: userSVG,\r\n        activeSvg: userActiveSVG\r\n    },\r\n    {\r\n        to: '/categories',\r\n        name: 'Категории',\r\n        svg: categorySVG,\r\n        activeSvg: categoryActiveSVG\r\n    },\r\n    {\r\n        to: '/faq',\r\n        name: 'Вопросы',\r\n        svg: questionSVG,\r\n        activeSvg: questionActiveSVG\r\n    },\r\n    {\r\n        to: '/aboutus',\r\n        name: 'О нас',\r\n        svg: aboutSVG,\r\n        activeSvg: aboutActiveSVG\r\n    },\r\n    {\r\n        to: '/settings',\r\n        name: 'Настройки',\r\n        svg: settingsSVG,\r\n        activeSvg: settingsActiveSVG\r\n    }\r\n]","import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst SidebarList  = (props)=>{\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n                svg={item.svg}\r\n                name={item.name}\r\n                activeSvg={item.activeSvg}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","import React,{useEffect,useState} from 'react'\r\nimport {searchSVG } from '../../assets/icons'\r\nimport './Search-panel.css'\r\n\r\nconst SearchPanel = (props)=>{\r\n    return(\r\n        <div className='searchPanel'>\r\n            <span><img src={searchSVG} alt=\"\"/><input type=\"text\" placeholder={'Поиск'} onChange={(event) => props.handleSearchText(event.target.value)}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import React from 'react'\r\nimport './Btns.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AddBtn = ({urlToCreate})=>{\r\n    return(\r\n        <Link to={urlToCreate} className='addBtn'>Добавить</Link>\r\n    )\r\n}\r\nexport default AddBtn","import { TOGGLE_MODAL} from './types'\r\n\r\nconst initialState={\r\n    isOpenModal: {\r\n        isOpen:false,\r\n        title:'',\r\n        confirmFunc: undefined,\r\n        urlToTable : ''\r\n    }\r\n}\r\n\r\n\r\nexport const modalReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_MODAL:\r\n            return{\r\n                ...state,\r\n                isOpenModal: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const toggleModal = obj=>{\r\n    return{\r\n        type:  TOGGLE_MODAL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\n","import { WRITE_RECORD_ID,WRITE_ELEMENTS_TO_DELETE,WRITE_TABLE_MESSAGE} from './types'\r\n\r\nconst initialState={\r\n   recordViewId:'',\r\n    elementsToDelete: [],\r\n    tableMessage: ''\r\n}\r\n\r\n\r\nexport const tableReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case WRITE_RECORD_ID:\r\n            return{\r\n                ...state,\r\n                recordViewId: action.payload\r\n            }\r\n        case WRITE_ELEMENTS_TO_DELETE:\r\n            return{\r\n                ...state,\r\n                elementsToDelete: action.payload\r\n            }\r\n        case WRITE_TABLE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                tableMessage: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeTableMessage = str=>{\r\n    return{\r\n        type: WRITE_TABLE_MESSAGE,\r\n        payload: str\r\n    }\r\n}\r\nexport const writeElementsToDelete = values=>{\r\n    return{\r\n        type:  WRITE_ELEMENTS_TO_DELETE,\r\n        payload: values\r\n    }\r\n}\r\nexport const writeRecordId = value=>{\r\n    return{\r\n        type:  WRITE_RECORD_ID,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Btns.css'\r\nimport {deleteSVG} from \"../../assets/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\n\r\nconst DeleteBtn = ({toggleModal,deleteFunc,elementsToDelete,writeTableMessage})=>{\r\n\r\n    const confirmHandler = ()=>{\r\n          deleteFunc(elementsToDelete)\r\n    }\r\n\r\n    return(\r\n        <img className={'deleteBtn'} src={deleteSVG} alt=\"\"  onClick={()=>{\r\n            if(elementsToDelete.length===0){\r\n             return writeTableMessage('Вы не выбрали ни одной записи!')\r\n            }\r\n            return toggleModal({isOpen:true,title:'Вы действительно хотите удалить запись(-и)?',confirmFunc: confirmHandler})\r\n        }}/>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal,writeTableMessage})(DeleteBtn)","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\nconst TableItemColumn = ({item,column})=>{\r\n\r\n    return(\r\n        <div className='tableItemColumn'>\r\n            <span className='tableItemColumn__title'>\r\n                {item.title}\r\n            </span>\r\n            <span className='tableItemColumn__value'>\r\n                {column?.render ? column.render(item.value): item.value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItemColumn","export const toBeautifyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'CASH':\r\n            return 'Наличные'\r\n        case 'ELSOM':\r\n            return 'Эльсом'\r\n        case 'COURIER':\r\n            return 'Курьер'\r\n        case 'STORAGE':\r\n            return 'Самовывоз'\r\n        case 'AWAITING_DELIVERY':\r\n            return 'Ожидает доставку'\r\n        case 'PAID_AWAITNG_DELIVERY':\r\n            return 'Оплачен, ожидает доставку'\r\n        case 'DELIVERED_AND_PAID':\r\n            return 'Доставлен и оплачен'\r\n        case 'DELIVERED':\r\n            return 'Доставлен'\r\n        case 'CLOSED':\r\n            return 'Закрыт'\r\n        case null:\r\n            return 'Не указано'\r\n        case 'null':\r\n            return 'Не указано'\r\n        case '':\r\n            return 'Не указано'\r\n        case NaN:\r\n            return 'Не указано'\r\n        case undefined:\r\n            return 'Не указано'\r\n        case 'SOM':\r\n            return 'сом'\r\n        case 'USD':\r\n            return '$'\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport TableItemColumn from \"./TableItemColumn\";\r\nimport {connect} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst TableItem= ({columns,data,handlerClick,elementsToDelete,writeElementsToDelete,deleting,writeTableMessage})=>{\r\n    const [check,setCheck] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(deleting) {\r\n            let buff = [...elementsToDelete]\r\n\r\n            if (check) {\r\n                buff.push(data.id)\r\n                writeElementsToDelete(buff)\r\n            } else {\r\n                const index = buff.indexOf(data.id)\r\n                if (index > -1) {\r\n                    buff.splice(index, 1);\r\n                    writeElementsToDelete(buff)\r\n                }\r\n            }\r\n            return () => {\r\n                writeElementsToDelete([])\r\n            }\r\n        }\r\n    },[check])\r\n    const tableItemColumn = ()=> {\r\n        let result = []\r\n\r\n        const valuesToArray = Object.values(data).slice(1,data.length)\r\n        const valsKey = Object.keys(data).slice(1, data.length)\r\n        for (let i = 0; i < columns.length; i++) {\r\n            for (let j = 0; j < valsKey.length; j++) {\r\n                if (valsKey[j] === columns[i].dataIndex) {\r\n                    const value = ()=> {\r\n                        if(columns[i]?.object){\r\n                            return valuesToArray[j]?.[`${columns[i].object}`]\r\n                        }\r\n                        return valuesToArray[j]\r\n                    }\r\n                    result.push((\r\n                            <TableItemColumn key={`${i}-${data.id}`} column={columns[i]} item={{title: columns[i].title, value: toBeautifyFieldsValue(value())}}/>\r\n                    ))\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    let style={}\r\n    useEffect(()=>{\r\n        if(check){\r\n            style= {\r\n                boxShadow: '0px 1px 8px rgba(0,155,0,.4)'\r\n            }\r\n        }\r\n\r\n    },[])\r\n    return(\r\n        <div className={'tableItem-container'}\r\n        >\r\n            {deleting &&\r\n            <label className=\"tableItem-checkbox-label\">\r\n                <input className=\"tableItem-checkbox__default\" type=\"checkbox\" onClick={() => {\r\n                    writeTableMessage('')\r\n                    setCheck(!check)\r\n                }}/>\r\n                <span className=\"tableItem-checkbox__new\"></span>\r\n            </label>\r\n            }\r\n        <div  className='tableItem' style={style}  onClick={()=>handlerClick(data.id)}>\r\n\r\n           {tableItemColumn()}\r\n           \r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(TableItem)","import React from 'react'\r\nimport {errorSVG} from \"../../assets/icons\";\r\n\r\n\r\n\r\nconst ErrorMsg = ({text})=>{\r\n    return(\r\n\r\n        <span className={'errorMessage'}><img src={errorSVG} alt=\"\"/>{text}</span>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useEffect, useState} from 'react'\r\nimport TableItem from \"./Table-item\";\r\nimport './Table.css'\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst Table = ({isLoading,\r\n                   getDataFunc,\r\n                   data=[],\r\n                   columns=[],\r\n                   handlerClick,\r\n                   deleting,\r\n                   tableMessage,\r\n                   writeTableMessage,\r\n                   deleteFunc,\r\n                   adding,\r\n                   urlToCreate,\r\n                   hasData,\r\n                   clearTable\r\n               })=>{\r\n    const [searchText,setSearchText] = useState('')\r\n    const [page,setPage] = useState(1)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            writeTableMessage('')\r\n            clearTable()\r\n        }\r\n    },[])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n                    getDataFunc(1,searchText)\r\n                    setPage(2)\r\n                    dispatch({type: 'SEARCHING'})\r\n            }, 1000);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [searchText]);\r\n    const elements = data.map(item=> <TableItem key={item.id} columns={columns} data={item} handlerClick = {handlerClick} deleting={deleting}/>)\r\n    return(\r\n        <div className='table-container'>\r\n            <div className='page-functional'>\r\n                <SearchPanel handleSearchText={setSearchText} />\r\n                <div className={'page-functional__btns'}>\r\n                {adding &&\r\n                <AddBtn\r\n                    urlToCreate={urlToCreate}\r\n                />\r\n                }\r\n                {deleting &&\r\n                <DeleteBtn\r\n                    deleteFunc = {deleteFunc}\r\n                />}\r\n                </div>\r\n            </div>\r\n            <div className=\"tableItem-container__wrapper\">\r\n                {(tableMessage && isLoading) && <ErrorMsg text={tableMessage}/>}\r\n                <InfiniteScroll\r\n                    dataLength={data.length} //This is important field to render the next data\r\n                    next={()=>{\r\n                        getDataFunc(page,searchText)\r\n                        setPage(page+1)\r\n                    }}\r\n                    hasMore={hasData}\r\n                    loader={<Preloader/>}\r\n                    endMessage={\r\n                        <p style={{ textAlign: 'center' }}>\r\n                            <b>Загружены все записи.</b>\r\n                        </p>\r\n                    }\r\n                    initialScrollY={0}\r\n                >\r\n                    {elements}\r\n                </InfiniteScroll>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        tableMessage : state.table.tableMessage\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeTableMessage})(Table)\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport './RecordView.css'\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\nconst RecordViewer=({titles,values={},urlToUpd,urlToTable,match,editing,recordViewValuesConfig})=>{\r\n    const valuesToArray = recordViewValuesConfig ? Object.values(recordViewValuesConfig) :Object.values(values).slice(1,values.length)\r\n    const valsKey =recordViewValuesConfig ? Object.keys(recordViewValuesConfig) : Object.keys(values).slice(1,values.length)\r\n    const elements = ()=>{\r\n        let results=[];\r\n        for(let i=0;i<titles.length;i++){\r\n            for(let j=0;j<valsKey.length;j++){\r\n                if( valsKey[j]===titles[i].dataIndex){\r\n                    results.push((\r\n                        <div key={j} className='recordView__item'>\r\n                            <span className='recordView__item-title'>{titles[i].title}</span>\r\n\r\n                            {titles[i]?.type==='image' ?\r\n                                <div className={'recordView__item-imgWrapper'}>\r\n\r\n\r\n                                    { ////////////////////////////////////////////////////////////////////\r\n                                        Array.isArray(valueChooser(titles[i], valuesToArray[j])) ?      // проверка на массив картинок\r\n                                        valueChooser(titles[i], valuesToArray[j]).map(item => {\r\n                                            return (\r\n                                                <div key={item} className={'recordView__item-imgContainer'}><img\r\n                                                    src={item} alt=\"\"/></div>\r\n                                            )\r\n                                        })                                                              // вывод только одной картинки\r\n                                        :  <div className={'recordView__item-imgContainer'}>\r\n                                            <img src={ valuesToArray[j]} alt=\"\"/></div>\r\n                                        //////////////////////////////////////////////////////////////////\r\n                                    }\r\n                                    </div>\r\n                           : <span className='recordView__item-value'> {toBeautifyFieldsValue(valueChooser(titles[i],valuesToArray[j]))}</span>}\r\n                        </div>\r\n                    ))\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\nreturn results\r\n    }\r\n    return(\r\n        <div className='recordView__container'>\r\n            <div className='recordView__container-title'><Link to={urlToTable}><img src={backSVG} alt=\"\"/></Link><h2>{valuesToArray[0]}</h2></div>\r\n            {elements()}\r\n            {editing &&\r\n            <Link to={`${urlToUpd}/${match.params.id}`} className={'recordView__btn'}>Редактировать запись</Link>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(RecordViewer);\r\n\r\nconst valueChooser = (title,value)=> {\r\n    if(title?.object){\r\n        return value?.[`${title.object}`]\r\n    }else if(title?.array){\r\n        if(title.array){\r\n            return fieldSearcherInObj(value,title.array)\r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nfunction fieldSearcherInObj(obj,searchedField) {\r\n    const result = [];\r\n    for (let prop in obj) {\r\n        const value = obj[prop];\r\n        if(searchedField === prop){\r\n            return value\r\n        }\r\n        if (typeof value === 'object') {\r\n            result.push(fieldSearcherInObj(value,searchedField));\r\n        }\r\n    }\r\n    return result;\r\n}","import React, {useEffect} from 'react'\r\nimport RecordViewer from \"./RecordViewer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst RecordViewerContainer = (\r\n    {\r\n        titles,\r\n        urlToUpd,\r\n        urlToTable,\r\n        match,\r\n        valueById,\r\n        clearFunc,\r\n        getByIdFunc,\r\n\r\n        recordViewValuesConfig,\r\n\r\n        isLoading,\r\n        editing\r\n    }\r\n)=>{\r\n    useEffect(()=>{\r\n        getByIdFunc(match.params.id)\r\n        return ()=>clearFunc()\r\n    },[])\r\n    return(\r\n        valueById && !isLoading ?\r\n        <RecordViewer\r\n            titles={titles}\r\n            values={valueById}\r\n            urlToUpd={urlToUpd}\r\n            urlToTable={urlToTable}\r\n            editing={editing}\r\n            recordViewValuesConfig={recordViewValuesConfig}\r\n        /> : <Preloader />\r\n    )\r\n}\r\n\r\nexport default withRouter(RecordViewerContainer)","import React from 'react'\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst EditBtn = ({toggleModal,confirmFunc,urlToTable='main',disabled=false})=>{\r\n    return(\r\n        <div className='createOrEditBtn-submit'\r\n                onClick={async ()=>{\r\n                    if(!disabled){\r\n                        return toggleModal(\r\n                            {   isOpen:true,\r\n                                title:'Вы действительно хотите сохранить изменения?',\r\n                                confirmFunc: confirmFunc,\r\n                                urlToTable: urlToTable\r\n                            },\r\n                        )\r\n                    }\r\n                   return confirmFunc()\r\n                }}>\r\n            Сохранить</div>\r\n                )\r\n}\r\n\r\nexport default connect(null,{toggleModal})(EditBtn)","import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}>\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null,{toggleModal})(CancelBtn)","import React, {useState} from 'react'\r\nimport {openList} from \"../../../assets/icons\";\r\nimport SelectorList from \"./SelectorList\";\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst SelectorItem = ({data,isOpenList,setOpenList,handleClick,thirdStyle=false})=>{\r\n    const [checked, setChecked] = useState(true)\r\n    const styles = classNames({\r\n        'selectorInput__item' : !isOpenList && !thirdStyle,\r\n        \"selectorInput__item-2\":  isOpenList,\r\n        'selectorInput__item-3' : thirdStyle\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <li  className={styles}  onClick={()=> {\r\n\r\n                setChecked(!checked)\r\n                data?.children && setOpenList(!isOpenList)\r\n                if(checked) {\r\n                 return handleClick(data.name)\r\n                }else{\r\n                    return handleClick('')\r\n                }\r\n            }}>\r\n              {data.name}\r\n                   {data?.children && <img src={openList} alt=\"\"/>}\r\n            </li>\r\n            {isOpenList && data.children.map(item=><SelectorList thirdStyle={true} data={item} handleClick={handleClick}/>)}\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorItem","import React, {useState} from 'react'\r\nimport SelectorItem from \"./SelectorItem\";\r\n\r\n\r\n\r\n\r\nconst SelectorList = ({data,handleClick,thirdStyle})=>{\r\n    const [isOpenList,setOpenList] = useState(false);\r\n    return(\r\n        <>\r\n            {data?.children ?\r\n                <ul key={data.id} className={isOpenList ? 'selectorInput__list-clicked' :'selectorInput__list'}>\r\n                <SelectorItem\r\n                    isOpenList={isOpenList}\r\n                    setOpenList={setOpenList}\r\n                    handleClick={handleClick}\r\n                    data={data}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n\r\n\r\n            </ul>\r\n            :\r\n                <SelectorItem\r\n                    data={data}\r\n                    handleClick={handleClick}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n            }\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorList","import React, {useEffect, useRef, useState} from 'react'\r\nimport SelectorList from \"./SelectorList\";\r\n\r\nconst Selector = ({handleClick,setVisibleSelector,data})=>{\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e)=>{\r\n        if(!selectorRef.current.contains(e.target)){\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener('click',closeSelector,false)\r\n        return ()=>{\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    },[])\r\n\r\n    const elements = data.map(item=>{\r\n        return(\r\n            <SelectorList handleClick={handleClick} key={item.id} data={item} />\r\n        )\r\n    })\r\n    return(\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, {useEffect, useRef, useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG, plusSVG} from \"../../../assets/icons\";\r\nimport Selector from \"./Selector\";\r\nimport {toUglyfyFieldsValue} from \"../../../utils/toUglyfyFieldsValue\";\r\n\r\n\r\nconst SelectorInput = ({name,value,setFieldValue,placeholder,data})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selected, setSelected] = useState('')\r\n    const [inputText,setInputText] = useState(value);\r\n    const onChange = (value)=>{\r\n        console.log(value)\r\n        setInputText(value)\r\n    }\r\n    useEffect(()=>{\r\n        setFieldValue(name,inputText)\r\n    },[inputText])\r\n\r\n\r\n    useEffect(()=>{\r\n  setInputText(inputText + ` ${toUglyfyFieldsValue(selected)} `)\r\n\r\n\r\n    },[selected])\r\n\r\n\r\n    return(\r\n\r\n        <div className={'selectorInput'}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   onChange={e=>onChange(e.target.value)}\r\n                    value={inputText}\r\n                   />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"\r\n                 onClick={(event)=>setVisibleSelector(!visibleSelector)}/>\r\n            {visibleSelector && <Selector data={data} setVisibleSelector={setVisibleSelector} handleClick = {setSelected}/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default  SelectorInput\r\n\r\n\r\n","export const toUglyfyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'Наличные':\r\n            return 'CASH'\r\n        case 'Эльсом':\r\n            return 'ELSOM'\r\n        case 'Курьер':\r\n            return 'COURIER'\r\n        case 'Самовывоз':\r\n            return 'STORAGE'\r\n        case 'В доставке':\r\n            return 'AWAITING_DELIVERY'\r\n        case 'Доставлен и оплачен':\r\n            return 'DELIVERED_AND_PAID'\r\n        case 'Закрыт':\r\n            return 'CLOSED'\r\n\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport {trashSVG, uploadBtnSVG} from '../../assets/icons'\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value=[],imageCount=1,fileTypes=\"image/jpeg ,image/gif, image/png, image/svg+xml, application/pdf\"})=>{\r\n    const [files,setFiles] = useState([])\r\n    const [error,setError] = useState('')\r\n    console.log(files)\r\n    useEffect(()=>{\r\n        setFieldValue(name,files)\r\n    },[files])\r\n    const createFile= async (url)=>{\r\n            let response = await fetch(typeof url === 'object' ? url.imgUrl : url);\r\n            let data = await response.blob();\r\n            let metadata = {type: data.type};\r\n            let file = new File([data],'file',metadata);\r\n            await getBase64(file,(string)=> {setFiles(files=>[...files,{file: file, data_url : string}])})\r\n    }\r\n\r\n    const loadFiles = async ()=>{\r\n        if(typeof value === 'string' && value!==''){\r\n            await createFile(value)\r\n        }else if(Array.isArray(value) && value.length){\r\n            value.map(async url =>  await createFile(url))\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadFiles();\r\n        return ()=>setFiles([])\r\n    },[])\r\n    function getBase64(file, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: fileTypes,\r\n        onDrop: acceptedFiles => {\r\n                if(files.length>=imageCount) {\r\n                    setError(`Максимальное количество файлов: ${imageCount}`)\r\n                    return\r\n                }\r\n            for(let type in fileTypes){\r\n             if(type.split('application/') || type.split('image/')===acceptedFiles.type) {\r\n                 acceptedFiles.map(file => {\r\n                     getBase64(file,(string)=>{\r\n                         setFiles([...files,{file: file, data_url : string}])})})}\r\n                else{\r\n                    setError(`Загрузка файлов возможно только с типом: ${fileTypes}`)\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const deleteItem = index =>setFiles([...files.slice(0, index), ...files.slice(index + 1)])\r\n    const thumbs = files.map((file,index) =>{\r\n        return (\r\n        <div  key={index} className={'upload__image-container'}>\r\n            <div className=\"upload__image-item\">\r\n                <div className='upload__image-delete'><img src={trashSVG} onClick={()=>deleteItem(index)} alt=\"\"/></div>\r\n                {typeof file !== 'string' ?\r\n                    file?.file?.type.match('image') || file?.Url ?\r\n                        <img src={file?.data_url ? file?.data_url : file?.imgUrl} alt=\"\"/>\r\n                        : file.file.type.match('application/pdf')\r\n                        ? <span\r\n                            className={'upload__file-itemText'}>{file.file.type.toUpperCase().split('APPLICATION/')}</span>\r\n                        : <span></span>\r\n                    : <img src={file} alt=\"\"/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )})\r\n\r\n    return (\r\n        <div className=\"upload__image-wrapper\" onClick={()=>setError('')}>\r\n            <div {...getRootProps({className : 'upload__image-uploadBtn'})}>\r\n                <input {...getInputProps()} />\r\n                <img src={uploadBtnSVG} alt=\"\"/>\r\n                Нажмите или перетащите файл, чтобы загрузить\r\n            </div>\r\n            <div className={'upload__image-container'}>\r\n                {thumbs}\r\n            </div>\r\n            {error && <span className='formErrorMessage'>{error}</span>}\r\n        </div>\r\n    );\r\n    }\r\n export default ImgUploader\r\n","import React from 'react'\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\n\r\nconst PhoneInput = ({name,setFieldValue,placeholder,value})=>{\r\n    const onChange = (value)=>setFieldValue(name,value.replace(/[\\ \\(\\)\\-]/g, \"\"))\r\n    return(\r\n        <InputMask\r\n            mask=\"\\+\\9\\9\\6\\ (999) 99-99-99\"\r\n            placeholder={'+996 (___) __-__-__'}\r\n            name={name}\r\n            onChange={e=>onChange(e.target.value)}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default  PhoneInput","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n\r\nconst CheckInput = ({name,value,setFieldValue})=>{\r\n    const [checked,setCheck] = useState(value)\r\n    useEffect(()=>{\r\n        setFieldValue(name,checked)\r\n    },[checked])\r\n    return(\r\n        <label className=\"tableItem-checkbox-label\"\r\n               style={{marginTop: '15px'}}\r\n        >\r\n            <input className=\"tableItem-checkbox__default\" name={name}\r\n                   type=\"checkbox\"\r\n                   onChange={()=>setCheck(!checked)}\r\n               defaultChecked={value}\r\n               />\r\n            <span className=\"tableItem-checkbox__new\"></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default CheckInput","import React, {useEffect} from 'react'\r\nimport {toBeautifyFieldsValue} from \"../../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst SelectItem = props=>{\r\n\r\n    return (\r\n        typeof props.data === 'object' ?\r\n        <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data.id,props.data.name ?\r\n                                                props.data.name :\r\n                                                props.data.fullName)\r\n        }}>\r\n            {toBeautifyFieldsValue(props.data.name ? props.data.name : props.data.fullName ) }\r\n        </li>\r\n            :\r\n            <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data,props.data)\r\n            }}>\r\n                {toBeautifyFieldsValue(props.data)}\r\n            </li>\r\n\r\n    )\r\n}\r\nexport default SelectItem","import React, {useEffect, useRef} from 'react'\r\nimport SelectItem from \"./SelectItem\";\r\n\r\nconst SelectBlock = ({handleClick, setVisibleSelector, data})=> {\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e) => {\r\n        if (!selectorRef.current.contains(e.target)) {\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('click', closeSelector, false)\r\n        return () => {\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    }, [])\r\n\r\n    const elements = data.map((item,index) => <SelectItem key={index} data={item} handleClick={handleClick} />)\r\n    return (\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBlock","import React, {useEffect, useRef, useState} from 'react'\r\nimport {openList, plusSVG} from \"../../../assets/icons\";\r\nimport SelectBlock from \"./SelectBlock\";\r\n\r\n\r\n\r\nconst SelectField = ({data=[],name,value,setFieldValue,placeholder})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selectedValue,setSelectedValue] = useState('')\r\n    const selectedItem = (id,text)=>{\r\n        setFieldValue(name,id)\r\n        setSelectedValue(text)\r\n    }\r\n    useEffect(()=>{\r\n        data.map(item=>{\r\n            if(typeof item==='object'){\r\n                if(item.id===value){\r\n                    setSelectedValue(item?.name ? item.name : item.fullName)\r\n                }\r\n            }else{\r\n                if(item===value){\r\n                    setSelectedValue(item)\r\n                }\r\n            }\r\n        })\r\n    },[data])\r\n    return(\r\n        <div className={'selectorInput'} onClick={(event)=>setVisibleSelector(!visibleSelector)}>\r\n\r\n            <input type={'text'}\r\n                   readOnly\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   value={selectedValue}\r\n            />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"/>\r\n            {(visibleSelector && data.length!==0) && <SelectBlock data={data}  setVisibleSelector={setVisibleSelector} handleClick = {selectedItem}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectField\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Map, SearchControl, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n    console.log()\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n    console.log(props.value)\r\n    const [place, setPlace] = React.useState({\r\n        id: props.value?.id || \"\",\r\n        city: props.value?.city || \"\",\r\n        country: props.value?.country || \"\",\r\n        region: props.value?.region || \"\",\r\n        street: props.value?.street || \"\",\r\n    });\r\n    const [address, setAddress] = React.useState(`${place.country} ${place.city} ${place.region} ${place.street}`);\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,place)\r\n    },[place])\r\n    const createPlacemark = (coords) => {\r\n\r\n        return new ymaps.current.Placemark(\r\n            coords,\r\n            {\r\n                iconCaption: \"Секунду...\"\r\n            },\r\n            {\r\n                preset: \"islands#violetDotIconWithCaption\",\r\n                draggable: false\r\n            },\r\n        );\r\n    };\r\n\r\n    const getAddress = (coords) => {\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            setPlace({\r\n                id: props.value?.id,\r\n                city: firstGeoObject.getLocalities()[0] || '',\r\n                country:firstGeoObject.getCountry() || '',\r\n                region: firstGeoObject.getAdministrativeAreas()[0] || '',\r\n                street: firstGeoObject.getThoroughfare() || ''\r\n            })\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <input type=\"text\" readOnly name={props.name} value={address}/>\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n\r\n\r\n                >\r\n                    <SearchControl options={{ float: 'right' }} />\r\n                </Map>\r\n\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport SelectorInput from \"../Inputs/SelectorInput/SelectorInput\";\r\nimport ImgUploader from \"../ImgUploader/ImgUploader\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport CheckInput from \"../Inputs/CheckInput/CheckInput\";\r\nimport SelectField from \"../Inputs/Selector/SelectField\";\r\nimport MapBlock from \"../Inputs/MapBlock/MapBlock\";\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                placeholder,\r\n                type='',\r\n               selectInputData=[],\r\n               selectorProperty,\r\n               options=[],\r\n                       clearSelectorData,\r\n                       fileTypes,\r\n                       imageCount,\r\n                       readOnly=false,\r\n    ...props\r\n                   })=>{\r\n    return(\r\n        <div className=\"createOrEditField\">\r\n            <label htmlFor={name}>{label}</label>\r\n            {type === 'selectInput' ?\r\n                <Field name={name} placeholder={placeholder}>\r\n                    {({field: {name, value}, form: {setFieldValue}}) => {\r\n                    return (\r\n                    <SelectorInput\r\n                    setFieldValue={setFieldValue}\r\n                    value={value}\r\n                    name={name}\r\n                    data={selectInputData}\r\n                    placeholder={placeholder}\r\n                    />\r\n                    )\r\n                }}\r\n                </Field>\r\n\r\n                : type==='phone' ?\r\n                    <Field name={name} >\r\n                     {({field:{name,value},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} value={value}/>}\r\n                    </Field>\r\n                        : type==='check' ?\r\n                            <Field   name={name} >\r\n                                {({field:{name,value},form: { setFieldValue}})=><CheckInput value={value} setFieldValue={setFieldValue} name={name} />}\r\n                          </Field>\r\n                : type==='selector' ?\r\n                            <Field name={name} placeholder={placeholder}>\r\n                                {({field: {name, value}, form: {setFieldValue}}) => {\r\n                                   return <SelectField\r\n                                       data={options[selectorProperty]}\r\n                                       setFieldValue={setFieldValue}\r\n                                       value={value}\r\n                                       name={name}\r\n                                       placeholder={placeholder}\r\n                                   />\r\n                                }}\r\n                                </Field>\r\n\r\n\r\n                : type==='textarea' ?\r\n                    <Field name={name} as={'textarea'} placeholder={placeholder} />\r\n\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              fileTypes={fileTypes}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name} >\r\n              {({field:{name,value},form: { setFieldValue}}) => <MapBlock\r\n                                                                setFieldValue={setFieldValue}\r\n                                                                value={value}\r\n                                                                name={name}/>}\r\n                </Field>\r\n                :\r\n                         <Field name={name} placeholder={placeholder} readOnly={readOnly} />\r\n\r\n            }\r\n\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik, useFormikContext} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = Object.keys(props.initialVals).map((item,index)=>{\r\n        return(\r\n            <FormInput\r\n                key={item}\r\n                name={item}\r\n                placeholder={props.inputConfig[index]?.placeholder}\r\n                label={props.inputConfig[index]?.label}\r\n                type={props.inputConfig[index]?.type}\r\n                selectInputData={props.inputConfig[index]?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={props.inputConfig[index]?.selectorProperty}\r\n                fileTypes={props.inputConfig[index]?.fileTypes}\r\n                imageCount={props.inputConfig[index]?.imageCount}\r\n                readOnly={props.inputConfig[index]?.readonly}\r\n            />\r\n        )\r\n    })\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            {props.formTitle &&\r\n            <div className={'createOrEditContainer__title'}>\r\n                <Link to={props.urlToTable}><img src={backSVG} alt=\"\"/></Link>\r\n                <h2>{props.formTitle}</h2>\r\n            </div>\r\n            }\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values)=>{\r\n                  await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n\r\n                    return (\r\n                    <Form>\r\n                        {inputs}\r\n                        <div className={\"createOrEditContainer__btns\"}>\r\n                            <EditBtn\r\n\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                        <CancelBtn urlToTable={props.urlToTable}/>\r\n                        </div>\r\n                    </Form>\r\n                )}}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default Former","import * as Yup from \"yup\";\r\n\r\nexport const validationGenerator = (key, config)=>{\r\n    let schema = {}\r\n    key.map((item,index)=> {\r\n        if(config[index]?.dataType) {\r\n            switch (config[index].dataType) {\r\n                case 'number':\r\n                    schema[item] = Yup.number();\r\n                    break;\r\n                default:\r\n                    schema[item] = Yup.string()\r\n            }\r\n        }\r\n            else{\r\n                schema[item] = Yup.string()\r\n            }\r\n\r\n\r\n\r\n        if(config[index]?.required){\r\n            schema[item] =  schema[item].required(config[index].required)\r\n        }\r\n        if(config[index]?.min){\r\n            schema[item] =  schema[item].min(config[index].min)\r\n        }\r\n        if(config[index]?.max){\r\n            schema[item] =  schema[item].min(config[index].max)\r\n        }\r\n        if(config[index]?.nullable){\r\n            schema[item] =  schema[item].nullable(config[index].nullable)\r\n        }\r\n    })\r\n    return schema\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id) {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n        return ()=>{\r\n            if(props.clearSelectorData) {\r\n                for(let i=0;i<props.clearSelectorData.length;i++){\r\n                    props.clearSelectorData[i]()\r\n                }\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        (!isLoading && props.valueById && match.params.id) || (!isLoading && !props.valueById && !match.params.id)\r\n            ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n        : <Preloader />\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","import React, {useEffect, useRef, useState} from 'react'\r\nimport Header from \"../Header/Header\";\r\nimport SidebarList from \"../Sidebar/SidebarList\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport Table from \"../Table/Table\";\r\nimport RecordViewerContainer from \"../RecordViewer/RecordViewerContainer\";\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n    isLoading,\r\n    hasData,\r\n    clearTable,\r\n    recordViewValuesConfig,\r\n    clearSelectorData,\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n                      })=>{\r\n    const clickOnRecord=(id)=>history.push(`/${pageUrl}/view/${id}`)\r\n    return(\r\n        <>\r\n                    <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n                            <h2 className='page-content__title'>{pageTitle}</h2>\r\n\r\n                            <Table\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                                adding={adding}\r\n                                urlToCreate = {`/${pageUrl}/${pageUrl}-creator`}\r\n                                deleteFunc = {deleteFunc}\r\n                                hasData={hasData}\r\n                                clearTable={clearTable}\r\n                            />\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                clearSelectorData={clearSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                isLoading={isLoading}\r\n\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                clearSelectorData={clearSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        <Route path={`/${pageUrl}/view/:id`}>\r\n                            <RecordViewerContainer\r\n                                titles={recordViewTitlesConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n                                urlToTable={`/${pageUrl}`}\r\n\r\n\r\n                                recordViewValuesConfig={recordViewValuesConfig}\r\n                                valueById={valueById}\r\n                                getByIdFunc={getByIdFunc}\r\n                                clearFunc={clearFunc}\r\n                                isLoading={isLoading}\r\n\r\n                                editing={editing}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PageRenderer)","import React from \"react\";\r\nexport const OrderColumns  =[\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'orderStatus',\r\n        render: (value)=>\r\n            value==='Ожидает доставку'  || value ==='Оплачен, ожидает доставку' ?\r\n            <span style={{background: '#FF6800',color: '#f2f2f2',borderRadius: '5px',padding: '3px',margin: '3px 0'}}>{value}</span>\r\n            :value==='Доставлен' || value === 'Доставлен и оплачен' ? <span style={{background: '#009B00',color: '#f2f2f2',borderRadius: '5px',padding: '3px'}}>{value}</span>\r\n            :value==='Закрыт' ? <span style={{background: '#fff',color: '#000',borderRadius: '5px',padding: '3px'}}>{value}</span> : value\r\n\r\n        }\r\n\r\n]","export const recordViewOrderConfig  =[\r\n    {\r\n        title: \"Номер заказа\",\r\n        dataIndex: 'orderNumber'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n      title: \"Заказчик\",\r\n      dataIndex: 'client'\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'product',\r\n    },\r\n    {\r\n        title: \"Сумма\",\r\n      dataIndex: 'totalPrice'\r\n    },\r\n    {\r\n        title: \"Адрес доставки\",\r\n        dataIndex: 'deliveryAddress',\r\n    },\r\n    {\r\n        title: \"Тип доставки\",\r\n        dataIndex: 'deliveryType',\r\n    },\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType',\r\n    },\r\n    {\r\n        title: \"Адрес склада\",\r\n        dataIndex: 'storageAddress',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'cashPaymentOrderStatus',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'orderStatus',\r\n    },\r\n\r\n]","import {addressData} from \"../../components/Inputs/SelectorInput/data/addressData\";\r\n\r\nexport const orderInputConfig = [\r\n    {\r\n        label: 'Имя',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Фамилия',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Номер телефона',\r\n        readonly: true\r\n    },\r\n    {\r\n    label: \"Адрес доставки\",\r\n   placeholder: \"Бишкек Советская Боконбаева\",\r\n    readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Тип доставки\",\r\n        placeholder: \"Самовывоз/Курьер\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'deliveryType',\r\n    },\r\n    {\r\n        label: \"Дата заказа\",\r\n        readonly: true\r\n    },\r\n    {\r\n        label: \"Тип оплаты\",\r\n        placeholder: \"Эльсом/Наличные\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'paymentType',\r\n    },\r\n    {\r\n        label: \"Адрес склада\",\r\n        placeholder: \"Бишкек Советская Боконбаева\",\r\n        readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Статус заказа\",\r\n        placeholder: \"Выберите статус\",\r\n        type: 'selector',\r\n        selectorProperty: 'status',\r\n    }\r\n   ]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearOrder, getOrderById, createOrder, deleteOrder, getOrders, updateOrder, clearOrders\r\n} from \"../../redux/reducers/orderReducer\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {OrderColumns} from \"../../configs/Orders/tableColumnsConfig\";\r\nimport {recordViewOrderConfig} from \"../../configs/Orders/recordViewConfig\";\r\nimport {orderInputConfig} from \"../../configs/Orders/inputFormConfig\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst OrdersPage = ({orders,orderById,clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder,...props})=>{\r\n    console.log(orderById)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'orders'}\r\n            pageTitle ={'Заказы'}\r\n\r\n            tableData={orders}\r\n            tableColumnsConfig={OrderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewOrderConfig}\r\n            recordViewValuesConfig={{\r\n                orderNumber: orderById?.orderNumber,\r\n                client: <div>{orderById?.lastName} {orderById?.firstName}  | {orderById?.phoneNumber}</div>,\r\n                orderStatus: orderById?.orderStatus ,\r\n                deliveryAddress:orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                elsomPaymentOrderStatus: orderById?.elsomPaymentOrderStatus,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                product:  orderById?.products?.map(item=>{\r\n                    return <div><span>{item.product.name}</span>  <span>{`${item.amount}  ${item.product?.measureUnitResponse?.name}`}</span>  <span> {`${item.totalPrice} ${toBeautifyFieldsValue(item?.product?.currency)}`}  </span></div>\r\n                }),\r\n                totalPrice: orderById?.orderTotalPrice\r\n            }}\r\n\r\n            optionsForSelectorData={{\r\n                status:  [ 'AWAITING_DELIVERY','DELIVERED_AND_PAID','PAID_AWAITNG_DELIVERY', 'DELIVERED', 'CLOSED'],\r\n                deliveryType: ['COURIER', 'STORAGE'],\r\n                paymentType: ['ELSOM','CASH']\r\n\r\n            }}\r\n            formInputsConfig ={orderInputConfig}\r\n            creatorTitle={'Создание заказа'}\r\n            updaterTitle={'Редактирование заказа'}\r\n           adding={false}\r\n            updaterInitialFormValues={{\r\n                firstName: orderById?.firstName,\r\n                lastName: orderById?.lastName,\r\n                phoneNumber: orderById?.phoneNumber,\r\n                deliveryAddress: orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                orderStatus: orderById?.orderStatus,\r\n\r\n            }}\r\n\r\n            getDataFunc={getOrders}\r\n            valueById={orderById}\r\n            getByIdFunc={getOrderById}\r\n            createFunc={createOrder}\r\n            updateFunc={updateOrder}\r\n            clearFunc={clearOrder}\r\n            deleteFunc={deleteOrder}\r\n            isLoading={props.orderFetchLoader}\r\n            hasData={props.hasOrders}\r\n            clearTable = {props.clearOrders}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orders: state.order.orders,\r\n        orderById: state.order.orderById,\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        hasOrders: state.order.hasOrders\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        clearOrder,\r\n        getOrderById,\r\n        createOrder,\r\n        deleteOrder,\r\n        getOrders,\r\n        updateOrder,clearOrders\r\n    }\r\n)(OrdersPage)\r\n","import {CLEAR_USERS, DELETED_USER, SEARCHING, USER_TOGGLE_FETCH_LOADER, WRITE_USER_BY_ID, WRITE_USERS} from './types'\r\nimport {\r\n\r\n    userDelByIdReq,\r\n    userGetByIdReq, usersGetReq, userUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    users: [],\r\n    userById: {},\r\n    hasUsers: true,\r\n    userFetchLoader: false\r\n}\r\n\r\n\r\nexport const userReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_USERS:\r\n            return{\r\n                ...state,\r\n                users: [...state.users,...action.payload],\r\n                hasUsers: checkHasData(action.payload)\r\n            }\r\n        case USER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                userFetchLoader: action.payload\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                hasUsers: true\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: []\r\n            }\r\n        case WRITE_USER_BY_ID:\r\n            return{\r\n                ...state,\r\n                userById: action.payload\r\n            }\r\n        case DELETED_USER:\r\n            return{\r\n                ...state,\r\n                users: updateItemInStore(state.users,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: WRITE_USER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const userToggleLoader = bool=>{\r\n    return{\r\n        type: USER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearUsers = ()=>{\r\n    return{\r\n        type: CLEAR_USERS\r\n    }\r\n}\r\nexport const getUsers = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, usersGetReq, WRITE_USERS, userToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getUserById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, userGetByIdReq, WRITE_USER_BY_ID, userToggleLoader,id,toggleNotification)\r\n}\r\nexport const deleteUser = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,userDelByIdReq,id[i],userToggleLoader,DELETED_USER,toggleNotification)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (data,id)=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,userUpdReq,data,userToggleLoader,id)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport const UsersColumns  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n\r\n]","export const recordViewUserConfig  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n    {\r\n        title: \"Отчество\",\r\n        dataIndex: 'middleName',\r\n    },\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'address',\r\n    },\r\n    // {\r\n    //     title: \"Фото пасспорта\",\r\n    //     dataIndex: 'passport',\r\n    // },\r\n    // {\r\n    //     title: \"Фото сертификата\",\r\n    //     dataIndex: 'sertificate',\r\n    // },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearUser, clearUsers, deleteUser, getUserById, getUsers} from \"../../redux/reducers/userReducer\";\r\nimport {UsersColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {recordViewUserConfig} from \"../../configs/Users/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({   users,\r\n                            userById,\r\n                            getUsers,\r\n                            getUserById,\r\n                            deleteUser,\r\n                            clearUser,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'users'}\r\n            pageTitle ={'Пользователи'}\r\n\r\n            tableData={users}\r\n            tableColumnsConfig={UsersColumns}\r\n\r\n            recordViewTitlesConfig={recordViewUserConfig}\r\n\r\n\r\n\r\n            getDataFunc={getUsers}\r\n            valueById={userById}\r\n            getByIdFunc={getUserById}\r\n            clearFunc={clearUser}\r\n            deleteFunc={deleteUser}\r\n            adding={false}\r\n            editing={false}\r\n            isLoading={props.userFetchLoader}\r\n            hasData={props.hasUsers}\r\n            clearTable = {props.clearUsers}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        hasUsers: state.user.hasUsers\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        getUserById,\r\n        deleteUser,\r\n        clearUser,clearUsers\r\n    }\r\n)(CategoriesPage)\r\n","import React from \"react\";\r\n\r\nexport const ProductColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Категория\",\r\n        dataIndex: 'category',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Поставщик\",\r\n        dataIndex: 'supplier',\r\n        object: 'fullName'\r\n    },\r\n]","export const recordViewProductConfig  =[{\r\n    title: \"Название товара\",\r\n        dataIndex: 'name',\r\n},\r\n{\r\n    title: \"Категория товара\",\r\n        dataIndex: 'category',\r\n},\r\n    {\r\n        title: \"Поставщик товара\",\r\n        dataIndex: 'supplier',\r\n    },\r\n\r\n{\r\n    title: \"Описание\",\r\n        dataIndex: 'description',\r\n},\r\n{\r\n    title: \"Цена товара\",\r\n        dataIndex: 'price',\r\n},\r\n{\r\n    title: \"Количество товара\",\r\n        dataIndex: 'measure',\r\n},\r\n    {\r\n        title: \"Фото товара\",\r\n        dataIndex: 'images',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: 'Рейтинг товара',\r\n        dataIndex: 'raiting',\r\n\r\n    },\r\n    {\r\n        title: 'Количество покупок',\r\n        dataIndex: 'boughtCount'\r\n    },\r\n    {\r\n        title: 'Комментарии',\r\n        dataIndex: 'comments'\r\n    }\r\n\r\n    ]","export const productInputConfig = [\r\n    {\r\n        label: \"Название товара\",\r\n        placeholder: \"Картошка\",\r\n        required: 'Введите название товара',\r\n    },\r\n    {\r\n        label: \"Категория товара\",\r\n        placeholder: \"Выберите категорию товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        required: 'Выберите категорию товара',\r\n        nullable: true,\r\n    },\r\n    {\r\n        label: \"Поставщик товара\",\r\n        placeholder: \"Выберите поставщика товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'provider',\r\n        nullable: true,\r\n        required: 'Выберите поставщика товара',\r\n\r\n    },\r\n\r\n    {\r\n        label: \"Описание товара\",\r\n        placeholder: \"Самый вкусный картофель\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Цена товара\",\r\n        placeholder: \"30 сом/кг\",\r\n        dataType: 'number',\r\n        required: 'Укажите цену товара',\r\n    },\r\n    {\r\n        label: \"Валюта\",\r\n        type: 'selector',\r\n        selectorProperty: 'currency',\r\n        nullable: true,\r\n        placeholder: \"сом\",\r\n        required: 'Укажите валюту',\r\n    },\r\n    {\r\n        label: \"Количество товара\",\r\n        placeholder: \"100500\",\r\n        dataType: 'number',\r\n        required: 'Укажите количество товара',\r\n    },\r\n    {\r\n        label: \"Ед.измерения\",\r\n        type: 'selector',\r\n        selectorProperty: 'units',\r\n        nullable: true,\r\n        placeholder: \"кг\",\r\n        required: 'Укажите ед.измерения',\r\n    },\r\n    {\r\n        label: \"Фото товара\",\r\n        type: 'image',\r\n        fileTypes:'image/jpeg,image/png',\r\n        imageCount: 6\r\n    },\r\n\r\n    ]\r\n\r\n","export const toClearImageArray = data => {\r\n    return data.length!==0 ? data.map(item=>item?.file ? item.file: item) : null\r\n}","import {\r\n    WRITE_PRODUCTS,\r\n    WRITE_PRODUCT_BY_ID,\r\n    WRITE_RAITING_BY_ID,\r\n    SEARCHING,\r\n    WRITE_MEASURE_UNITS,\r\n    PRODUCT_TOGGLE_FETCH_LOADER, DELETED_CATEGORY, DELETED_PRODUCT, CLEAR_PRODUCTS,\r\n} from './types'\r\nimport {\r\n    productsGetReq,\r\n    productPostReq,\r\n    productUpdReq,\r\n    productDelByIdReq,\r\n    productImgPostReq,\r\n    productGetByIdReq, productImgUpdReq,  measureUnitGetReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleLoader, toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    products: [],\r\n    productById: {},\r\n    ratingById: undefined,\r\n    hasProducts: true,\r\n    measureUnits: [],\r\n    productFetchLoader: false\r\n\r\n}\r\n\r\n\r\nexport const productReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                productFetchLoader: action.payload\r\n            }\r\n        case WRITE_MEASURE_UNITS:\r\n            return{\r\n                ...state,\r\n                measureUnits: action.payload,\r\n            }\r\n        case WRITE_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                products: [...state.products,...action.payload],\r\n                hasProducts: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: []\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                products: [],\r\n                hasProducts: true\r\n            }\r\n        case WRITE_PRODUCT_BY_ID:\r\n            return{\r\n                ...state,\r\n                productById: action.payload\r\n            }\r\n        case WRITE_RAITING_BY_ID:\r\n            return{\r\n                ...state,\r\n                ratingById: action.payload\r\n            }\r\n        case DELETED_PRODUCT:\r\n            return{\r\n                ...state,\r\n                products: updateItemInStore(state.products,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const productToggleLoader = bool=>{\r\n    return{\r\n        type: PRODUCT_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const clearProducts = ()=>{\r\n    return{\r\n        type: CLEAR_PRODUCTS\r\n    }\r\n}\r\nexport const clearProduct = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        payload: {}\r\n    }\r\n}\r\nexport const getMeasureUnits = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,measureUnitGetReq,WRITE_MEASURE_UNITS,toggleLoader,toggleNotification)\r\n}\r\nexport const getProducts = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, productsGetReq, WRITE_PRODUCTS, productToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getProductById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, productGetByIdReq, WRITE_PRODUCT_BY_ID, productToggleLoader,id,toggleNotification)\r\n}\r\nexport const createProduct = data=>{\r\n    return async dispatch => {\r\n            dispatch(productToggleLoader(true))\r\n            await productPostReq(data)\r\n                .then(async resp => {\r\n                    if (data.images) {\r\n                        const formData = new FormData()\r\n                        toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                        formData.append('productId', resp.data.result.id)\r\n                        await productImgPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                            isOpen: true,\r\n                            title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                            body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                        })))\r\n                            .catch(() => dispatch(toggleNotification({\r\n                                isOpen: true,\r\n                                title: 'Ошибка!',\r\n                                body:  'Запись не добавлена!'\r\n                            })))\r\n                    }\r\n                })\r\n            dispatch(productToggleLoader(false))\r\n    }\r\n}\r\nexport const deleteProduct = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,productDelByIdReq,id[i],productToggleLoader,DELETED_PRODUCT,toggleNotification)\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateProduct = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(productToggleLoader(true))\r\n        await productUpdReq(data,id)\r\n            .then( async resp=>{\r\n                if(data.images) {\r\n                    const formData = new FormData()\r\n                    toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                    formData.append('productId', resp.data.result.id)\r\n                    await productImgPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                        body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n                    })))\r\n                        .catch(() => dispatch(toggleNotification({\r\n                            isOpen: true,\r\n                            title: 'Ошибка!',\r\n                            body:  'Запись не изменена!'\r\n                        })))\r\n                }\r\n            })\r\n\r\n        dispatch(productToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import {providerImgPostReq} from \"../api/Request\";\r\n\r\n\r\nexport const formDataProviderTemplate = async (id,data,key)=>{\r\n    const formData = new FormData()\r\n    formData.append('supplierId', id)\r\n    formData.append('supplierFileType', key)\r\n    data[key].map(item=>formData.append('images',item.file))\r\n    await providerImgPostReq(formData)\r\n}","import {\r\n    WRITE_PROVIDER,\r\n    WRITE_PROVIDER_BY_ID,\r\n    WRITE_ACTIVE_PROVIDERS,\r\n    DELETED_PROVIDER, SEARCHING, PROVIDER_TOGGLE_FETCH_LOADER, CLEAR_PROVIDERS,\r\n} from './types'\r\nimport {\r\n    providerGetByIdReq,\r\n    providersGetReq,\r\n    providerPostReq,\r\n    providerUpdReq,\r\n    providerDelByIdReq,\r\n    providerActiveGetReq, providerPlaceOfProductionPostReq, providerPlaceOfProductionUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {formDataProviderTemplate} from \"../../utils/templates/formDataTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    providers: [],\r\n    providerById: {},\r\n    activeProviders: [],\r\n    hasProvider: true,\r\n    providerFetchLoader: false\r\n}\r\n\r\n\r\nexport const providerReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PROVIDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                providerFetchLoader: action.payload\r\n            }\r\n        case WRITE_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: [...state.providers,...action.payload],\r\n                hasProvider: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_PROVIDERS:\r\n            return {\r\n                ...state,\r\n                providers: []\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                providers: [],\r\n                hasProvider: true\r\n            }\r\n        case WRITE_PROVIDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                providerById: action.payload\r\n            }\r\n        case WRITE_ACTIVE_PROVIDERS:\r\n            return{\r\n                ...state,\r\n                activeProviders: action.payload\r\n            }\r\n\r\n        case DELETED_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: updateItemInStore(state.providers,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearProvider = ()=>{\r\n    return{\r\n        type: WRITE_PROVIDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const clearProviders = ()=>{\r\n    return{\r\n        type: CLEAR_PROVIDERS\r\n    }\r\n}\r\nexport const clearActiveProviders = ()=>{\r\n    return{\r\n        type: WRITE_ACTIVE_PROVIDERS,\r\n        payload: []\r\n    }\r\n}\r\nexport const providerToggleLoader = bool=>{\r\n    return{\r\n        type: PROVIDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getActiveProviders = (page)=>{\r\n    return async dispatch => getTemplate(dispatch,providerActiveGetReq,WRITE_ACTIVE_PROVIDERS,providerToggleLoader,page,toggleNotification)\r\n}\r\nexport const getProviders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, providersGetReq, WRITE_PROVIDER, providerToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getProviderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, providerGetByIdReq, WRITE_PROVIDER_BY_ID, providerToggleLoader,id,toggleNotification)\r\n}\r\nexport const createProvider = (data)=>{\r\n    console.log(data)\r\n        return async dispatch => {\r\n            dispatch(providerToggleLoader(true))\r\n            await providerPlaceOfProductionPostReq(data.placeOfProduction).then(async res=> {\r\n                const newData = data\r\n                newData['placeOfProductionId'] = res.data.result.id\r\n                await providerPostReq(newData)\r\n                    .then(resp => {\r\n                        if(data.PASSPORT.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'PASSPORT')\r\n                        }\r\n                        if(data.SERTIFICATE.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'SERTIFICATE')\r\n                        }\r\n                        if(data.CONTRACT.length) {\r\n                            formDataProviderTemplate(resp.data.result.id, data, 'CONTRACT')\r\n                        }\r\n                    }).then(response=>dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                        body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                    })))\r\n                    .catch(() => dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: 'Ошибка!',\r\n                        body:  'Запись не добавлена!'\r\n                    })))\r\n                dispatch(providerToggleLoader(false))\r\n            })\r\n        }\r\n}\r\nexport const deleteProvider = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,providerDelByIdReq,id[i],providerToggleLoader,DELETED_PROVIDER,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateProvider = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(providerToggleLoader(true))\r\n        await providerPlaceOfProductionUpdReq(data.placeOfProduction,data.placeOfProduction.id).then(async res=> {\r\n            const newData = data\r\n            newData['placeOfProductionId'] = res.data.result.id\r\n            await providerUpdReq(newData,id)\r\n                .then(resp => {\r\n                    if(data.PASSPORT.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'PASSPORT')\r\n                    }\r\n                    if(data.SERTIFICATE.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'SERTIFICATE')\r\n                    }\r\n                    if(data.CONTRACT.length) {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'CONTRACT')\r\n                    }\r\n                }).then(response=>dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                    body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n                })))\r\n                .catch(() => dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: 'Ошибка!',\r\n                    body:  'Запись не изменена!'\r\n                })))\r\n            dispatch(providerToggleLoader(false))\r\n        })\r\n    }\r\n}\r\n\r\n","import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    DELETED_CATEGORY,\r\n    SEARCHING, CATEGORY_TOGGLE_FETCH_LOADER, CLEAR_CATEGORIES\r\n} from './types'\r\nimport {\r\n    categoryDelByIdReq,\r\n    categoryGetByIdReq,\r\n     categoryGetSearchReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    searchedCategories: [],\r\n    hasCategories: true,\r\n    categoryFetchLoader: false\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case CATEGORY_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                categoryFetchLoader: action.payload\r\n            }\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: [...state.categories,...action.payload],\r\n                hasCategories: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: []\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                categories: [],\r\n                hasCategories: true\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n        case DELETED_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearCategories = ()=>{\r\n    return{\r\n        type: CLEAR_CATEGORIES\r\n    }\r\n}\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n    }\r\n}\r\nexport const categoryToggleLoader = bool=>{\r\n    return{\r\n        type: 'CATEGORY_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getCategory = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, categoryGetSearchReq, WRITE_CATEGORIES, categoryToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, categoryToggleLoader,id,toggleNotification)\r\n}\r\nexport const createCategory = data=>{\r\n        return async dispatch => {\r\n                dispatch(categoryToggleLoader(true))\r\n                const formData = new FormData()\r\n                formData.append('categoryRequest', new Blob([JSON.stringify({\r\n                    \"name\": `${data.name}`,\r\n                    \"description\": data.description,\r\n                    \"parentCategoryId\": data.parentCategoryId\r\n                })], {type: \"application/json\"}));\r\n                if (toClearImageArray(data.image) !== null && data.parentCategoryId===null) {\r\n                    toClearImageArray(data.image).map(item => formData.append('image', item))\r\n                } else {\r\n                    formData.append('image', null)\r\n                }\r\n                await categoryPostReq(formData).then(response=>dispatch(toggleNotification({\r\n                    isOpen: true,\r\n                    title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                    body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись добавлена!'\r\n                })))\r\n                    .catch(() => dispatch(toggleNotification({\r\n                        isOpen: true,\r\n                        title: 'Ошибка!',\r\n                        body:  'Запись не добавлена!'\r\n                    })))\r\n                dispatch(categoryToggleLoader(false))\r\n        }\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n          await deleteTemplate(dispatch,categoryDelByIdReq,id[i],categoryToggleLoader,DELETED_CATEGORY,toggleNotification)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(categoryToggleLoader(true))\r\n        const formData = new FormData()\r\n        formData.append('categoryRequest', new Blob([JSON.stringify({\r\n            \"id\": data.id,\r\n            \"name\": `${data.name}`,\r\n            \"description\": data.description,\r\n            \"parentCategoryId\": data.parentCategoryId\r\n        })], {type: \"application/json\"}));\r\n\r\n        if (toClearImageArray(data.image) !== null && data.parentCategoryId===null) {\r\n            toClearImageArray(data.image).map(item => formData.append('image', item))\r\n        } else {\r\n            formData.append('image', null)\r\n        }\r\n        await categoryUpdReq(formData,id)\r\n            .then(response=>dispatch(toggleNotification({\r\n                isOpen: true,\r\n                title: response.data?.resultCode === 'DUPLICATE' ? 'Ошибка!' : 'Успех!',\r\n                body: response.data?.resultCode === 'DUPLICATE' ? 'Такая запись уже есть в списке!' :'Запись изменена!'\r\n            })))\r\n            .catch(() => dispatch(toggleNotification({\r\n                isOpen: true,\r\n                title: 'Ошибка!',\r\n                body:  'Запись не изменена!'\r\n            })))\r\n        dispatch(categoryToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\n\r\n\r\nimport {ProductColumns} from \"../../configs/Products/tableColumnsConfig\";\r\nimport {recordViewProductConfig} from \"../../configs/Products/recordViewConfig\";\r\nimport {productInputConfig} from \"../../configs/Products/inputFormConfig\";\r\nimport {\r\n    clearProduct, clearProducts,\r\n    createProduct,\r\n    deleteProduct, getMeasureUnits,\r\n    getProductById,\r\n    getProducts,\r\n    updateProduct\r\n} from \"../../redux/reducers/productReducer\";\r\nimport {clearActiveProviders, getActiveProviders} from \"../../redux/reducers/providerReducer\";\r\nimport {clearCategories, getCategory} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\nconst ProductsPage = ({   products,\r\n                          productById,\r\n                          ratingById,\r\n                          getProducts,\r\n                          getProductById,\r\n                          createProduct,\r\n                          updateProduct,\r\n                          deleteProduct,\r\n                          clearProduct,\r\n                          categories,\r\n                          activeProviders,\r\n                          getCategory,\r\n                          getActiveProviders,\r\n                          hasProducts,\r\n                          measureUnits,\r\n                          getMeasureUnits,\r\n    ...props\r\n                      })=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'products'}\r\n            pageTitle ={'Товары'}\r\n\r\n            tableData={products}\r\n            tableColumnsConfig={ProductColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProductConfig}\r\n\r\n            creatorTitle={'Создание товара'}\r\n            updaterTitle={'Редактирование товара'}\r\n            formInputsConfig={productInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : [],\r\n                provider: activeProviders  ? [...activeProviders] : [],\r\n                currency: ['SOM','USD'],\r\n                units: measureUnits  ?  [...measureUnits] : []\r\n            }}\r\n            recordViewValuesConfig={{\r\n                name: productById?.name,\r\n                category: productById?.category?.name,\r\n                supplier: productById?.supplier?.fullName,\r\n                description: productById?.description,\r\n                price: `${productById?.price} ${productById?.currency}`,\r\n                measure: `${productById?.measure} ${productById?.measureUnitResponse?.name}`,\r\n                images: productById?.productImages?.map(item=>item.imageUrl),\r\n                boughtCount: productById?.boughtCount,\r\n                raiting: productById?.raiting,\r\n                comments: productById?.comment?.map(item=>{\r\n                    return <div><span>{`${item.client?.lastName} ${item.client?.firstName} ${item.client?.middleName}`}</span>\r\n                        <span>{item.client?.email}</span>  <span> {item.comment} </span></div>\r\n                })\r\n\r\n            }}\r\n            loadSelectorData={[getCategory,getActiveProviders,getMeasureUnits]}\r\n            clearSelectorData = {[props.clearCategories,props.clearActiveProviders]}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                categoryId: null,\r\n                supplierId: null,\r\n                description: '',\r\n                price: 0,\r\n                currency: '',\r\n                measure: 0,\r\n                measureUnitId: 0,\r\n                images: []\r\n            }}\r\n            updaterInitialFormValues={{\r\n                name: productById?.name,\r\n                categoryId: productById?.category?.id,\r\n                supplierId: productById?.supplier?.id,\r\n                description: productById?.description,\r\n                price: productById?.price,\r\n                currency: productById?.currency,\r\n                measure: productById?.measure,\r\n                measureUnitId: productById?.measureUnitResponse?.id,\r\n                images: productById?.productImages?.map(item=>item.imageUrl)\r\n            }}\r\n            getDataFunc={getProducts}\r\n            valueById={productById}\r\n            getByIdFunc={getProductById}\r\n            createFunc={createProduct}\r\n            updateFunc={updateProduct}\r\n            clearFunc={clearProduct}\r\n            deleteFunc={deleteProduct}\r\n            hasData={hasProducts}\r\n            isLoading={props.productFetchLoader}\r\n            clearTable = {props.clearProducts}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        products: state.product.products,\r\n        hasProducts: state.product.hasProducts,\r\n        productById: state.product.productById,\r\n        ratingById: state.product.ratingById,\r\n        categories: state.category.categories,\r\n        activeProviders: state.provider.activeProviders,\r\n        measureUnits : state.product.measureUnits,\r\n        productFetchLoader: state.product.productFetchLoader,\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getActiveProviders,\r\n        getProducts,\r\n        getProductById,\r\n        createProduct,\r\n        updateProduct,\r\n        deleteProduct,\r\n        clearProduct,\r\n        getMeasureUnits,\r\n        clearProducts,\r\n        clearCategories,\r\n        clearActiveProviders\r\n    }\r\n)(ProductsPage)\r\n","\r\nexport const providerInputConfig = [\r\n    {\r\n    label: \"ФИО\",\r\n    placeholder: \"Анисимова Виктория Викторовна\",\r\n    required: \"Укажите имя поставщика\",\r\n    },\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"+(999) 00-00-00\",\r\n        required: \"Укажите телефон поставщика\",\r\n        type: 'phone'\r\n    },\r\n    {\r\n        label: \"E-mail\",\r\n        placeholder: \"example@gmail.com\",\r\n    },\r\n    {\r\n        label: \"Адрес\",\r\n        placeholder: \"Чуйская область Бишкек\",\r\n        type: 'map',\r\n        required: \"Укажите адрес поставщика\",\r\n    },\r\n    {\r\n        label: \"Товары\",\r\n        placeholder: \"Картошка,...\",\r\n        required: \"Укажите товары поставщика\",\r\n    },\r\n    {\r\n        label: \"Банковский счет\",\r\n        placeholder: \"40702810500000000001\",\r\n    },\r\n    {\r\n        label: \"Фото паспорта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 2\r\n    },\r\n    {\r\n        label: \"Фото сертификата\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Фото контракта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Статус\",\r\n        type: 'check'\r\n    },\r\n\r\n    ]","import {badStatusSVG, goodStatusSVG} from \"../../assets/icons\";\r\nimport React from \"react\";\r\n\r\nexport const ProviderColumns  =[\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'isActive',\r\n        render: (value)=>value? <img src={goodStatusSVG} /> : <img src={badStatusSVG} alt=\"\"/>\r\n    }\r\n]","export const recordViewProviderConfig  =[\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n    },\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'produces',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'placeOfProduction',\r\n    },\r\n    {\r\n        title: \"Фото паспорта\",\r\n        dataIndex: 'PASSPORT',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Фото сертификата\",\r\n        dataIndex: 'SERTIFICATE',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Фото контракта\",\r\n        dataIndex: 'CONTRACT',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'isActive',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearProvider, clearProviders,\r\n    createProvider,\r\n    deleteProvider, getProviderById,\r\n    getProviders,\r\n    updateProvider\r\n} from \"../../redux/reducers/providerReducer\";\r\nimport {providerInputConfig} from \"../../configs/Providers/inputFormConfig\";\r\nimport {ProviderColumns} from \"../../configs/Providers/tableColumnsConfig\";\r\nimport {recordViewProviderConfig} from \"../../configs/Providers/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst ProvidersPage = ({providers,providerById,getProviders,getProviderById,createProvider,updateProvider,deleteProvider,clearProvider,...props})=>{\r\n    console.log(providerById)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'providers'}\r\n            pageTitle ={'Поставщики'}\r\n\r\n            tableData={providers}\r\n            tableColumnsConfig={ProviderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProviderConfig}\r\n            recordViewValuesConfig={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction:  <span>\r\n                    {providerById?.placeOfProduction?.country}\r\n                    <br/>\r\n                        {providerById?.placeOfProduction?.region}\r\n                        <br/>{providerById?.placeOfProduction?.city}<br/>\r\n                            {providerById?.placeOfProduction?.street}\r\n                        </span>,\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            creatorTitle={'Создание поставщика'}\r\n            updaterTitle={'Редактирование поставщика'}\r\n            formInputsConfig={providerInputConfig}\r\n            creatorInitialFormValues={{\r\n                fullName: '',\r\n                phone: '',\r\n                email: '',\r\n                placeOfProduction: {},\r\n                produces: '',\r\n                walletNumber: '',\r\n                PASSPORT: [],\r\n                SERTIFICATE: [],\r\n                CONTRACT: [],\r\n                isActive: false\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction: {\r\n                    id: providerById?.placeOfProduction?.id,\r\n                    country: providerById?.placeOfProduction?.country,\r\n                    city: providerById?.placeOfProduction?.city,\r\n                    region: providerById?.placeOfProduction?.region,\r\n                    street: providerById?.placeOfProduction?.street\r\n                },\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            getDataFunc={getProviders}\r\n            valueById={providerById}\r\n            getByIdFunc={getProviderById}\r\n            createFunc={createProvider}\r\n            updateFunc={updateProvider}\r\n            clearFunc={clearProvider}\r\n            deleteFunc={deleteProvider}\r\n            isLoading={props.providerFetchLoader}\r\n            hasData={props.hasProvider}\r\n            clearTable = {props.clearProviders}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        providers: state.provider.providers,\r\n        providerById: state.provider.providerById,\r\n        providerFetchLoader: state.provider.providerFetchLoader,\r\n        hasProvider: state.provider.hasProvider\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getProviders,\r\n        getProviderById,\r\n        createProvider,\r\n        updateProvider,\r\n        deleteProvider,\r\n        clearProvider,clearProviders\r\n    }\r\n)(ProvidersPage)\r\n","import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img src={checkPasSVG} alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PasswordInput from \"../Inputs/PasswordInput/PasswordInput\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport {connect} from \"react-redux\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport {writeAuthMessage} from \"../../redux/reducers/mainReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst AuthForm = (props)=>{\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required(),\r\n                password: Yup.string().required(),\r\n            })}\r\n            onSubmit={(values)=>props.submitHandler(values)}\r\n        >\r\n            <Form\r\n                onClick={()=>props.writeAuthMessage('')}\r\n            >\r\n                <Field name=\"username\" placeholder=\"Логин\">\r\n                    {({field:{name},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} />}\r\n                </Field>\r\n                <Field name=\"password\" >\r\n                    {({field:{name},form: { setFieldValue}})=> <PasswordInput setFieldValue={setFieldValue} name={name} placeholder=\"Пароль\"/>}\r\n                </Field>\r\n                {props.authFetchLoader || props.userFetchLoader ? <Preloader /> :\r\n                <button className={\"auth__btn\"} type={'submit'}>Войти</button>\r\n                }\r\n                {props.authErrorMessage && <ErrorMsg text={props.authErrorMessage}/>}\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authErrorMessage: state.main.authErrorMessage,\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeAuthMessage})(AuthForm)","import React from 'react'\r\nimport AuthForm from \"./AuthForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {authSignIn, togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\nconst AuthContainer = ({authSignIn})=>{\r\n\r\n    const submitHandler = (values)=>authSignIn(values)\r\n    return(\r\n        <AuthForm submitHandler={submitHandler}/>\r\n    )\r\n}\r\n\r\nexport default connect(null,{authSignIn})(AuthContainer)","import React from 'react'\r\nimport './AuthPage.css'\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container'>\r\n           <div className=\"auth__block\">\r\n               <div className=\"auth__title\">Авторизация</div>\r\n               <AuthContainer />\r\n           </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","export const recordViewCategoryConfig  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n\r\n        dataIndex: 'imagePath',\r\n        type: 'image'\r\n    },\r\n]","export const CategoryColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n\r\n    },\r\n]","export const categoryInputConfig = [{\r\n    label: \"Название\",\r\n    placeholder: \"Овощи\",\r\n    required: \"Введите название категории\",\r\n\r\n},\r\n    {\r\n        label: \"Описание\",\r\n        placeholder: \"...\",\r\n    },\r\n    {\r\n        label: \"Родительская категория\",\r\n        placeholder: \"Выберите родительскую категорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        nullable: true\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n        dataIndex: 'image',\r\n        type: 'image',\r\n        fileTypes:'image/svg+xml',\r\n    },\r\n]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearCategories,\r\n    clearCategory,\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById, updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {recordViewCategoryConfig} from \"../../configs/Categories/recordViewConfig\";\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/inputFormConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categories,hasCategories,categoryById,getSearchedCategory,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n            recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Создание категории'}\r\n            updaterTitle={'Редактирование категории'}\r\n            formInputsConfig={categoryInputConfig}\r\n            loadSelectorData={[getCategory]}\r\n            clearSelectorData = {[props.clearCategories]}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : []\r\n            }}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                description: '',\r\n                parentCategoryId: null,\r\n                image: ''}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                description: categoryById?.description,\r\n                parentCategoryId: categoryById?.parentCategory?.id ? categoryById.parentCategory.id :  null,\r\n                image:  categoryById?.imagePath\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n            clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n            hasData={hasCategories}\r\n            isLoading={props.categoryFetchLoader}\r\n            clearTable = {props.clearCategories}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById,\r\n        hasCategories: state.category.hasCategories,\r\n        categoryFetchLoader: state.category.categoryFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        clearCategory,\r\n        clearCategories\r\n    }\r\n    )(CategoriesPage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isLoading: state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","import  React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            <div className={'createOrEditContainer__title'}><Link to={props.urlToBack}><img src={backSVG} alt=\"\"/></Link> <h2>{\"Редактирование профиля\"}</h2></div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: props.profile?.firstName,\r\n                    lastName: props.profile?.lastName,\r\n                    middleName: props.profile?.middleName,\r\n                    email: props.profile?.email\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    firstName: Yup.string().nullable(),\r\n                    lastName: Yup.string().nullable(),\r\n                    middleName: Yup.string().nullable(),\r\n                    email: Yup.string().nullable()\r\n                })}\r\n                onSubmit={(values)=>props.handleSubmit(values)}\r\n            >\r\n                {({handleSubmit,errors,values}) => {\r\n\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'firstName'}>Имя\r\n                                <Field name=\"firstName\" placeholder=\"Виктория\"/>\r\n                                <span className='authError'><ErrorMessage name=\"firstName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'lastName'}>Фамилия\r\n                                <Field name=\"lastName\" placeholder=\"Ансимова\"/>\r\n                                <span className='authError'><ErrorMessage name=\"lastName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'middleName'}>Отчество\r\n                                <Field name=\"middleName\" placeholder=\"Викторовна\"/>\r\n                                <span className='authError'><ErrorMessage name=\"middleName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'email'}>E-mail\r\n                                    <Field name=\"email\" placeholder=\"example.com\"/>\r\n                                    <span className='authError'><ErrorMessage name=\"email\"/></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    urlToTable={'providers'}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n                                <CancelBtn\r\n                                    urlToTable={'providers'}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;","import React, {useEffect} from 'react'\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport {getUserById, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst ProfileContainer = (props)=>{\r\n    useEffect(()=>{\r\n        if(props.userId) {\r\n            props.getUserById(props.userId)\r\n        }\r\n    },[props.userId])\r\n    const handleSubmit = values=>props.updateUser(values,localStorage.getItem('id'))\r\n\r\n    return(\r\n        !props.userFetchLoader && !props.authFetchLoader && props.profile   ?\r\n        <ProfileForm {...props} handleSubmit={handleSubmit}/> :\r\n            <Preloader />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        userId: state.main.userId,\r\n        profile: state.user.userById\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateUser,getUserById})(ProfileContainer)","import React from 'react'\r\n\r\nimport ProfileContainer from \"../../components/Profile/ProfileContainer\";\r\n\r\n\r\n\r\n\r\nconst ProfilePage = ()=>{\r\n\r\n    return(\r\n    <ProfileContainer urlToBack={'/providers'}/>\r\n    )\r\n}\r\n\r\nexport  default ProfilePage","import {\r\n    WRITE_FAQ,\r\n    WRITE_FAQ_BY_ID,\r\n    SEARCHING, FAQ_TOGGLE_FETCH_LOADER, DELETED_FAQ, CLEAR_FAQ\r\n} from './types'\r\nimport {\r\n    faqDelByIdReq,\r\n    faqGetByIdReq,\r\n    faqGetReq,\r\n    faqPostReq,\r\n    faqUpdReq\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\n\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    faq: [],\r\n    faqById: {},\r\n    hasFaq: true,\r\n    faqFetchLoader: false\r\n}\r\n\r\n\r\nexport const faqReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case FAQ_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                faqFetchLoader: action.payload\r\n            }\r\n        case WRITE_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: [...state.faq,...action.payload],\r\n                hasFaq: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_FAQ:\r\n            return {\r\n                ...state,\r\n                faq: []\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                faq: [],\r\n                hasFaq: true\r\n            }\r\n        case WRITE_FAQ_BY_ID:\r\n            return{\r\n                ...state,\r\n                faqById: action.payload\r\n            }\r\n        case DELETED_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: updateItemInStore(state.faq,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearFaqs = ()=>{\r\n    return{\r\n        type: CLEAR_FAQ\r\n    }\r\n}\r\nexport const faqToggleLoader = bool=>{\r\n    return{\r\n        type: FAQ_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getFaq = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, faqGetReq, WRITE_FAQ, faqToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getFaqById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, faqGetByIdReq, WRITE_FAQ_BY_ID, faqToggleLoader,id,toggleNotification)\r\n}\r\nexport const createFaq = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqPostReq,data,faqToggleLoader,'',toggleNotification)\r\n}\r\nexport const deleteFaq = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,faqDelByIdReq,id[i],faqToggleLoader,DELETED_FAQ,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateFaq = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqUpdReq,data,faqToggleLoader,id,toggleNotification)\r\n}\r\nexport const clearFaq = ()=>{\r\n    return{\r\n        type: WRITE_FAQ_BY_ID,\r\n        action: []\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport './pageLoader.css'\r\nimport {loaderLogoSVG} from '../../assets/icons'\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {connect} from \"react-redux\";\r\nimport {Transition,Spring,config} from \"react-spring/renderprops\";\r\nimport {togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\nconst PageLoader = ({isPageLoader})=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"box\" ><img src={loaderLogoSVG}  alt=\"\"/></div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n\r\n        isPageLoader: state.main.isPageLoader,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{togglePageLoader})(PageLoader)","export const faqInputConfig = [{\r\n    label: \"Вопрос\",\r\n    placeholder: \"...\",\r\n    required: \"Введите вопрос\",\r\n    type: 'textarea'\r\n\r\n},\r\n    {\r\n        label: \"Ответ\",\r\n        placeholder: \"...\",\r\n        required: \"Введите ответ\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const FaqColumns  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewFaqConfig  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearFaq,\r\n    clearFaqs,\r\n    createFaq,\r\n    deleteFaq,\r\n    getFaq,\r\n    getFaqById,\r\n    updateFaq\r\n} from \"../../redux/reducers/faqReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {faqInputConfig} from \"../../configs/Faq/inputFormConfig\";\r\nimport {FaqColumns} from \"../../configs/Faq/tableColumnsConfig\";\r\nimport {recordViewFaqConfig} from \"../../configs/Faq/recordViewConfig\";\r\n\r\n\r\nconst FaqPage = props=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'faq'}\r\n            pageTitle ={'FAQ'}\r\n\r\n            tableData={props.faq}\r\n            tableColumnsConfig={FaqColumns}\r\n\r\n            recordViewTitlesConfig={recordViewFaqConfig}\r\n\r\n            creatorTitle={'Создание вопроса-ответа'}\r\n            updaterTitle={'Редактирование вопроса-ответа'}\r\n            formInputsConfig={faqInputConfig}\r\n            creatorInitialFormValues={{\r\n                question: \"\",\r\n                answer: \"\",\r\n                order: \"\"\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                question: props.faqById?.question,\r\n                answer: props.faqById?.answer,\r\n                order: props.faqById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getFaq}\r\n            valueById={props.faqById}\r\n            getByIdFunc={props.getFaqById}\r\n            createFunc={props.createFaq}\r\n            updateFunc={props.updateFaq}\r\n            deleteFunc={props.deleteFaq}\r\n            clearFunc={props.clearFaq}\r\n            isLoading={props.faqFetchLoader}\r\n            hasData={props.hasFaq}\r\n            clearTable = {props.clearFaqs}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        faq: state.faq.faq,\r\n        faqById: state.faq.faqById,\r\n        faqFetchLoader: state.faq.faqFetchLoader,\r\n        hasFaq: state.faq.hasFaq\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getFaq,\r\n        getFaqById,\r\n        createFaq,\r\n        updateFaq,\r\n        deleteFaq,\r\n        clearFaq,clearFaqs\r\n    }\r\n)(FaqPage)\r\n","import {\r\n    WRITE_ABOUT_US,\r\n    WRITE_ABOUT_US_BY_ID,\r\n    DELETED_ABOUT_US,\r\n    SEARCHING, ABOUT_TOGGLE_FETCH_LOADER, WRITE_PRODUCT_BY_ID, CLEAR_CATEGORIES, CLEAR_ABOUT_US\r\n} from './types'\r\nimport {\r\n    aboutUsDelByIdReq,\r\n    aboutUsGetByIdReq,\r\n    aboutUsGetReq,\r\n    aboutUsPostReq,\r\n    aboutUsUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleNotification} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    aboutUs: [],\r\n    aboutUsById: {},\r\n    hasAbout: true,\r\n    aboutFetchLoader: false\r\n}\r\n\r\n\r\nexport const aboutUsReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ABOUT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                aboutFetchLoader: action.payload\r\n            }\r\n        case WRITE_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: [...state.aboutUs,...action.payload],\r\n                hasAbout: checkHasData(action.payload)\r\n            }\r\n        case CLEAR_ABOUT_US:\r\n            return {\r\n                ...state,\r\n                aboutUs: []\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                aboutUs: [],\r\n                hasAbout: true\r\n            }\r\n        case WRITE_ABOUT_US_BY_ID:\r\n            return{\r\n                ...state,\r\n                aboutUsById: action.payload\r\n            }\r\n        case DELETED_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: updateItemInStore(state.aboutUs,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearAboutUses = ()=>{\r\n    return{\r\n        type: CLEAR_ABOUT_US\r\n    }\r\n}\r\nexport const aboutToggleLoader = bool=>{\r\n    return{\r\n        type: 'ABOUT_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearAboutUs = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getAboutUs = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, aboutUsGetReq, WRITE_ABOUT_US, aboutToggleLoader,page,searchText,toggleNotification)\r\n}\r\nexport const getAboutUsById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, aboutUsGetByIdReq, WRITE_ABOUT_US_BY_ID, aboutToggleLoader,id,toggleNotification)\r\n}\r\nexport const createAboutUs = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsPostReq,data,aboutToggleLoader,'',toggleNotification)\r\n}\r\nexport const deleteAboutUs = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,aboutUsDelByIdReq,id[i],aboutToggleLoader,DELETED_ABOUT_US,toggleNotification)\r\n        }\r\n    }\r\n}\r\nexport const updateAboutUs = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsUpdReq,data,aboutToggleLoader,id,toggleNotification)\r\n}\r\n\r\n","export const aboutUsInputConfig = [{\r\n    label: \"Заголовок\",\r\n    placeholder: \"Заголовок...\",\r\n},\r\n    {\r\n        label: \"Параграф\",\r\n        placeholder: \"...\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const AboutUsColumns  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewAboutUsConfig  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearAboutUs, clearAboutUses,\r\n    createAboutUs,\r\n    deleteAboutUs,\r\n    getAboutUs,\r\n    getAboutUsById,\r\n    updateAboutUs\r\n} from \"../../redux/reducers/aboutUsReducer\";\r\nimport {aboutUsInputConfig} from \"../../configs/AboutUs/inputFormConfig\";\r\nimport {AboutUsColumns} from \"../../configs/AboutUs/tableColumnsConfig\";\r\nimport {recordViewAboutUsConfig} from \"../../configs/AboutUs/recordViewConfig\";\r\n\r\n\r\nconst AboutUsPage = props=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'aboutus'}\r\n            pageTitle ={'О нас'}\r\n\r\n            tableData={props.aboutUs}\r\n            tableColumnsConfig={AboutUsColumns}\r\n\r\n            recordViewTitlesConfig={recordViewAboutUsConfig}\r\n\r\n            creatorTitle={'Создание параграфа \"О нас\"'}\r\n            updaterTitle={'Редактирование параграфа \"О нас\"'}\r\n            formInputsConfig={aboutUsInputConfig}\r\n            creatorInitialFormValues={{\r\n                header: '',\r\n                paragraph: '',\r\n                order: ''\r\n            }}\r\n            updaterInitialFormValues={{\r\n\r\n                header: props.aboutUsById?.header,\r\n                paragraph: props.aboutUsById?.paragraph,\r\n                order: props.aboutUsById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getAboutUs}\r\n            valueById={props.aboutUsById}\r\n            getByIdFunc={props.getAboutUsById}\r\n            createFunc={props.createAboutUs}\r\n            updateFunc={props.updateAboutUs}\r\n            deleteFunc={props.deleteAboutUs}\r\n            clearFunc={props.clearAboutUs}\r\n            hasData={props.hasAbout}\r\n            isLoading={props.aboutFetchLoader}\r\n            clearTable = {props.clearAboutUses}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        aboutUs: state.aboutUs.aboutUs,\r\n        aboutUsById: state.aboutUs.aboutUsById,\r\n        aboutFetchLoader: state.aboutUs.aboutFetchLoader,\r\n        hasAbout: state.aboutUs.hasAbout\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getAboutUs,\r\n        getAboutUsById,\r\n        createAboutUs,\r\n        updateAboutUs,\r\n        deleteAboutUs,\r\n        clearAboutUs,clearAboutUses\r\n    }\r\n)(AboutUsPage)\r\n","\r\nexport const settingsInputConfig = [\r\n    {\r\n    label: \"Цена за доставку\",\r\n    placeholder: \"150\",\r\n    required: \"Укажите цену доставки\",\r\n    }\r\n    ]","import React, {useEffect} from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDeliveryCash, updateDeliveryCash} from \"../../redux/reducers/orderReducer\";\r\nimport {settingsInputConfig} from \"../../configs/Settings/inputFormConfig\";\r\n\r\n\r\n\r\nconst SettingsPage  = props=>{\r\n    useEffect(()=>{\r\n        props.getDeliveryCash()\r\n    },[])\r\n    return(\r\n        <>\r\n            <h2 className='page-content__title'>Настройки</h2>\r\n            <FormContainer\r\n                valueById={props.deliveryCash}\r\n                initialVals={{\r\n                    deliveryPrice: props.deliveryCash?.deliveryPrice\r\n                }}\r\n                createReq={props.updateDeliveryCash}\r\n                inputConfig={settingsInputConfig}\r\n                isLoading={props.orderFetchLoader}\r\n                urlToTable={'/settings'}\r\n            />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        deliveryCash: state.order.deliveryCash\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateDeliveryCash,getDeliveryCash})(SettingsPage)","import React from 'react'\r\nimport {  notification } from 'antd';\r\nimport {connect} from \"react-redux\";\r\nimport './Notification.css'\r\nconst Notification = props =>{\r\n    const key = 'updatable';\r\n    const openNotification = () => {\r\n        notification.open({\r\n            key,\r\n            message: props.notification.title,\r\n            description: props.notification.body,\r\n        });\r\n        setTimeout(() => {\r\n            notification.open({\r\n                key,\r\n                message: props.notification.title,\r\n                description:  props.notification.body,\r\n            });\r\n        }, 1000);\r\n    };\r\n    return(\r\n        <div>\r\n            { props.notification.isOpen && openNotification()}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        notification: state.main.notification\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Notification)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport OrdersPage from './pages/Orders/OrdersPage';\r\nimport UsersPage from './pages/Users/UsersPage';\r\nimport ProductsPage from './pages/Products/ProductsPage';\r\nimport ProvidersPage from './pages/Providers/ProvidersPage';\r\nimport AuthPage from \"./pages/Auth/AuthPage\";\r\nimport CategoriesPage from \"./pages/Categories/CategoriesPage\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfilePage from \"./pages/Profile/ProfilePage\";\r\nimport {authRefresh, toggleAuth} from \"./redux/reducers/mainReducer\";\r\nimport {getUserById} from \"./redux/reducers/userReducer\";\r\nimport {expChecker} from \"./components/Auth/expChecker\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {logout} from \"./components/Auth/logout\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport PageLoader from \"./components/pageLoader/pageLoader\";\r\nimport FaqPage from \"./pages/Faq/FaqPage\";\r\nimport AboutUsPage from \"./pages/AboutUs/AboutUsPage\";\r\nimport SettingsPage from \"./pages/Settings/SettingsPage\";\r\nimport Notification from \"./components/Notification/Notification\";\r\n\r\nfunction App(props) {\r\n\r\n    useEffect( ()=>{\r\n        if (expChecker()) {                    //проверка на время токена\r\n            props.toggleAuth(true)\r\n            setTimeout(() =>props.toggleAuth(false),expChecker())\r\n        } else if (tokensChecker()) {                            //отправка на новый токен\r\n            const fetch = () => {\r\n                props.authRefresh({\r\n                    accessToken: localStorage.getItem('accessToken'),\r\n                    refreshToken: localStorage.getItem('refreshToken'),\r\n                    username: props.username\r\n                })\r\n            }\r\n           fetch()\r\n        } else {                                                            //выход из аккаунта\r\n            props.toggleAuth(false)\r\n            logout()\r\n            props.history.push('/')\r\n        }\r\n    },[props.isAuthorized])\r\n\r\n  return(\r\n            <>\r\n                {props.modal.isOpen && <Modal/>}\r\n\r\n                  {props.isAuthorized ?\r\n                      <>\r\n                          <Notification />\r\n                          <Header/>\r\n                          <div className=\"container\">\r\n                              <SidebarList/>\r\n                              <div className=\"page-content\">\r\n                                  <Switch>\r\n                                      <Route path={'/orders'} component={OrdersPage}/>\r\n                                      <Route path={'/users'} component={UsersPage}/>\r\n                                      <Route path={'/products'} component={ProductsPage}/>\r\n                                      <Route path={'/categories'} component={CategoriesPage}/>\r\n                                      <Route path={'/providers'} component={ProvidersPage}/>\r\n                                      <Route path={'/profile'} exact component={ProfilePage}/>\r\n                                      <Route path={'/faq'}  component={FaqPage}/>\r\n                                      <Route path={'/aboutus'}  component={AboutUsPage}/>\r\n                                      <Route path={'/settings'}  component={SettingsPage}/>\r\n                                  </Switch>\r\n                              </div>\r\n                          </div>\r\n                      </>\r\n                      :\r\n                      <>\r\n                          <Switch>\r\n                              <Route path={'/'} exact component={AuthPage}/>\r\n                          </Switch>\r\n\r\n                      </>\r\n                  }\r\n             </>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        visible : state.modal.isOpenModal.isOpen,\r\n        isAuthorized: state.main.isAuthorized,\r\n        isPageLoader: state.main.isPageLoader,\r\n        userById: state.user.userById,\r\n        providerById: state.provider.providerById,\r\n        productById: state.product.productById,\r\n        categoryById: state.category.categoryById,\r\n        categories: state.category.categories,\r\n        users: state.user.users,\r\n        products: state.product.products,\r\n        providers: state.provider.providers,\r\n        isLoading : state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal,\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserById,authRefresh})(withRouter(App));\r\n","export const tokensChecker = ()=>{\r\n    const accessToken = localStorage.getItem('accessToken')\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    if(refreshToken && accessToken){\r\n        return true\r\n    }\r\n    return false\r\n}","import { combineReducers } from \"redux\";\r\nimport {tableReducer} from \"./tableReducer\";\r\nimport {modalReducer} from \"./modalReducer\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {productReducer} from \"./productReducer\";\r\nimport {providerReducer} from \"./providerReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {orderReducer} from \"./orderReducer\";\r\nimport {aboutUsReducer} from \"./aboutUsReducer\";\r\nimport {faqReducer} from \"./faqReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    main: mainReducer,\r\n    table: tableReducer,\r\n    modal: modalReducer,\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    provider: providerReducer,\r\n    user:userReducer,\r\n    order: orderReducer,\r\n    faq: faqReducer,\r\n    aboutUs: aboutUsReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport {rootReducer} from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk,\r\n        ),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}