{"version":3,"sources":["assets/icons/category.svg","assets/icons/about.svg","assets/icons/user.svg","assets/icons/delivery.svg","assets/icons/package.svg","assets/icons/radish.svg","assets/icons/information.svg","assets/icons/search.svg","assets/icons/badStatus.svg","assets/icons/goodStatus.svg","assets/icons/delete.svg","assets/icons/back.svg","assets/icons/checkPassword.svg","assets/icons/plus.svg","assets/icons/openList.svg","assets/icons/Rolling-0.6s-197px.svg","assets/icons/Rolling-0.6s-197px2.svg","assets/active_icons/category_active.svg","assets/active_icons/provider_active.svg","assets/active_icons/product_active.svg","assets/active_icons/user_active.svg","assets/active_icons/quest_active.svg","assets/active_icons/about_active.svg","assets/active_icons/order_active.svg","assets/active_icons/settings_active.svg","assets/icons/settings.svg","assets/img/logo.svg","assets/img/loader-logo.svg","assets/icons/error.svg","assets/icons/upload-button.svg","assets/icons/edit.svg","assets/icons/trash.svg","assets/icons/leftArrow.svg","redux/reducers/types.js","utils/api/Request.js","utils/templates/getTemplate.jsx","utils/templates/createOrChangeTemplate.js","utils/templates/deleteTemplate.js","utils/checkHasData.js","utils/templates/getSearchedTemplate.js","redux/reducers/orderReducer.js","components/Auth/logout.js","redux/reducers/mainReducer.js","components/Auth/expChecker.js","components/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Sidebar/SidebarItem.jsx","components/Sidebar/sideBarConfig.js","components/Sidebar/SidebarList.jsx","components/Search-panel/SearchPanel.jsx","components/Btns/AddBtn.jsx","redux/reducers/modalReducer.jsx","redux/reducers/tableReducer.js","components/Btns/DeleteBtn.jsx","components/Table/TableItemColumn.jsx","utils/toBeatifyFiledsValue.js","components/Table/Table-item.jsx","components/Modals/ErrorMessage.jsx","components/Table/Table.jsx","components/RecordViewer/RecordViewer.jsx","components/RecordViewer/RecordViewerContainer.jsx","components/Btns/EditBtn.jsx","components/Btns/CancelBtn.jsx","components/Inputs/SelectorInput/SelectorItem.jsx","components/Inputs/SelectorInput/SelectorList.jsx","components/Inputs/SelectorInput/Selector.js","components/Inputs/SelectorInput/SelectorInput.jsx","utils/toUglyfyFieldsValue.js","components/ImgUploader/ImgUploader.jsx","components/Inputs/PhoneInput/PhoneInput.jsx","components/Inputs/CheckInput/CheckInput.jsx","components/Inputs/Selector/SelectItem.js","components/Inputs/Selector/SelectBlock.js","components/Inputs/Selector/SelectField.jsx","components/Inputs/MapBlock/MapBlock.jsx","components/FormGenerator/FormInput.jsx","components/FormGenerator/Former.jsx","components/FormGenerator/validationGenerator.js","components/FormGenerator/FormContainer.jsx","components/PageRenderer/PageRendererContainer.jsx","configs/Orders/tableColumnsConfig.js","configs/Orders/recordViewConfig.js","components/Inputs/SelectorInput/data/addressData.js","configs/Orders/inputFormConfig.js","pages/Orders/OrdersPage.jsx","redux/reducers/userReducer.js","configs/Users/tableColumnsConfig.js","configs/Users/recordViewConfig.js","pages/Users/UsersPage.jsx","configs/Products/tableColumnsConfig.js","configs/Products/recordViewConfig.js","configs/Products/inputFormConfig.js","utils/templates/toClearImageArray.js","redux/reducers/productReducer.js","utils/templates/formDataTemplate.js","redux/reducers/providerReducer.js","redux/reducers/categoryReducer.js","pages/Products/ProductsPage.jsx","configs/Providers/inputFormConfig.js","configs/Providers/tableColumnsConfig.js","configs/Providers/recordViewConfig.js","pages/Providers/ProvidersPage.jsx","components/Inputs/PasswordInput/PasswordInput.jsx","components/Auth/AuthForm.jsx","components/Auth/AuthContainer.jsx","pages/Auth/AuthPage.jsx","configs/Categories/recordViewConfig.js","configs/Categories/tableColumnsConfig.js","configs/Categories/inputFormConfig.js","pages/Categories/CategoriesPage.jsx","components/Modals/Modal.jsx","components/Profile/ProfileForm.jsx","components/Profile/ProfileContainer.jsx","pages/Profile/ProfilePage.jsx","components/pageLoader/pageLoader.js","redux/reducers/faqReducer.js","configs/Faq/inputFormConfig.js","configs/Faq/tableColumnsConfig.js","configs/Faq/recordViewConfig.js","pages/Faq/FaqPage.js","redux/reducers/aboutUsReducer.js","configs/AboutUs/inputFormConfig.js","configs/AboutUs/tableColumnsConfig.js","configs/AboutUs/recordViewConfig.js","pages/AboutUs/AboutUsPage.js","configs/Settings/inputFormConfig.js","pages/Settings/SettingsPage.js","App.jsx","components/Auth/tokensChecker.js","redux/reducers/index.jsx","redux/store.jsx","index.jsx"],"names":["module","exports","SEARCHING","tokenGetter","headers","localStorage","getItem","instance","axios","baseURL","authReq","data","post","then","response","authRefreshReq","categoryGetByIdReq","id","get","categoryPostReq","categoryDelByIdReq","delete","categoryUpdReq","put","categoryGetSearchReq","searchText","page","productsGetReq","productGetByIdReq","productPostReq","productDelByIdReq","productUpdReq","productImgPostReq","entries","pair","console","log","productImgUpdReq","measureUnitGetReq","providersGetReq","providerGetByIdReq","providerPostReq","providerImgPostReq","providerDelByIdReq","providerUpdReq","providerActiveGetReq","usersGetReq","userGetByIdReq","userDelByIdReq","userUpdReq","ordersGetReq","orderGetByIdReq","orderPostReq","orderDelByIdReq","orderUpdReq","deliveryCashGetReq","deliveryCashUpdReq","faqGetReq","faqGetByIdReq","faqPostReq","faqDelByIdReq","faqUpdReq","aboutUsGetReq","aboutUsGetByIdReq","aboutUsPostReq","aboutUsDelByIdReq","aboutUsUpdReq","getTemplate","dispatch","getFunc","actionType","toggleLoader","a","result","type","payload","createOrChangeTemplate","func","deleteTemplate","deleteFunc","resp","catch","checkHasData","length","getSearchedTemplate","initialState","orders","orderById","deliveryCash","hasOrders","orderFetchLoader","orderToggleLoader","bool","logout","removeItem","authFetchLoader","isAuthorized","isPageLoader","authErrorMessage","username","userId","undefined","writeAuthMessage","str","togglePageLoader","toggleAuth","value","getUserName","firstName","phoneNumber","tokenToLocalStorage","setItem","body","accessToken","JSON","stringify","Date","parse","tokenExpirationTime","refreshExpirationTime","refreshToken","expChecker","exp","now","isExpired","token","getExpirationDate","Preloader","props","className","style","width","height","connect","state","main","writeUserId","useEffect","parseInt","to","src","logoSVG","alt","onClick","withRouter","name","svg","activeSvg","history","useState","clicked","setClick","location","pathname","indexOf","classes","classNames","push","sideBarConfig","providerSVG","providerActiveSVG","orderSVG","orderActiveSVG","productSVG","productActiveSVG","userSVG","userActiveSVG","categorySVG","categoryActiveSVG","questionSVG","questionActiveSVG","aboutSVG","aboutActiveSVG","settingsSVG","settingsActiveSVG","elements","map","item","index","key","SearchPanel","searchSVG","placeholder","onChange","event","handleSearchText","target","AddBtn","urlToCreate","isOpenModal","isOpen","title","confirmFunc","urlToTable","toggleModal","obj","recordViewId","elementsToDelete","tableMessage","writeTableMessage","table","confirmHandler","deleteSVG","TableItemColumn","column","render","toBeautifyFieldsValue","NaN","writeElementsToDelete","values","columns","handlerClick","deleting","check","setCheck","buff","splice","boxShadow","valuesToArray","Object","slice","valsKey","keys","i","j","dataIndex","object","tableItemColumn","ErrorMsg","text","errorSVG","isLoading","getDataFunc","adding","hasData","getDataFuncSearch","setSearchText","setPage","useDispatch","timeoutId","setTimeout","clearTimeout","dataLength","next","hasMore","loader","endMessage","textAlign","initialScrollY","titles","urlToUpd","match","editing","recordViewValuesConfig","backSVG","results","Array","isArray","valueChooser","imageUrl","params","array","fieldSearcherInObj","searchedField","prop","valueById","clearFunc","getByIdFunc","disabled","SelectorItem","isOpenList","setOpenList","handleClick","thirdStyle","checked","setChecked","styles","children","openList","SelectorList","Selector","setVisibleSelector","selectorRef","useRef","closeSelector","e","current","contains","document","addEventListener","removeEventListener","ref","SelectorInput","setFieldValue","visibleSelector","selected","setSelected","inputText","setInputText","toUglyfyFieldsValue","plusSVG","ImgUploader","imageCount","fileTypes","files","setFiles","error","setError","getBase64","file","callback","reader","FileReader","readAsDataURL","useDropzone","accept","onDrop","acceptedFiles","split","string","data_url","getRootProps","getInputProps","thumbs","toUpperCase","uploadBtnSVG","PhoneInput","mask","replace","CheckInput","marginTop","defaultChecked","SelectItem","fullName","SelectBlock","SelectField","selectedValue","setSelectedValue","MapBlock","ymaps","React","placemarkRef","mapRef","address","setAddress","enterprise","query","apikey","modules","instanceRef","onLoad","ympasInstance","coords","geometry","setCoordinates","Placemark","iconCaption","preset","draggable","createPlacemark","geoObjects","add","properties","set","geocode","res","firstGeoObject","getAddressLine","balloonContent","getAddress","defaultState","center","zoom","position","FormInput","label","selectInputData","selectorProperty","options","htmlFor","field","form","as","Former","inputs","initialVals","inputConfig","optionsForSelector","schema","config","dataType","Yup","required","min","max","nullable","validationGenerator","formTitle","initialValues","validationSchema","onSubmit","handleSubmit","errors","createReq","updReq","loadSelectorData","pageUrl","pageTitle","tableData","tableColumnsConfig","recordViewTitlesConfig","creatorTitle","updaterTitle","formInputsConfig","optionsForSelectorData","creatorInitialFormValues","updaterInitialFormValues","createFunc","updateFunc","exact","path","OrderColumns","background","color","borderRadius","padding","margin","recordViewOrderConfig","addressData","orderInputConfig","order","clearOrder","action","getOrderById","createOrder","deleteOrder","getOrders","updateOrder","orderNumber","client","lastName","orderStatus","deliveryAddress","deliveryType","desiredDeliveryDate","elsomPaymentOrderStatus","paymentType","storageAddress","product","products","amount","measureUnitResponse","totalPrice","currency","orderTotalPrice","status","users","userById","hasUsers","userFetchLoader","userToggleLoader","getUserById","UsersColumns","recordViewUserConfig","user","getUsers","deleteUser","clearUser","ProductColumns","recordViewProductConfig","productInputConfig","toClearImageArray","productById","ratingById","hasProducts","measureUnits","productFetchLoader","productToggleLoader","formDataProviderTemplate","formData","FormData","append","providers","providerById","activeProviders","hasProvider","providerFetchLoader","providerToggleLoader","categories","categoryById","searchedCategories","hasCategories","categoryFetchLoader","categoryToggleLoader","getCategory","category","provider","getActiveProviders","getProducts","getProductById","createProduct","images","updateProduct","deleteProduct","clearProduct","getMeasureUnits","units","supplier","description","price","measure","productImages","boughtCount","raiting","comments","comment","middleName","email","categoryId","supplierId","measureUnitId","providerInputConfig","ProviderColumns","goodStatusSVG","badStatusSVG","recordViewProviderConfig","getProviders","getProviderById","createProvider","updateProvider","deleteProvider","clearProvider","phone","placeOfProduction","produces","walletNumber","PASSPORT","SERTIFICATE","CONTRACT","isActive","ewalletNumber","supplierFile","filter","supplierFileType","PasswordInput","visiblePassword","setVisiblePassword","checkPasSVG","password","submitHandler","authSignIn","statusCodeValue","AuthPage","recordViewCategoryConfig","CategoryColumns","categoryInputConfig","getCategoryById","createCategory","Blob","parentCategoryId","image","updateCategory","deleteCategory","clearCategory","getSearchedCategory","parentCategory","imagePath","isFetchLoader","modal","ProfileForm","urlToBack","profile","updateUser","ProfilePage","loaderLogoSVG","faq","faqById","hasFaq","faqFetchLoader","faqToggleLoader","faqInputConfig","FaqColumns","recordViewFaqConfig","getFaq","getFaqById","createFaq","updateFaq","deleteFaq","clearFaq","question","answer","aboutUs","aboutUsById","hasAbout","aboutFetchLoader","aboutToggleLoader","aboutUsInputConfig","AboutUsColumns","recordViewAboutUsConfig","getAboutUs","getAboutUsById","createAboutUs","updateAboutUs","deleteAboutUs","header","paragraph","settingsInputConfig","updateDeliveryCash","getDeliveryCash","deliveryPrice","visible","authRefresh","resultCode","tokensChecker","component","OrdersPage","UsersPage","ProductsPage","CategoriesPage","ProvidersPage","FaqPage","AboutUsPage","SettingsPage","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2a3b9307.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/category.6fb1c99f.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.aa636394.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6254b518.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.d6b82ec3.svg\";","module.exports = __webpack_public_path__ + \"static/media/package.4f531e3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/radish.8f2f758d.svg\";","module.exports = __webpack_public_path__ + \"static/media/information.aaab1020.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.4fe23475.svg\";","module.exports = __webpack_public_path__ + \"static/media/badStatus.a3728383.svg\";","module.exports = __webpack_public_path__ + \"static/media/goodStatus.59610b8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.03ad081f.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.dbbc4fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkPassword.daa811a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.26de1661.svg\";","module.exports = __webpack_public_path__ + \"static/media/openList.1e941aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px.1a1f3581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px2.a0c4e4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/category_active.006e9b45.svg\";","module.exports = __webpack_public_path__ + \"static/media/provider_active.d827fc4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_active.844c787a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user_active.414bdbc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/quest_active.fdfd211b.svg\";","module.exports = __webpack_public_path__ + \"static/media/about_active.a58d305c.svg\";","module.exports = __webpack_public_path__ + \"static/media/order_active.688d21b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_active.49551fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.6f4b4b52.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.207a7640.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-logo.f79cb380.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.020896e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-button.70e2dfbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.d1ec101b.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.b8c498a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.addc9207.svg\";","\r\n\r\nexport const WRITE_RECORD_ID = 'WRITE_RECORD_ID'\r\nexport const WRITE_ELEMENTS_TO_DELETE = 'WRITE_ELEMENTS_TO_DELETE'\r\nexport const WRITE_TABLE_MESSAGE = 'WRITE_TABLE_MESSAGE'\r\nexport const SEARCHING='SEARCHING'\r\n\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\nexport const TOGGLE_FETCH_LOADER = 'TOGGLE_FETCH_LOADER'\r\nexport const TOGGLE_PAGE_LOADER = 'TOGGLE_PAGE_LOADER'\r\nexport const WRITE_AUTH_MESSAGE = 'WRITE_AUTH_MESSAGE'\r\nexport const WRITE_USERNAME = 'WRITE_USERNAME'\r\nexport const WRITE_USER_ID = 'WRITE_USER_ID'\r\n\r\n\r\n\r\nexport const WRITE_CATEGORIES = 'WRITE_CATEGORIES'\r\nexport const WRITE_CATEGORY_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const ADDED_CATEGORY = 'ADDED_CATEGORY'\r\nexport const DELETED_CATEGORY = 'DELETED_CATEGORY'\r\nexport const UPDATED_CATEGORY = 'UPDATED_CATEGORY'\r\nexport const CATEGORY_TOGGLE_FETCH_LOADER = 'CATEGORY_TOGGLE_FETCH_LOADER'\r\n\r\n\r\n\r\nexport const TOGGLE_AUTH ='TOGGLE_AUTH'\r\n\r\n\r\nexport const WRITE_PRODUCTS = 'WRITE_PRODUCTS'\r\nexport const WRITE_PRODUCT_BY_ID = 'WRITE_PRODUCT_BY_ID'\r\nexport const WRITE_RAITING_BY_ID = 'WRITE_RAITING_BY_ID'\r\nexport const ADDED_PRODUCT = 'ADDED_PRODUCT'\r\nexport const DELETED_PRODUCT = 'DELETED_PRODUCT'\r\nexport const UPDATED_PRODUCT = 'UPDATED_PRODUCT'\r\nexport const WRITE_MEASURE_UNITS='WRITE_MEASURE_UNITS'\r\nexport const PRODUCT_TOGGLE_FETCH_LOADER='PRODUCT_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_PROVIDER_BY_ID = 'WRITE_PROVIDER_BY_ID'\r\nexport const WRITE_PROVIDER = 'WRITE_PROVIDER'\r\nexport const WRITE_ACTIVE_PROVIDERS = 'WRITE_ACTIVE_PROVIDERS'\r\nexport const ADDED_PROVIDER = 'ADDED_PROVIDER'\r\nexport const DELETED_PROVIDER = 'DELETED_PROVIDER'\r\nexport const UPDATED_PROVIDER = 'UPDATED_PROVIDER'\r\nexport const PROVIDER_TOGGLE_FETCH_LOADER = 'PROVIDER_TOGGLE_FETCH_LOADER'\r\n\r\nexport const WRITE_USERS = 'WRITE_USERS'\r\nexport const WRITE_USER_BY_ID = 'WRITE_USER_BY_ID'\r\nexport const DELETED_USER = 'DELETED_USER'\r\nexport const USER_TOGGLE_FETCH_LOADER = 'USER_TOGGLE_FETCH_LOADER'\r\n\r\nexport const WRITE_ORDERS = 'WRITE_ORDERS'\r\nexport const WRITE_ORDER_BY_ID = 'WRITE_ORDER_BY_ID'\r\nexport const ADDED_ORDER = 'ADDED_ORDER'\r\nexport const DELETED_ORDER = 'DELETED_ORDER'\r\nexport const UPDATED_ORDER = 'UPDATED_ORDER'\r\nexport const ORDER_TOGGLE_FETCH_LOADER = 'ORDER_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_DELIVERY_CASH = 'WRITE_DELIVERY_CASH'\r\n\r\n\r\nexport const WRITE_FAQ = 'WRITE_FAQ'\r\nexport const WRITE_FAQ_BY_ID = 'WRITE_FAQ_BY_ID'\r\nexport const ADDED_FAQ = 'ADDED_FAQ'\r\nexport const DELETED_FAQ = 'DELETED_FAQ'\r\nexport const UPDATED_FAQ = 'UPDATED_FAQ'\r\nexport const FAQ_TOGGLE_FETCH_LOADER = 'FAQ_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const  WRITE_ABOUT_US = 'WRITE_ABOUT_US'\r\nexport const  WRITE_ABOUT_US_BY_ID = 'WRITE_ABOUT_US_BY_ID'\r\nexport const  ADDED_ABOUT_US = 'ADDED_ABOUT_US'\r\nexport const  DELETED_ABOUT_US = 'DELETED_ABOUT_US'\r\nexport const  UPDATED_ABOUT_US = 'UPDATED_ABOUT_US'\r\nexport const  ABOUT_TOGGLE_FETCH_LOADER = 'ABOUT_TOGGLE_FETCH_LOADER'","\r\nimport * as axios from 'axios'\r\nconst tokenGetter = ()=>{ return { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`} }}\r\nconst instance = axios.create({\r\n    baseURL: 'http://165.227.131.111:8080/api/v1/',\r\n})\r\nexport const authReq = (data)=>instance.post('auth',data).then(response=>response.data)\r\nexport const authRefreshReq = (data)=>instance.post('refresh',data).then(response=>response.data)\r\n\r\n\r\nexport const categoryGetReq = (page)=>instance.get(`categories?page=${page}&size=20`).then(response=>response.data)\r\nexport const categoryGetByIdReq = (id)=>instance.get(`categories/${id}`).then(response=>response.data)\r\nexport const categoryPostReq = (data)=>instance.post('categories',data)\r\nexport const categoryDelReq = (id)=>instance.delete(`categories`,id)\r\nexport const categoryDelByIdReq = (id)=>instance.delete(`categories/${id}`)\r\nexport const categoryUpdReq = (data,id)=>instance.put(`categories/${id}`,data)\r\nexport const categoryGetSearchReq = (searchText,page)=>instance.get(`${searchText ? \r\n    `categories/search?name=${searchText}&page=${page}&size=20` \r\n    : `categories?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\n\r\n\r\nexport const productsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `products/like?prodName=${searchText}&page=${page}&size=20`\r\n    : `products?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const productGetByIdReq = (id)=>instance.get(`products/${id}`).then(response=>response.data)\r\nexport const productPostReq = (data)=>instance.post('products',data)\r\nexport const productDelReq = (id)=>instance.delete(`products`,id)\r\nexport const productDelByIdReq = (id)=>instance.delete(`products/${id}`)\r\nexport const productUpdReq = (data,id)=>instance.put(`products/${id}`,data)\r\n\r\nexport const productImgPostReq = (data)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n   return instance.post(`productImages`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\n}\r\nexport const productImgUpdReq = (data,id)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n    return instance.put(`productImages/${id}`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\n}\r\n\r\nexport const measureUnitGetReq = ()=>instance.get(`measureUnit`).then(response=>response.data)\r\n\r\n\r\nexport const providersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `supplier/search?name=${searchText}&page=${page}&size=20`\r\n    : `supplier?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const providerGetByIdReq = (id)=>instance.get(`supplier/${id}`).then(response=>response.data)\r\nexport const providerPostReq = (data)=>instance.post('supplier',data)\r\nexport const providerImgPostReq = (data)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n    return instance.post('supplierFile',data)\r\n}\r\nexport const providerDelReq = (id)=>instance.delete(`supplier`,id)\r\nexport const providerDelByIdReq = (id)=>instance.delete(`supplier/${id}`)\r\nexport const providerUpdReq = (data,id)=>instance.put(`supplier/${id}`,data)\r\nexport const providerActiveGetReq = ()=>instance.get(`supplier/active`).then(response=>response.data)\r\n\r\nexport const usersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `client/search?firstName=${searchText}&page=${page}&size=20`\r\n    : `client/?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const userGetByIdReq = (id)=>instance.get(`client/${id}`).then(response=>response.data)\r\nexport const userDelReq = (id)=>instance.delete(`client`,id)\r\nexport const userDelByIdReq = (id)=>instance.delete(`client/${id}`)\r\nexport const userUpdReq = (data,id)=>instance.put(`client/${id}`,data)\r\n\r\n\r\n\r\n\r\nexport const ordersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `orders/search?name=${searchText}&page=${page}&size=20`\r\n    : `orders?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const orderGetByIdReq = (id)=>instance.get(`orders/${id}`).then(response=>response.data)\r\nexport const orderPostReq = (data)=>instance.post('orders',data)\r\nexport const orderDelReq = (id)=>instance.delete(`orders`,id)\r\nexport const orderDelByIdReq = (id)=>instance.delete(`orders/${id}`)\r\nexport const orderUpdReq = (data,id)=>instance.put(`orders/${id}`,data)\r\n\r\nexport const deliveryCashGetReq = ()=>instance.get(`orderSetting/1`).then(response=>response.data)\r\nexport const deliveryCashUpdReq = (data)=>instance.put(`orderSetting/2`,data)\r\n\r\n\r\n\r\n\r\nexport const faqGetReq = ()=>(searchText,page)=>instance.get(`${searchText ?\r\n    `faq/search?name=${searchText}&page=${page}&size=20`\r\n    : `faq?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const faqGetByIdReq = (id)=>instance.get(`faq/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const faqPostReq = (data)=>instance.post('faq',data,tokenGetter())\r\nexport const faqDelByIdReq = (id)=>instance.delete(`faq/${id}`,tokenGetter())\r\nexport const faqUpdReq = (data,id)=>instance.put(`faq/${id}`,data,tokenGetter())\r\n\r\nexport const aboutUsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `about/search?name=${searchText}&page=${page}&size=20`\r\n    : `about?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const aboutUsGetByIdReq = (id)=>instance.get(`about/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const aboutUsPostReq = (data)=>instance.post('about',data,tokenGetter())\r\nexport const aboutUsDelByIdReq = (id)=>instance.delete(`about/${id}`,tokenGetter())\r\nexport const aboutUsUpdReq = (data,id)=>instance.put(`about/${id}`,data,tokenGetter())","export const getTemplate = async (dispatch,getFunc, actionType,toggleLoader,id=null,page)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(page? page : id);\r\n    console.log(response)\r\n    if(response?.result || response?.result===null) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n\r\n    }\r\n    dispatch(toggleLoader(false))\r\n\r\n}","\r\n\r\nexport const createOrChangeTemplate = async (\r\n    dispatch,\r\n    func,\r\n    data,\r\n    toggleLoader,\r\n    id=''\r\n    )=>{\r\n    dispatch(toggleLoader);\r\n    await func(data,id)\r\n    dispatch(toggleLoader)\r\n}","export const deleteTemplate = async (dispatch,deleteFunc,id,toggleLoader)=>{\r\n    dispatch(toggleLoader(true))\r\n    await deleteFunc(id).then((resp)=>console.log(resp))\r\n   .catch(resp=>console.log(resp))\r\n    dispatch(toggleLoader(false))\r\n}","export const checkHasData = data=>{\r\n    if(!data.length){\r\n        return false\r\n    }\r\n    return true\r\n}","export const getSearchedTemplate = async (dispatch,getFunc, actionType,toggleLoader,page,searchText)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(searchText,page);\r\n    if(response?.result) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n    }\r\n    dispatch(toggleLoader(false))\r\n\r\n}","import {\r\n    WRITE_ORDERS,\r\n    WRITE_ORDER_BY_ID,\r\n    SEARCHING,\r\n    ORDER_TOGGLE_FETCH_LOADER,\r\n    WRITE_DELIVERY_CASH\r\n} from './types'\r\nimport {\r\n    deliveryCashGetReq,\r\n    deliveryCashUpdReq,\r\n    orderDelByIdReq, orderGetByIdReq, orderPostReq, ordersGetReq, orderUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    orders: [],\r\n    orderById: {},\r\n    deliveryCash : {},\r\n    hasOrders: true,\r\n    orderFetchLoader: false\r\n}\r\n\r\n\r\nexport const orderReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ORDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                orderFetchLoader: action.payload\r\n            }\r\n        case WRITE_ORDERS:\r\n            return{\r\n                ...state,\r\n                orders: [...state.orders,...action.payload],\r\n                hasOrders: checkHasData(action.payload)\r\n            }\r\n        case WRITE_DELIVERY_CASH:\r\n            return{\r\n                ...state,\r\n                deliveryCash: action.payload,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                hasOrders: true\r\n            }\r\n        case WRITE_ORDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                orderById: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearOrder = ()=>{\r\n    return{\r\n        type: WRITE_ORDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const orderToggleLoader = bool=>{\r\n    return{\r\n        type: ORDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getOrders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, ordersGetReq, WRITE_ORDERS, orderToggleLoader,page,searchText)\r\n}\r\nexport const getOrderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, orderGetByIdReq, WRITE_ORDER_BY_ID, orderToggleLoader,id)\r\n}\r\nexport const getDeliveryCash = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,deliveryCashGetReq,WRITE_DELIVERY_CASH,orderToggleLoader)\r\n}\r\n\r\nexport const updateDeliveryCash = data=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,deliveryCashUpdReq,data,orderToggleLoader)\r\n}\r\n\r\nexport const createOrder = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch, orderPostReq, data, orderToggleLoader)\r\n}\r\nexport const deleteOrder = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,orderDelByIdReq,id[i],orderToggleLoader)\r\n        }\r\n    }\r\n}\r\nexport const updateOrder = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,orderUpdReq,data,orderToggleLoader,id)\r\n}\r\n\r\n","export const logout = ()=>{\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('tokenExpirationTime')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('refreshExpirationTime')\r\n    localStorage.removeItem('id')\r\n}","import {\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME,\r\n    WRITE_USER_ID\r\n} from './types'\r\nimport {authRefreshReq, authReq, userGetByIdReq} from \"../../utils/api/Request\";\r\nimport {logout} from \"../../components/Auth/logout\";\r\n\r\n\r\nconst initialState={\r\n    authFetchLoader: false,\r\n    isAuthorized: true,\r\n    isPageLoader: false,\r\n    authErrorMessage: '',\r\n    username: '',\r\n    userId: undefined\r\n}\r\n\r\n\r\nexport const mainReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                authFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n        }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload,\r\n            }\r\n        case WRITE_USER_ID:\r\n        return {\r\n            ...state,\r\n            userId: action.payload\r\n        }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeUserId = value=>{\r\n    return{\r\n        type: 'WRITE_USER_ID',\r\n        payload: value\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const toggleLoader = bool=>{\r\n    return{\r\n        type: 'TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const authRefresh = data=> {\r\n    return async dispatch => {\r\n        dispatch(toggleLoader(true))\r\n        await authRefreshReq(data).then(async response => {\r\n            if(response.resultCode==='NOT_FOUND'){\r\n                logout()\r\n            }else {\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const getUserName=()=>{\r\n    return async dispatch=>{\r\n        dispatch(toggleLoader(true))\r\n        await userGetByIdReq(localStorage.getItem('id')).then(response=>{\r\n            dispatch(writeUsername(response.result?.firstName ? response.result?.firstName : response.result?.phoneNumber))\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(toggleLoader(true))\r\n        await authReq(data).then(async response=>{\r\n            console.log(response)\r\n            if(response.result.statusCodeValue===400){\r\n                dispatch(writeAuthMessage('Неверно введены данные.'))\r\n            }else {\r\n                dispatch(togglePageLoader(true))\r\n                dispatch(toggleAuth(true))\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n                setTimeout(()=>dispatch(togglePageLoader(false)),4000)\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\n\r\nconst tokenToLocalStorage = (response)=>{\r\n    localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n    localStorage.setItem(\"tokenExpirationTime\", JSON.stringify(Date.parse(response.result.body.tokenExpirationTime)))\r\n    localStorage.setItem(\"refreshExpirationTime\", JSON.stringify(Date.parse(response.result.body.refreshExpirationTime)))\r\n    localStorage.setItem(\"id\", response.result.body.id)\r\n    localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n}\r\n\r\n\r\n","const getExpirationDate = (token,exp)=> {\r\n    if (!token || !exp) {\r\n        return undefined\r\n    }\r\n    return exp\r\n};\r\n\r\nconst isExpired = (exp) => {\r\n    if (!exp) {\r\n        return false;\r\n    }\r\n    if (Date.now() < exp){\r\n        return exp - Date.now()\r\n    }else{\r\n        return false\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const  expChecker = ()=>isExpired(getExpirationDate(localStorage.getItem(\"accessToken\"),localStorage.getItem('tokenExpirationTime')))","import React from 'react'\r\nimport './Preloader.css'\r\nconst Preloader = (props)=>{\r\n    return(\r\n       <div className={'preloader'}>\r\n                <span className=\"circle circle-1\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-2\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-3\" style={{width: props.width,height: props.height}}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect} from 'react'\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {logout} from \"../Auth/logout\";\r\nimport {getUserName, toggleAuth, writeUserId} from \"../../redux/reducers/mainReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoSVG} from '../../assets/icons'\r\nimport {expChecker} from \"../Auth/expChecker\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Header = (props)=>{\r\n\r\nuseEffect(()=>{\r\n    if(expChecker()) {\r\n        props.getUserName()\r\n        props.writeUserId(parseInt(localStorage.getItem('id')))\r\n    }\r\n},[])\r\n    return(\r\n        <div className='header'>\r\n        <div className='container'>\r\n\r\n        <div className=\"header__container\">\r\n            <Link to={\"/providers\"}><img src={logoSVG} alt=\"\"/></Link>\r\n            <div className=\"header-profile\">\r\n                {props.username ?\r\n                <span className='header-profile__name'>{props.username}</span>\r\n                :\r\n                    <Preloader width={'6px'} height={'6px'}/>}\r\n\r\n                <Link to={\"/profile\"}><span className='header-profile__password'>Профиль</span></Link>\r\n                <span className='header-profile__divider'>/</span>\r\n                <span className='header-profile__exit' onClick={()=> {\r\n                    logout()\r\n                    props.toggleAuth(false)\r\n                }}>Выйти</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserName,writeUserId})(Header)","import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,svg,\r\n                         activeSvg,\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n           return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes} onClick={()=>{\r\n            setClick(true)\r\n            history.push(to)\r\n        }}><img src={clicked ? activeSvg : svg} alt=\"\"/><span>{name}</span></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","import {\r\n    categorySVG,\r\n    orderSVG,\r\n    productSVG,\r\n    providerSVG,\r\n    questionSVG,\r\n    userSVG,\r\n    orderActiveSVG,\r\n    categoryActiveSVG,\r\n    providerActiveSVG,\r\n    productActiveSVG,\r\n    userActiveSVG,\r\n    questionActiveSVG,\r\n    aboutActiveSVG,\r\n    aboutSVG, settingsSVG, settingsActiveSVG\r\n} from \"../../assets/icons\";\r\n\r\nexport const sideBarConfig = [\r\n    {\r\n        to: '/providers',\r\n        name: 'Поставщики',\r\n        svg: providerSVG,\r\n        activeSvg: providerActiveSVG\r\n    },\r\n    {\r\n        to: '/orders',\r\n        name: 'Заказы',\r\n        svg: orderSVG,\r\n        activeSvg: orderActiveSVG\r\n    },\r\n    {\r\n        to: '/products',\r\n        name: 'Товары',\r\n        svg: productSVG,\r\n        activeSvg: productActiveSVG\r\n    },\r\n    {\r\n        to: '/users',\r\n        name: 'Пользователи',\r\n        svg: userSVG,\r\n        activeSvg: userActiveSVG\r\n    },\r\n    {\r\n        to: '/categories',\r\n        name: 'Категории',\r\n        svg: categorySVG,\r\n        activeSvg: categoryActiveSVG\r\n    },\r\n    {\r\n        to: '/faq',\r\n        name: 'Вопросы',\r\n        svg: questionSVG,\r\n        activeSvg: questionActiveSVG\r\n    },\r\n    {\r\n        to: '/aboutus',\r\n        name: 'О нас',\r\n        svg: aboutSVG,\r\n        activeSvg: aboutActiveSVG\r\n    },\r\n    {\r\n        to: '/settings',\r\n        name: 'Настройки',\r\n        svg: settingsSVG,\r\n        activeSvg: settingsActiveSVG\r\n    }\r\n]","import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst SidebarList  = (props)=>{\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n                svg={item.svg}\r\n                name={item.name}\r\n                activeSvg={item.activeSvg}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","import React,{useEffect,useState} from 'react'\r\nimport {searchSVG } from '../../assets/icons'\r\nimport './Search-panel.css'\r\n\r\nconst SearchPanel = (props)=>{\r\n    return(\r\n        <div className='searchPanel'>\r\n            <span><img src={searchSVG} alt=\"\"/><input type=\"text\" placeholder={'Поиск'} onChange={(event) => props.handleSearchText(event.target.value)}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import React from 'react'\r\nimport './Btns.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AddBtn = ({urlToCreate})=>{\r\n    return(\r\n        <Link to={urlToCreate} className='addBtn'>Добавить</Link>\r\n    )\r\n}\r\nexport default AddBtn","import { TOGGLE_MODAL} from './types'\r\n\r\nconst initialState={\r\n    isOpenModal: {\r\n        isOpen:false,\r\n        title:'',\r\n        confirmFunc: undefined,\r\n        urlToTable : ''\r\n    }\r\n}\r\n\r\n\r\nexport const modalReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_MODAL:\r\n            return{\r\n                ...state,\r\n                isOpenModal: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const toggleModal = obj=>{\r\n    return{\r\n        type:  TOGGLE_MODAL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\n","import { WRITE_RECORD_ID,WRITE_ELEMENTS_TO_DELETE,WRITE_TABLE_MESSAGE} from './types'\r\n\r\nconst initialState={\r\n   recordViewId:'',\r\n    elementsToDelete: [],\r\n    tableMessage: ''\r\n}\r\n\r\n\r\nexport const tableReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case WRITE_RECORD_ID:\r\n            return{\r\n                ...state,\r\n                recordViewId: action.payload\r\n            }\r\n        case WRITE_ELEMENTS_TO_DELETE:\r\n            return{\r\n                ...state,\r\n                elementsToDelete: action.payload\r\n            }\r\n        case WRITE_TABLE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                tableMessage: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeTableMessage = str=>{\r\n    return{\r\n        type: WRITE_TABLE_MESSAGE,\r\n        payload: str\r\n    }\r\n}\r\nexport const writeElementsToDelete = values=>{\r\n    return{\r\n        type:  WRITE_ELEMENTS_TO_DELETE,\r\n        payload: values\r\n    }\r\n}\r\nexport const writeRecordId = value=>{\r\n    return{\r\n        type:  WRITE_RECORD_ID,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Btns.css'\r\nimport {deleteSVG} from \"../../assets/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\n\r\nconst DeleteBtn = ({toggleModal,deleteFunc,elementsToDelete,writeTableMessage})=>{\r\n\r\n    const confirmHandler = ()=>{\r\n          deleteFunc(elementsToDelete)\r\n    }\r\n\r\n    return(\r\n        <img className={'deleteBtn'} src={deleteSVG} alt=\"\"  onClick={()=>{\r\n            if(elementsToDelete.length===0){\r\n             return writeTableMessage('Вы не выбрали ни одной записи!')\r\n            }\r\n            return toggleModal({isOpen:true,title:'Вы действительно хотите удалить запись(-и)?',confirmFunc: confirmHandler})\r\n        }}/>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal,writeTableMessage})(DeleteBtn)","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\nconst TableItemColumn = ({item,column})=>{\r\n\r\n    return(\r\n        <div className='tableItemColumn'>\r\n            <span className='tableItemColumn__title'>\r\n                {item.title}\r\n            </span>\r\n            <span className='tableItemColumn__value'>\r\n                {column?.render ? column.render(item.value): item.value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItemColumn","export const toBeautifyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'CASH':\r\n            return 'Наличные'\r\n        case 'ELSOM':\r\n            return 'Эльсом'\r\n        case 'COURIER':\r\n            return 'Курьер'\r\n        case 'STORAGE':\r\n            return 'Самовывоз'\r\n        case 'AWAITING_DELIVERY':\r\n            return 'Ожидает доставку'\r\n        case 'PAID_AWAITNG_DELIVERY':\r\n            return 'Оплачен, ожидает доставку'\r\n        case 'DELIVERED_AND_PAID':\r\n            return 'Доставлен и оплачен'\r\n        case 'DELIVERED':\r\n            return 'Доставлен'\r\n        case 'CLOSED':\r\n            return 'Закрыт'\r\n        case null:\r\n            return 'Не указано'\r\n        case 'null':\r\n            return 'Не указано'\r\n        case '':\r\n            return 'Не указано'\r\n        case NaN:\r\n            return 'Не указано'\r\n        case undefined:\r\n            return 'Не указано'\r\n        case 'SOM':\r\n            return 'сом'\r\n        case 'USD':\r\n            return '$'\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport TableItemColumn from \"./TableItemColumn\";\r\nimport {connect} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst TableItem= ({columns,data,handlerClick,elementsToDelete,writeElementsToDelete,deleting,writeTableMessage})=>{\r\n    const [check,setCheck] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(deleting) {\r\n            let buff = [...elementsToDelete]\r\n\r\n            if (check) {\r\n                buff.push(data.id)\r\n                writeElementsToDelete(buff)\r\n            } else {\r\n                const index = buff.indexOf(data.id)\r\n                if (index > -1) {\r\n                    buff.splice(index, 1);\r\n                    writeElementsToDelete(buff)\r\n                }\r\n            }\r\n            return () => {\r\n                writeElementsToDelete([])\r\n            }\r\n        }\r\n    },[check])\r\n    const tableItemColumn = ()=> {\r\n        let result = []\r\n\r\n        const valuesToArray = Object.values(data).slice(1,data.length)\r\n        const valsKey = Object.keys(data).slice(1, data.length)\r\n        for (let i = 0; i < columns.length; i++) {\r\n            for (let j = 0; j < valsKey.length; j++) {\r\n                if (valsKey[j] === columns[i].dataIndex) {\r\n                    const value = ()=> {\r\n                        if(columns[i]?.object){\r\n                            return valuesToArray[j]?.[`${columns[i].object}`]\r\n                        }\r\n                        return valuesToArray[j]\r\n                    }\r\n                    result.push((\r\n                        <div key={\"table-item-\" + data.id + \"-\" + i}>\r\n                            <TableItemColumn column={columns[i]} item={{title: columns[i].title, value: toBeautifyFieldsValue(value())}}/>\r\n                        </div>\r\n                    ))\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    let style={}\r\n    useEffect(()=>{\r\n        if(check){\r\n            style= {\r\n                boxShadow: '0px 1px 8px rgba(0,155,0,.4)'\r\n            }\r\n        }\r\n\r\n    },[])\r\n    return(\r\n        <div className={'tableItem-container'}\r\n        >\r\n            {deleting &&\r\n            <label className=\"tableItem-checkbox-label\">\r\n                <input className=\"tableItem-checkbox__default\" type=\"checkbox\" onClick={() => {\r\n                    writeTableMessage('')\r\n                    setCheck(!check)\r\n                }}/>\r\n                <span className=\"tableItem-checkbox__new\"></span>\r\n            </label>\r\n            }\r\n        <div  className='tableItem' style={style}  onClick={()=>handlerClick(data.id)}>\r\n\r\n           {tableItemColumn()}\r\n           \r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(TableItem)","import React from 'react'\r\nimport {errorSVG} from \"../../assets/icons\";\r\n\r\n\r\n\r\nconst ErrorMsg = ({text})=>{\r\n    return(\r\n\r\n        <span className={'errorMessage'}><img src={errorSVG} alt=\"\"/>{text}</span>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useEffect, useState} from 'react'\r\nimport TableItem from \"./Table-item\";\r\nimport './Table.css'\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\n\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\n\r\n\r\nconst Table = ({isLoading,\r\n                   getDataFunc,\r\n                   data=[],\r\n                   columns=[],\r\n                   handlerClick,\r\n                   deleting,\r\n                   tableMessage,\r\n                   writeTableMessage,\r\n                   deleteFunc,\r\n                   adding,\r\n                   urlToCreate,\r\n                   getDataFuncSearch,\r\n                   hasData\r\n               })=>{\r\n    const [searchText,setSearchText] = useState('')\r\n    const [page,setPage] = useState(1)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            writeTableMessage('')\r\n        }\r\n    },[])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n                    getDataFunc(1,searchText)\r\n                    setPage(2)\r\n                    dispatch({type: 'SEARCHING'})\r\n            }\r\n            , 1000);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [searchText]);\r\n\r\n    const elements = data.map(item=>{\r\n        return (\r\n            <div key={item.id}>\r\n            <TableItem columns={columns} data={item} handlerClick = {handlerClick} deleting={deleting}/>\r\n            </div>\r\n        )\r\n    })\r\n    return(\r\n\r\n        <div className='table-container'>\r\n            <div className='page-functional'>\r\n                <SearchPanel handleSearchText={setSearchText} />\r\n                <div className={'page-functional__btns'}>\r\n                {adding &&\r\n                <AddBtn\r\n                    urlToCreate={urlToCreate}\r\n                />\r\n                }\r\n                {deleting &&\r\n                <DeleteBtn\r\n                    deleteFunc = {deleteFunc}\r\n                />}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"tableItem-container__wrapper\">\r\n                {(tableMessage && isLoading) && <ErrorMsg text={tableMessage}/>}\r\n                <InfiniteScroll\r\n                    dataLength={data.length} //This is important field to render the next data\r\n                    next={()=>{\r\n\r\n                        getDataFunc(page,searchText)\r\n                        setPage(page+1)\r\n                    }}\r\n                    hasMore={hasData}\r\n                    loader={<Preloader/>}\r\n                    endMessage={\r\n                        <p style={{ textAlign: 'center' }}>\r\n                            <b>Загружены все записи.</b>\r\n                        </p>\r\n                    }\r\n                    initialScrollY={0}\r\n                >\r\n\r\n                    {elements}\r\n                </InfiniteScroll>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        tableMessage : state.table.tableMessage\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeTableMessage})(Table)\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport './RecordView.css'\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\nconst RecordViewer=({titles,values={},urlToUpd,urlToTable,match,editing,recordViewValuesConfig})=>{\r\n    const valuesToArray = recordViewValuesConfig ? Object.values(recordViewValuesConfig) :Object.values(values).slice(1,values.length)\r\n    const valsKey =recordViewValuesConfig ? Object.keys(recordViewValuesConfig) : Object.keys(values).slice(1,values.length)\r\n    const elements = ()=>{\r\n        let results=[];\r\n        for(let i=0;i<titles.length;i++){\r\n            for(let j=0;j<valsKey.length;j++){\r\n                if( valsKey[j]===titles[i].dataIndex){\r\n                    results.push((\r\n                        <div key={j} className='recordView__item'>\r\n                            <span className='recordView__item-title'>{titles[i].title}</span>\r\n\r\n                            {titles[i]?.type==='image' ?\r\n                                <div className={'recordView__item-imgWrapper'}>\r\n\r\n\r\n                                    { ////////////////////////////////////////////////////////////////////\r\n                                        Array.isArray(valueChooser(titles[i], valuesToArray[j])) ?      // проверка на массив картинок\r\n                                        valueChooser(titles[i], valuesToArray[j]).map(item => {\r\n                                            return (\r\n                                                <div key={item.id} className={'recordView__item-imgContainer'}><img\r\n                                                    src={item.imageUrl} alt=\"\"/></div>\r\n                                            )\r\n                                        })                                                              // вывод только одной картинки\r\n                                        :  <div className={'recordView__item-imgContainer'}>\r\n                                            <img src={ valuesToArray[j]} alt=\"\"/></div>\r\n                                        //////////////////////////////////////////////////////////////////\r\n                                    }\r\n                                    </div>\r\n                           : <span className='recordView__item-value'> {toBeautifyFieldsValue(valueChooser(titles[i],valuesToArray[j]))}</span>}\r\n                        </div>\r\n                    ))\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\nreturn results\r\n    }\r\n    return(\r\n        <div className='recordView__container'>\r\n            <div className='recordView__container-title'><Link to={urlToTable}><img src={backSVG} alt=\"\"/></Link><h2>{valuesToArray[0]}</h2></div>\r\n            {elements()}\r\n            {editing &&\r\n            <Link to={`${urlToUpd}/${match.params.id}`} className={'recordView__btn'}>Редактировать запись</Link>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(RecordViewer);\r\n\r\nconst valueChooser = (title,value)=> {\r\n    if(title?.object){\r\n        return value?.[`${title.object}`]\r\n    }else if(title?.array){\r\n        if(title.array){\r\n            return fieldSearcherInObj(value,title.array)\r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nfunction fieldSearcherInObj(obj,searchedField) {\r\n    const result = [];\r\n    for (let prop in obj) {\r\n        const value = obj[prop];\r\n        if(searchedField === prop){\r\n            return value\r\n        }\r\n        if (typeof value === 'object') {\r\n            result.push(fieldSearcherInObj(value,searchedField));\r\n        }\r\n    }\r\n    return result;\r\n}","import React, {useEffect} from 'react'\r\nimport RecordViewer from \"./RecordViewer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst RecordViewerContainer = (\r\n    {\r\n        titles,\r\n        urlToUpd,\r\n        urlToTable,\r\n        match,\r\n        valueById,\r\n        clearFunc,\r\n        getByIdFunc,\r\n\r\n        recordViewValuesConfig,\r\n\r\n        isLoading,\r\n        editing\r\n    }\r\n)=>{\r\n    useEffect(()=>{\r\n        getByIdFunc(match.params.id)\r\n        return ()=>clearFunc()\r\n    },[])\r\n    return(\r\n        valueById && !isLoading ?\r\n        <RecordViewer\r\n            titles={titles}\r\n            values={valueById}\r\n            urlToUpd={urlToUpd}\r\n            urlToTable={urlToTable}\r\n            editing={editing}\r\n            recordViewValuesConfig={recordViewValuesConfig}\r\n        /> : <Preloader />\r\n    )\r\n}\r\n\r\nexport default withRouter(RecordViewerContainer)","import React from 'react'\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst EditBtn = ({toggleModal,confirmFunc,urlToTable='main',disabled=false})=>{\r\n    return(\r\n        <div className='createOrEditBtn-submit'\r\n                onClick={async ()=>{\r\n                    if(!disabled){\r\n                        return toggleModal(\r\n                            {   isOpen:true,\r\n                                title:'Вы действительно хотите сохранить изменения?',\r\n                                confirmFunc: confirmFunc,\r\n                                urlToTable: urlToTable\r\n                            },\r\n                        )\r\n                    }\r\n                   return confirmFunc()\r\n                }}>\r\n            Сохранить</div>\r\n                )\r\n}\r\n\r\nexport default connect(null,{toggleModal})(EditBtn)","import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}>\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null,{toggleModal})(CancelBtn)","import React, {useState} from 'react'\r\nimport {openList} from \"../../../assets/icons\";\r\nimport SelectorList from \"./SelectorList\";\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst SelectorItem = ({data,isOpenList,setOpenList,handleClick,thirdStyle=false})=>{\r\n    const [checked, setChecked] = useState(true)\r\n    const styles = classNames({\r\n        'selectorInput__item' : !isOpenList && !thirdStyle,\r\n        \"selectorInput__item-2\":  isOpenList,\r\n        'selectorInput__item-3' : thirdStyle\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <li  className={styles}  onClick={()=> {\r\n\r\n                setChecked(!checked)\r\n                data?.children && setOpenList(!isOpenList)\r\n                if(checked) {\r\n                 return handleClick(data.name)\r\n                }else{\r\n                    return handleClick('')\r\n                }\r\n            }}>\r\n              {data.name}\r\n                   {data?.children && <img src={openList} alt=\"\"/>}\r\n            </li>\r\n            {isOpenList && data.children.map(item=><SelectorList thirdStyle={true} data={item} handleClick={handleClick}/>)}\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorItem","import React, {useState} from 'react'\r\nimport SelectorItem from \"./SelectorItem\";\r\n\r\n\r\n\r\n\r\nconst SelectorList = ({data,handleClick,thirdStyle})=>{\r\n    const [isOpenList,setOpenList] = useState(false);\r\n    return(\r\n        <>\r\n            {data?.children ?\r\n                <ul key={data.id} className={isOpenList ? 'selectorInput__list-clicked' :'selectorInput__list'}>\r\n                <SelectorItem\r\n                    isOpenList={isOpenList}\r\n                    setOpenList={setOpenList}\r\n                    handleClick={handleClick}\r\n                    data={data}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n\r\n\r\n            </ul>\r\n            :\r\n                <SelectorItem\r\n                    data={data}\r\n                    handleClick={handleClick}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n            }\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorList","import React, {useEffect, useRef, useState} from 'react'\r\nimport SelectorList from \"./SelectorList\";\r\n\r\nconst Selector = ({handleClick,setVisibleSelector,data})=>{\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e)=>{\r\n        if(!selectorRef.current.contains(e.target)){\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener('click',closeSelector,false)\r\n        return ()=>{\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    },[])\r\n\r\n    const elements = data.map(item=>{\r\n        return(\r\n            <SelectorList handleClick={handleClick} key={item.id} data={item} />\r\n        )\r\n    })\r\n    return(\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, {useEffect, useRef, useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG, plusSVG} from \"../../../assets/icons\";\r\nimport Selector from \"./Selector\";\r\nimport {toUglyfyFieldsValue} from \"../../../utils/toUglyfyFieldsValue\";\r\n\r\n\r\nconst SelectorInput = ({name,value,setFieldValue,placeholder,data})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selected, setSelected] = useState('')\r\n    const [inputText,setInputText] = useState(value);\r\n    const onChange = (value)=>{\r\n        console.log(value)\r\n        setInputText(value)\r\n    }\r\n    useEffect(()=>{\r\n        setFieldValue(name,inputText)\r\n    },[inputText])\r\n\r\n\r\n    useEffect(()=>{\r\n  setInputText(inputText + ` ${toUglyfyFieldsValue(selected)} `)\r\n\r\n\r\n    },[selected])\r\n\r\n\r\n    return(\r\n\r\n        <div className={'selectorInput'}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   onChange={e=>onChange(e.target.value)}\r\n                    value={inputText}\r\n                   />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"\r\n                 onClick={(event)=>setVisibleSelector(!visibleSelector)}/>\r\n            {visibleSelector && <Selector data={data} setVisibleSelector={setVisibleSelector} handleClick = {setSelected}/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default  SelectorInput\r\n\r\n\r\n","export const toUglyfyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'Наличные':\r\n            return 'CASH'\r\n        case 'Эльсом':\r\n            return 'ELSOM'\r\n        case 'Курьер':\r\n            return 'COURIER'\r\n        case 'Самовывоз':\r\n            return 'STORAGE'\r\n        case 'В доставке':\r\n            return 'AWAITING_DELIVERY'\r\n        case 'Доставлен и оплачен':\r\n            return 'DELIVERED_AND_PAID'\r\n        case 'Закрыт':\r\n            return 'CLOSED'\r\n\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport {uploadBtnSVG} from '../../assets/icons'\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value,imageCount=1,fileTypes=\"image/jpeg ,image/gif, image/png, image/svg+xml, application/pdf\"})=>{\r\n    const [files,setFiles] = useState(value ? Array.isArray(value) ? value : [value] : [])\r\n    const [error,setError] = useState('')\r\n    console.log(files)\r\n    useEffect(()=>{\r\n        setFieldValue(name,files)\r\n    },[files])\r\n\r\n    function getBase64(file, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: fileTypes,\r\n        onDrop: acceptedFiles => {\r\n                if(files.length>=imageCount) {\r\n                    setError(`Максимальное количество файлов: ${imageCount}`)\r\n                    return\r\n                }\r\n            for(let type in fileTypes){\r\n             if(type.split('application/') || type.split('image/')===acceptedFiles.type) {\r\n                 console.log(acceptedFiles)\r\n                 acceptedFiles.map(file => {\r\n                     getBase64(file,(string)=>{\r\n                         setFiles([...files,{file: file, data_url : string}])\r\n                     })\r\n                 })\r\n             }\r\n                else{\r\n                    setError(`Загрузка файлов возможно только с типом: ${fileTypes}`)\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const thumbs = files.map((file,index) =>{\r\n        return (\r\n        <div  key={index} className={'upload__image-container'}>\r\n            <div className=\"upload__image-item\">\r\n                {file.file.type.match('image') ?\r\n                    <img src={file?.data_url} alt=\"\"/>\r\n                    :file.file.type.match('application/pdf')\r\n                    ? <span className={'upload__file-itemText'}>{file.file.type.toUpperCase().split('APPLICATION/')}</span>\r\n                    : <span></span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )})\r\n\r\n    return (\r\n        <div className=\"upload__image-wrapper\" onClick={()=>setError('')}>\r\n            <div {...getRootProps({className : 'upload__image-uploadBtn'})}>\r\n                <input {...getInputProps()} />\r\n                <img src={uploadBtnSVG} alt=\"\"/>\r\n                Нажмите или перетащите файл, чтобы загрузить\r\n            </div>\r\n            <div className={'upload__image-container'}>\r\n                {thumbs}\r\n            </div>\r\n            {error && <span className='formErrorMessage'>{error}</span>}\r\n        </div>\r\n    );\r\n    }\r\n export default ImgUploader\r\n","import React from 'react'\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\n\r\nconst PhoneInput = ({name,setFieldValue,placeholder,value})=>{\r\n    const onChange = (value)=>setFieldValue(name,value.replace(/[\\ \\(\\)\\-]/g, \"\"))\r\n    return(\r\n        <InputMask\r\n            mask=\"\\+\\9\\9\\6\\ (999) 99-99-99\"\r\n            placeholder={'+996 (___) __-__-__'}\r\n            name={name}\r\n            onChange={e=>onChange(e.target.value)}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default  PhoneInput","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n\r\nconst CheckInput = ({name,value,setFieldValue})=>{\r\n    const [checked,setCheck] = useState(value)\r\n    useEffect(()=>{\r\n        setFieldValue(name,checked)\r\n    },[checked])\r\n    return(\r\n        <label className=\"tableItem-checkbox-label\"\r\n               style={{marginTop: '15px'}}\r\n        >\r\n            <input className=\"tableItem-checkbox__default\" name={name}\r\n                   type=\"checkbox\"\r\n                   onChange={()=>setCheck(!checked)}\r\n               defaultChecked={value}\r\n               />\r\n            <span className=\"tableItem-checkbox__new\"></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default CheckInput","import React, {useEffect} from 'react'\r\nimport {toBeautifyFieldsValue} from \"../../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst SelectItem = props=>{\r\n\r\n    return (\r\n        typeof props.data === 'object' ?\r\n        <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data.id,props.data.name ?\r\n                                                props.data.name :\r\n                                                props.data.fullName)\r\n        }}>\r\n            {toBeautifyFieldsValue(props.data.name ? props.data.name : props.data.fullName ) }\r\n        </li>\r\n            :\r\n            <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data,props.data)\r\n            }}>\r\n                {toBeautifyFieldsValue(props.data)}\r\n            </li>\r\n\r\n    )\r\n}\r\nexport default SelectItem","import React, {useEffect, useRef} from 'react'\r\nimport SelectItem from \"./SelectItem\";\r\n\r\nconst SelectBlock = ({handleClick, setVisibleSelector, data})=> {\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e) => {\r\n        if (!selectorRef.current.contains(e.target)) {\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('click', closeSelector, false)\r\n        return () => {\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    }, [])\r\n\r\n    const elements = data.map((item,index) => <SelectItem key={index} data={item} handleClick={handleClick} />)\r\n    return (\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBlock","import React, {useEffect, useRef, useState} from 'react'\r\nimport {openList, plusSVG} from \"../../../assets/icons\";\r\nimport SelectBlock from \"./SelectBlock\";\r\n\r\n\r\n\r\nconst SelectField = ({data=[],name,value,setFieldValue,placeholder,})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selectedValue,setSelectedValue] = useState('')\r\n    const selectedItem = (id,text)=>{\r\n        setFieldValue(name,id)\r\n        setSelectedValue(text)\r\n    }\r\n    useEffect(()=>{\r\n        data.map(item=>{\r\n            if(typeof item==='object'){\r\n                if(item.id===value){\r\n                    setSelectedValue(item?.name ? item.name : item.fullName)\r\n                }\r\n            }else{\r\n                if(item===value){\r\n                    setSelectedValue(item)\r\n                }\r\n            }\r\n        })\r\n    },[data])\r\n    //const onChange = (text)=>setFieldValue(name,text)\r\n    return(\r\n        <div className={'selectorInput'} onClick={(event)=>setVisibleSelector(!visibleSelector)}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   value={selectedValue}\r\n            />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"/>\r\n            {(visibleSelector && data.length!==0) && <SelectBlock data={data}  setVisibleSelector={setVisibleSelector} handleClick = {selectedItem}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectField\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {GeolocationControl, Map, Placemark, SearchControl, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n    const [address, setAddress] = React.useState(props.value);\r\n\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,address)\r\n    },[address])\r\n    const createPlacemark = (coords) => {\r\n\r\n        return new ymaps.current.Placemark(\r\n            coords,\r\n            {\r\n                iconCaption: \"Секунду...\"\r\n            },\r\n            {\r\n                preset: \"islands#violetDotIconWithCaption\",\r\n                draggable: false\r\n            }\r\n        );\r\n    };\r\n\r\n    const getAddress = (coords) => {\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <input type=\"text\" name={props.name} value={address}/>\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n                />\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport SelectorInput from \"../Inputs/SelectorInput/SelectorInput\";\r\nimport ImgUploader from \"../ImgUploader/ImgUploader\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport CheckInput from \"../Inputs/CheckInput/CheckInput\";\r\nimport SelectField from \"../Inputs/Selector/SelectField\";\r\nimport MapBlock from \"../Inputs/MapBlock/MapBlock\";\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                placeholder,\r\n                type='',\r\n               selectInputData=[],\r\n               selectorProperty,\r\n               options=[],\r\n                       fileTypes,\r\n                       imageCount,\r\n    ...props\r\n                   })=>{\r\n    console.log(props)\r\n    return(\r\n        <div className=\"createOrEditField\">\r\n            <label htmlFor={name}>{label}</label>\r\n            {type === 'selectInput' ?\r\n                <Field name={name} placeholder={placeholder}>\r\n                    {({field: {name, value}, form: {setFieldValue}}) => {\r\n                    return (\r\n                    <SelectorInput\r\n                    setFieldValue={setFieldValue}\r\n                    value={value}\r\n                    name={name}\r\n                    data={selectInputData}\r\n                    placeholder={placeholder}/>\r\n                    )\r\n                }}\r\n                </Field>\r\n\r\n                : type==='phone' ?\r\n                    <Field name={name} >\r\n                     {({field:{name,value},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} value={value}/>}\r\n                    </Field>\r\n                        : type==='check' ?\r\n                            <Field   name={name} >\r\n                                {({field:{name,value},form: { setFieldValue}})=><CheckInput value={value} setFieldValue={setFieldValue} name={name} />}\r\n                          </Field>\r\n                : type==='selector' ?\r\n                            <Field name={name} placeholder={placeholder}>\r\n                                {({field: {name, value}, form: {setFieldValue}}) => {\r\n                                   return <SelectField\r\n                                       data={options[selectorProperty]}\r\n                                       setFieldValue={setFieldValue}\r\n                                       value={value}\r\n                                       name={name}\r\n                                       placeholder={placeholder}\r\n                                   />\r\n                                }}\r\n                                </Field>\r\n\r\n\r\n                : type==='textarea' ?\r\n                    <Field name={name} as={'textarea'} placeholder={placeholder} />\r\n\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              fileTypes={fileTypes}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name} >\r\n              {({field:{name,value},form: { setFieldValue}}) => <MapBlock\r\n                                                                setFieldValue={setFieldValue}\r\n                                                                value={value}\r\n                                                                name={name}/>}\r\n                </Field>\r\n                :\r\n                         <Field name={name} placeholder={placeholder}/>\r\n\r\n            }\r\n\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik, useFormikContext} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = Object.keys(props.initialVals).map((item,index)=>{\r\n        return(\r\n            <FormInput\r\n                key={item}\r\n                name={item}\r\n                placeholder={props.inputConfig[index]?.placeholder}\r\n                label={props.inputConfig[index]?.label}\r\n                type={props.inputConfig[index]?.type}\r\n                selectInputData={props.inputConfig[index]?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={props.inputConfig[index]?.selectorProperty}\r\n                fileTypes={props.inputConfig[index]?.fileTypes}\r\n                imageCount={props.inputConfig[index]?.imageCount}\r\n            />\r\n        )\r\n    })\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            <div className={'createOrEditContainer__title'}>\r\n                <Link to={props.urlToTable}><img src={backSVG} alt=\"\"/></Link>\r\n                <h2>{props.formTitle}</h2>\r\n            </div>\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values)=>{\r\n                  await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n\r\n                    return (\r\n                    <Form>\r\n                        {inputs}\r\n                        <div className={\"createOrEditContainer__btns\"}>\r\n                            <EditBtn\r\n\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                        <CancelBtn urlToTable={props.urlToTable}/>\r\n                        </div>\r\n                    </Form>\r\n                )}}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default Former","import * as Yup from \"yup\";\r\n\r\nexport const validationGenerator = (key, config)=>{\r\n    let schema = {}\r\n    key.map((item,index)=> {\r\n        if(config[index]?.dataType) {\r\n            switch (config[index].dataType) {\r\n                case 'number':\r\n                    schema[item] = Yup.number();\r\n                    break;\r\n                default:\r\n                    schema[item] = Yup.string()\r\n            }\r\n        }\r\n            else{\r\n                schema[item] = Yup.string()\r\n            }\r\n\r\n\r\n\r\n        if(config[index]?.required){\r\n            schema[item] =  schema[item].required(config[index].required)\r\n        }\r\n        if(config[index]?.min){\r\n            schema[item] =  schema[item].min(config[index].min)\r\n        }\r\n        if(config[index]?.max){\r\n            schema[item] =  schema[item].min(config[index].max)\r\n        }\r\n        if(config[index]?.nullable){\r\n            schema[item] =  schema[item].nullable(config[index].nullable)\r\n        }\r\n    })\r\n    return schema\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id) {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            console.log(values)\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        (!isLoading && props.valueById) || (!isLoading && !props.params?.id)\r\n            ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n        : <Preloader />\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","import React, {useEffect, useRef, useState} from 'react'\r\nimport Header from \"../Header/Header\";\r\nimport SidebarList from \"../Sidebar/SidebarList\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport Table from \"../Table/Table\";\r\nimport RecordViewerContainer from \"../RecordViewer/RecordViewerContainer\";\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n    isLoading,\r\n    hasData,\r\n\r\n     recordViewValuesConfig,\r\n\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n                      })=>{\r\n    const clickOnRecord=(id)=>history.push(`/${pageUrl}/view/${id}`)\r\n    return(\r\n        <>\r\n                    <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n                            <h2 className='page-content__title'>{pageTitle}</h2>\r\n\r\n                            <Table\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                                adding={adding}\r\n                                urlToCreate = {`/${pageUrl}/${pageUrl}-creator`}\r\n                                deleteFunc = {deleteFunc}\r\n                                hasData={hasData}\r\n                            />\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        <Route path={`/${pageUrl}/view/:id`}>\r\n                            <RecordViewerContainer\r\n                                titles={recordViewTitlesConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n                                urlToTable={`/${pageUrl}`}\r\n\r\n\r\n                                recordViewValuesConfig={recordViewValuesConfig}\r\n                                valueById={valueById}\r\n                                getByIdFunc={getByIdFunc}\r\n                                clearFunc={clearFunc}\r\n                                isLoading={isLoading}\r\n\r\n                                editing={editing}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PageRenderer)","import React from \"react\";\r\nexport const OrderColumns  =[\r\n    {\r\n        title: \"Номер заказа\",\r\n        dataIndex: 'orderNumber'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'orderStatus',\r\n        render: (value)=>\r\n            value==='Ожидает доставку'  || value ==='Оплачен, ожидает доставку' ?\r\n            <span style={{background: '#FF6800',color: '#f2f2f2',borderRadius: '5px',padding: '3px',margin: '3px 0'}}>{value}</span>\r\n            :value==='Доставлен' || value === 'Доставлен и оплачен' ? <span style={{background: '#009B00',color: '#f2f2f2',borderRadius: '5px'}}>{value}</span>\r\n            :value==='Закрыт' ? <span style={{background: '#fff',color: '#000',borderRadius: '5px'}}>{value}</span> : value\r\n\r\n        }\r\n\r\n]","export const recordViewOrderConfig  =[\r\n    {\r\n        title: \"Номер заказа\",\r\n        dataIndex: 'orderNumber'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n      title: \"Заказчик\",\r\n      dataIndex: 'client'\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'product',\r\n    },\r\n    {\r\n        title: \"Сумма\",\r\n      dataIndex: 'totalPrice'\r\n    },\r\n    {\r\n        title: \"Адрес доставки\",\r\n        dataIndex: 'deliveryAddress',\r\n    },\r\n    {\r\n        title: \"Тип доставки\",\r\n        dataIndex: 'deliveryType',\r\n    },\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType',\r\n    },\r\n    {\r\n        title: \"Адрес склада\",\r\n        dataIndex: 'storageAddress',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'cashPaymentOrderStatus',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'orderStatus',\r\n    },\r\n\r\n]","export const addressData= [{\r\n    id: 1,\r\n    name: 'Бишкек',\r\n    children: []\r\n},\r\n    {\r\n        id: 2,\r\n        name: 'Баткенская область',\r\n        children: [{\r\n            id: 21,\r\n            name: 'Талас',\r\n            children: []\r\n        }]\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Джалал-Абадская область',\r\n        children: [{\r\n            id: 31,\r\n            name: 'Джалал-Абад',\r\n            },\r\n            {\r\n                id: 32,\r\n                name: 'Кара-Куль',\r\n            },\r\n            {\r\n                id: 33,\r\n                name: 'Кербен',\r\n            },\r\n            {\r\n                id: 34,\r\n                name: 'Кок-Джангак',\r\n            },\r\n            {\r\n                id: 35,\r\n                name: 'Кочкор-Ата',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Иссык-Кульская область',\r\n        children: [{\r\n            id: 41,\r\n            name: 'Нарын',\r\n            children: []\r\n        }]\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Нарынская область',\r\n        children: [{\r\n            id: 51,\r\n            name: 'Нарын',\r\n            children: []\r\n        }]\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Ошская область',\r\n        children: [{\r\n            id: 61,\r\n            name: 'Нарын',\r\n            children: []\r\n        }]\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Таласская область',\r\n        children: [{\r\n            id: 71,\r\n            name: 'Нарын',\r\n            children: []\r\n        }]\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Чуйская область',\r\n        children: [{\r\n            id: 81,\r\n            name: 'Нарын',\r\n            children: []\r\n        }]\r\n    },\r\n\r\n]","import {addressData} from \"../../components/Inputs/SelectorInput/data/addressData\";\r\n\r\nexport const orderInputConfig = [\r\n    {\r\n        label: 'Имя'\r\n    },\r\n    {\r\n        label: 'Фамилия'\r\n    },\r\n    {\r\n        label: 'Номер телефона'\r\n    },\r\n    {\r\n    label: \"Адрес доставки\",\r\n   placeholder: \"Бишкек Советская Боконбаева\",\r\n        type: 'map',\r\n        selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Тип доставки\",\r\n        placeholder: \"Самовывоз/Курьер\",\r\n        type: 'selector',\r\n        selectorProperty: 'deliveryType',\r\n    },\r\n    {\r\n        label: \"Дата заказа\",\r\n    },\r\n    {\r\n        label: \"Тип оплаты\",\r\n        placeholder: \"Эльсом/Наличные\",\r\n        type: 'selector',\r\n        selectorProperty: 'paymentType',\r\n    },\r\n    {\r\n        label: \"Адрес склада\",\r\n        placeholder: \"Бишкек Советская Боконбаева\",\r\n        type: 'map',\r\n        selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Статус заказа\",\r\n        placeholder: \"Выберите статус\",\r\n        type: 'selector',\r\n        selectorProperty: 'status',\r\n    }\r\n   ]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder\r\n} from \"../../redux/reducers/orderReducer\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {OrderColumns} from \"../../configs/Orders/tableColumnsConfig\";\r\nimport {recordViewOrderConfig} from \"../../configs/Orders/recordViewConfig\";\r\nimport {orderInputConfig} from \"../../configs/Orders/inputFormConfig\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst OrdersPage = ({orders,orderById,clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder,...props})=>{\r\n    console.log(orderById)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'orders'}\r\n            pageTitle ={'Заказы'}\r\n\r\n            tableData={orders}\r\n            tableColumnsConfig={OrderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewOrderConfig}\r\n            recordViewValuesConfig={{\r\n                orderNumber: orderById?.orderNumber,\r\n                client: <div>{orderById?.lastName} {orderById?.firstName}  | {orderById?.phoneNumber}</div>,\r\n                orderStatus: orderById?.orderStatus ,\r\n                deliveryAddress:orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                elsomPaymentOrderStatus: orderById?.elsomPaymentOrderStatus,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                product:  orderById?.products?.map(item=>{\r\n                    return <div><span>{item.product.name}</span>  <span>{`${item.amount}  ${item.product?.measureUnitResponse?.name}`}</span>  <span> {`${item.totalPrice} ${toBeautifyFieldsValue(item?.product?.currency)}`}  </span></div>\r\n                }),\r\n                totalPrice: orderById?.orderTotalPrice\r\n            }}\r\n\r\n            optionsForSelectorData={{\r\n                status:  [ 'AWAITING_DELIVERY','DELIVERED_AND_PAID','PAID_AWAITNG_DELIVERY', 'DELIVERED', 'CLOSED'],\r\n                deliveryType: ['COURIER', 'STORAGE'],\r\n                paymentType: ['ELSOM','CASH']\r\n\r\n            }}\r\n            formInputsConfig ={orderInputConfig}\r\n            creatorTitle={'Создание заказа'}\r\n            updaterTitle={'Редактирование заказа'}\r\n           adding={false}\r\n            updaterInitialFormValues={{\r\n                firstName: orderById?.firstName,\r\n                lastName: orderById?.lastName,\r\n                phoneNumber: orderById?.phoneNumber,\r\n                deliveryAddress: orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                orderStatus: orderById?.orderStatus,\r\n\r\n            }}\r\n\r\n            getDataFunc={getOrders}\r\n            valueById={orderById}\r\n            getByIdFunc={getOrderById}\r\n            createFunc={createOrder}\r\n            updateFunc={updateOrder}\r\n            clearFunc={clearOrder}\r\n            deleteFunc={deleteOrder}\r\n            isLoading={props.orderFetchLoader}\r\n            hasData={props.hasOrders}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orders: state.order.orders,\r\n        orderById: state.order.orderById,\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        hasOrders: state.order.hasOrders\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        clearOrder,\r\n        getOrderById,\r\n        createOrder,\r\n        deleteOrder,\r\n        getOrders,\r\n        updateOrder\r\n    }\r\n)(OrdersPage)\r\n","import {DELETED_USER, SEARCHING, USER_TOGGLE_FETCH_LOADER, WRITE_USER_BY_ID, WRITE_USERS} from './types'\r\nimport {\r\n\r\n    userDelByIdReq,\r\n    userGetByIdReq, usersGetReq, userUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    users: [],\r\n    userById: {},\r\n    hasUsers: true,\r\n    userFetchLoader: false\r\n}\r\n\r\n\r\nexport const userReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_USERS:\r\n            return{\r\n                ...state,\r\n                users: [...state.users,...action.payload],\r\n                hasUsers: checkHasData(action.payload)\r\n            }\r\n        case USER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                userFetchLoader: action.payload\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                hasUsers: true\r\n            }\r\n        case WRITE_USER_BY_ID:\r\n            return{\r\n                ...state,\r\n                userById: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: WRITE_USER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const userToggleLoader = bool=>{\r\n    return{\r\n        type: USER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const getUsers = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, usersGetReq, WRITE_USERS, userToggleLoader,page,searchText)\r\n}\r\nexport const getUserById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, userGetByIdReq, WRITE_USER_BY_ID, userToggleLoader,id)\r\n}\r\nexport const deleteUser = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,userDelByIdReq,id[i],userToggleLoader)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (data,id)=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,userUpdReq,data,'',userToggleLoader,id)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport const UsersColumns  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n\r\n]","export const recordViewUserConfig  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n    {\r\n        title: \"Отчество\",\r\n        dataIndex: 'middleName',\r\n    },\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'address',\r\n    },\r\n    // {\r\n    //     title: \"Фото пасспорта\",\r\n    //     dataIndex: 'passport',\r\n    // },\r\n    // {\r\n    //     title: \"Фото сертификата\",\r\n    //     dataIndex: 'sertificate',\r\n    // },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearUser, deleteUser, getUserById, getUsers} from \"../../redux/reducers/userReducer\";\r\nimport {UsersColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {recordViewUserConfig} from \"../../configs/Users/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({   users,\r\n                            userById,\r\n                            getUsers,\r\n                            getUserById,\r\n                            deleteUser,\r\n                            clearUser,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'users'}\r\n            pageTitle ={'Пользователи'}\r\n\r\n            tableData={users}\r\n            tableColumnsConfig={UsersColumns}\r\n\r\n            recordViewTitlesConfig={recordViewUserConfig}\r\n\r\n\r\n\r\n            getDataFunc={getUsers}\r\n            valueById={userById}\r\n            getByIdFunc={getUserById}\r\n            clearFunc={clearUser}\r\n            deleteFunc={deleteUser}\r\n            adding={false}\r\n            editing={false}\r\n            isLoading={props.userFetchLoader}\r\n            hasData={props.hasUsers}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        userFetchLoader: state.user.userFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        getUserById,\r\n        deleteUser,\r\n        clearUser\r\n    }\r\n)(CategoriesPage)\r\n","import React from \"react\";\r\n\r\nexport const ProductColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Категория\",\r\n        dataIndex: 'category',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Поставщик\",\r\n        dataIndex: 'supplier',\r\n        object: 'fullName'\r\n    },\r\n]","export const recordViewProductConfig  =[{\r\n    title: \"Название товара\",\r\n        dataIndex: 'name',\r\n},\r\n{\r\n    title: \"Категория товара\",\r\n        dataIndex: 'category',\r\n},\r\n    {\r\n        title: \"Поставщик товара\",\r\n        dataIndex: 'supplier',\r\n    },\r\n\r\n{\r\n    title: \"Описание\",\r\n        dataIndex: 'description',\r\n},\r\n{\r\n    title: \"Цена товара\",\r\n        dataIndex: 'price',\r\n},\r\n{\r\n    title: \"Количество товара\",\r\n        dataIndex: 'measure',\r\n},\r\n    {\r\n        title: \"Фото товара\",\r\n        dataIndex: 'images',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: 'Рейтинг товара',\r\n        dataIndex: 'raiting',\r\n\r\n    },\r\n    {\r\n        title: 'Количество покупок',\r\n        dataIndex: 'boughtCount'\r\n    },\r\n    {\r\n        title: 'Комментарии',\r\n        dataIndex: 'comments'\r\n    }\r\n\r\n    ]","export const productInputConfig = [\r\n    {\r\n        label: \"Название товара\",\r\n        placeholder: \"Картошка\",\r\n        required: 'Введите название товара',\r\n    },\r\n    {\r\n        label: \"Категория товара\",\r\n        placeholder: \"Выберите категорию товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        required: 'Выберите категорию товара',\r\n        nullable: true,\r\n    },\r\n    {\r\n        label: \"Поставщик товара\",\r\n        placeholder: \"Выберите поставщика товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'provider',\r\n        nullable: true,\r\n        required: 'Выберите поставщика товара',\r\n\r\n    },\r\n\r\n    {\r\n        label: \"Описание товара\",\r\n        placeholder: \"Самый вкусный картофель\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Цена товара\",\r\n        placeholder: \"30 сом/кг\",\r\n        dataType: 'number',\r\n        required: 'Укажите цену товара',\r\n    },\r\n    {\r\n        label: \"Валюта\",\r\n        type: 'selector',\r\n        selectorProperty: 'currency',\r\n        nullable: true,\r\n        placeholder: \"сом\",\r\n        required: 'Укажите валюту',\r\n    },\r\n    {\r\n        label: \"Количество товара\",\r\n        placeholder: \"100500\",\r\n        dataType: 'number',\r\n        required: 'Укажите количество товара',\r\n    },\r\n    {\r\n        label: \"Ед.измерения\",\r\n        type: 'selector',\r\n        selectorProperty: 'units',\r\n        nullable: true,\r\n        placeholder: \"кг\",\r\n        required: 'Укажите ед.измерения',\r\n    },\r\n    {\r\n        label: \"Фото товара\",\r\n        type: 'image',\r\n        fileTypes:'image/jpg,image/png',\r\n        imageCount: 6\r\n    },\r\n\r\n    ]\r\n\r\n","export const toClearImageArray = data => {\r\n    return data.length!==0 ? data.map(item=>item?.file ? item.file: item) : null\r\n}","import {\r\n    WRITE_PRODUCTS,\r\n    WRITE_PRODUCT_BY_ID,\r\n    WRITE_RAITING_BY_ID,\r\n    ADDED_PRODUCT,\r\n    DELETED_PRODUCT,\r\n    UPDATED_PRODUCT,\r\n    SEARCHING,\r\n    WRITE_MEASURE_UNITS,\r\n    PRODUCT_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    productsGetReq,\r\n    productPostReq,\r\n    productUpdReq,\r\n    productDelByIdReq,\r\n    productImgPostReq,\r\n    productGetByIdReq, productImgUpdReq,  measureUnitGetReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    products: [],\r\n    productById: {},\r\n    ratingById: undefined,\r\n    hasProducts: true,\r\n    measureUnits: [],\r\n    productFetchLoader: false\r\n\r\n}\r\n\r\n\r\nexport const productReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                productFetchLoader: action.payload\r\n            }\r\n        case WRITE_MEASURE_UNITS:\r\n            return{\r\n                ...state,\r\n                measureUnits: action.payload,\r\n            }\r\n        case WRITE_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                products: [...state.products,...action.payload],\r\n                hasProducts: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                products: [],\r\n                hasProducts: true\r\n            }\r\n        case WRITE_PRODUCT_BY_ID:\r\n            return{\r\n                ...state,\r\n                productById: action.payload\r\n            }\r\n        case WRITE_RAITING_BY_ID:\r\n            return{\r\n                ...state,\r\n                ratingById: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const productToggleLoader = bool=>{\r\n    return{\r\n        type: PRODUCT_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearProduct = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getMeasureUnits = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,measureUnitGetReq,WRITE_MEASURE_UNITS,productToggleLoader)\r\n}\r\nexport const getProducts = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, productsGetReq, WRITE_PRODUCTS, productToggleLoader,page,searchText)\r\n}\r\nexport const getProductById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, productGetByIdReq, WRITE_PRODUCT_BY_ID, productToggleLoader,id)\r\n}\r\nexport const createProduct = data=>{\r\n    return async dispatch => {\r\n        //for(let i=0;i<50;i++) {\r\n            dispatch(productToggleLoader(true))\r\n            await productPostReq(data)\r\n                .then(async resp => {\r\n                    if (data.images) {\r\n                        const formData = new FormData()\r\n                        toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                        formData.append('productId', resp.data.result.id)\r\n                        await productImgPostReq(formData)\r\n                    }\r\n                })\r\n            dispatch(productToggleLoader(false))\r\n       // }\r\n    }\r\n}\r\nexport const deleteProduct = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,productDelByIdReq,id[i],productToggleLoader)\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateProduct = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(productToggleLoader(true))\r\n        await productUpdReq(data,id)\r\n            .then( async resp=>{\r\n                if(data.images) {\r\n                    const formData = new FormData()\r\n                    toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                    formData.append('productId', id)\r\n                    await productImgUpdReq(formData, id)\r\n                }\r\n            })\r\n\r\n        dispatch(productToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import {providerImgPostReq} from \"../api/Request\";\r\n\r\n\r\nexport const formDataProviderTemplate = async (id,data,key)=>{\r\n    console.log(data[key])\r\n    const formData = new FormData()\r\n    formData.append('supplierId', id)\r\n    formData.append('supplierFileType', key)\r\n    data[key].map(item=>formData.append('images',item.file))\r\n    await providerImgPostReq(formData)\r\n}","import {\r\n    WRITE_PROVIDER,\r\n    WRITE_PROVIDER_BY_ID,\r\n    WRITE_ACTIVE_PROVIDERS,\r\n    ADDED_PROVIDER,\r\n    DELETED_PROVIDER, UPDATED_PROVIDER, SEARCHING, PROVIDER_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    providerGetByIdReq,\r\n    providersGetReq,\r\n    providerPostReq,\r\n    providerUpdReq,\r\n    providerDelByIdReq,\r\n    providerActiveGetReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {formDataProviderTemplate} from \"../../utils/templates/formDataTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    providers: [],\r\n    providerById: {},\r\n    activeProviders: [],\r\n    hasProvider: true,\r\n    providerFetchLoader: false\r\n}\r\n\r\n\r\nexport const providerReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PROVIDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                providerFetchLoader: action.payload\r\n            }\r\n        case WRITE_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: [...state.providers,...action.payload],\r\n                hasProvider: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                providers: [],\r\n                hasProvider: true\r\n            }\r\n        case WRITE_PROVIDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                providerById: action.payload\r\n            }\r\n        case WRITE_ACTIVE_PROVIDERS:\r\n            return{\r\n                ...state,\r\n                activeProviders: action.payload\r\n            }\r\n\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearProvider = ()=>{\r\n    return{\r\n        type: WRITE_PROVIDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const providerToggleLoader = bool=>{\r\n    return{\r\n        type: PROVIDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getActiveProviders = (page)=>{\r\n    return async dispatch => getTemplate(dispatch,providerActiveGetReq,WRITE_ACTIVE_PROVIDERS,providerToggleLoader,page)\r\n}\r\nexport const getProviders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, providersGetReq, WRITE_PROVIDER, providerToggleLoader,page,searchText)\r\n}\r\nexport const getProviderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, providerGetByIdReq, WRITE_PROVIDER_BY_ID, providerToggleLoader,id)\r\n}\r\nexport const createProvider = (data)=>{\r\n        return async dispatch => {\r\n            dispatch(providerToggleLoader(true))\r\n            await providerPostReq(data)\r\n                .then(resp => {\r\n\r\n                    formDataProviderTemplate(resp.data.result.id,data,'PASSPORT')\r\n                    formDataProviderTemplate(resp.data.result.id,data,'SERTIFICATE')\r\n                    formDataProviderTemplate(resp.data.result.id,data,'CONTRACT')\r\n                })\r\n            dispatch(providerToggleLoader(false))\r\n        }\r\n}\r\n\r\nexport const deleteProvider = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,providerDelByIdReq,id[i],providerToggleLoader)\r\n        }\r\n    }\r\n}\r\nexport const updateProvider = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,providerUpdReq,data,providerToggleLoader,id)\r\n}\r\n\r\n","import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    ADDED_CATEGORY,\r\n    DELETED_CATEGORY,\r\n    UPDATED_CATEGORY,\r\n    SEARCHING,CATEGORY_TOGGLE_FETCH_LOADER\r\n} from './types'\r\nimport {\r\n    categoryDelByIdReq,\r\n    categoryGetByIdReq,\r\n     categoryGetSearchReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    searchedCategories: [],\r\n    hasCategories: true,\r\n    categoryFetchLoader: false\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case CATEGORY_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                categoryFetchLoader: action.payload\r\n            }\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: [...state.categories,...action.payload],\r\n                hasCategories: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                categories: [],\r\n                hasCategories: true\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const categoryToggleLoader = bool=>{\r\n    return{\r\n        type: 'CATEGORY_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getCategory = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, categoryGetSearchReq, WRITE_CATEGORIES, categoryToggleLoader,page,searchText)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, categoryToggleLoader,id)\r\n}\r\nexport const createCategory = data=>{\r\n        return async dispatch => {\r\n            for (let i=0;i<50;i++) {\r\n                dispatch(categoryToggleLoader(true))\r\n                const formData = new FormData()\r\n                formData.append('categoryRequest', new Blob([JSON.stringify({\r\n                    \"name\": `${data.name}${i}`,\r\n                    \"description\": data.description,\r\n                    \"parentCategoryId\": data.parentCategoryId\r\n                })], {type: \"application/json\"}));\r\n                if (toClearImageArray(data.image) !== null) {\r\n                    toClearImageArray(data.image).map(item => formData.append('image', item))\r\n                } else {\r\n                    formData.append('image', null)\r\n                }\r\n                await categoryPostReq(formData).catch(error => console.log(error.response))\r\n                dispatch(categoryToggleLoader(false))\r\n            }\r\n        }\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n          await deleteTemplate(dispatch,categoryDelByIdReq,id[i],categoryToggleLoader)\r\n        }\r\n    }\r\n}\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,categoryUpdReq,data,categoryToggleLoader,id)\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\n\r\n\r\nimport {ProductColumns} from \"../../configs/Products/tableColumnsConfig\";\r\nimport {recordViewProductConfig} from \"../../configs/Products/recordViewConfig\";\r\nimport {productInputConfig} from \"../../configs/Products/inputFormConfig\";\r\nimport {\r\n    clearProduct,\r\n    createProduct,\r\n    deleteProduct, getMeasureUnits,\r\n    getProductById,\r\n    getProducts,\r\n    updateProduct\r\n} from \"../../redux/reducers/productReducer\";\r\nimport {getActiveProviders} from \"../../redux/reducers/providerReducer\";\r\nimport {getCategory} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\nconst ProductsPage = ({   products,\r\n                          productById,\r\n                          ratingById,\r\n                          getProducts,\r\n                          getProductById,\r\n                          createProduct,\r\n                          updateProduct,\r\n                          deleteProduct,\r\n                          clearProduct,\r\n                          categories,\r\n                          activeProviders,\r\n                          getCategory,\r\n                          getActiveProviders,\r\n                          hasProducts,\r\n                          measureUnits,\r\n                          getMeasureUnits,\r\n    ...props\r\n                      })=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'products'}\r\n            pageTitle ={'Товары'}\r\n\r\n            tableData={products}\r\n            tableColumnsConfig={ProductColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProductConfig}\r\n\r\n            creatorTitle={'Создание товара'}\r\n            updaterTitle={'Редактирование товара'}\r\n            formInputsConfig={productInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : [],\r\n                provider: activeProviders  ? [...activeProviders] : [],\r\n                currency: ['SOM','USD',],\r\n                units: measureUnits  ?  [...measureUnits] : []\r\n            }}\r\n            recordViewValuesConfig={{\r\n                name: productById?.name,\r\n                category: productById?.category?.name,\r\n                supplier: productById?.supplier?.fullName,\r\n                description: productById?.description,\r\n                price: `${productById?.price} ${productById?.currency}`,\r\n                measure: `${productById?.measure} ${productById?.measureUnitResponse?.name}`,\r\n                images: productById?.productImages?.map(item=>item.imageUrl),\r\n                boughtCount: productById?.boughtCount,\r\n                raiting: productById?.raiting,\r\n                comments: productById?.comment?.map(item=>{\r\n                    return <div><span>{`${item.client?.lastName} ${item.client?.firstName} ${item.client?.middleName}`}</span>\r\n                        <span>{item.client?.email}</span>  <span> {item.comment} </span></div>\r\n                })\r\n\r\n            }}\r\n            loadSelectorData={[getCategory,getActiveProviders,getMeasureUnits]}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                categoryId: null,\r\n                supplierId: null,\r\n                description: '',\r\n                price: 0,\r\n                currency: '',\r\n                measure: 0,\r\n                measureUnitId: 0,\r\n                images: []\r\n            }}\r\n            updaterInitialFormValues={{\r\n                name: productById?.name,\r\n                categoryId: productById?.category?.id,\r\n                supplierId: productById?.supplier?.id,\r\n                description: productById?.description,\r\n                price: productById?.price,\r\n                currency: productById?.currency,\r\n                measure: productById?.measure,\r\n                measureUnitId: productById?.measureUnitId,\r\n                images: productById?.productImages?.map(item=>item.imageUrl)\r\n            }}\r\n            getDataFunc={getProducts}\r\n            valueById={productById}\r\n            getByIdFunc={getProductById}\r\n            createFunc={createProduct}\r\n            updateFunc={updateProduct}\r\n            clearFunc={clearProduct}\r\n            deleteFunc={deleteProduct}\r\n            hasData={hasProducts}\r\n            isLoading={props.productFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        products: state.product.products,\r\n        hasProducts: state.product.hasProducts,\r\n        productById: state.product.productById,\r\n        ratingById: state.product.ratingById,\r\n        categories: state.category.categories,\r\n        activeProviders: state.provider.activeProviders,\r\n        measureUnits : state.product.measureUnits,\r\n        productFetchLoader: state.product.productFetchLoader,\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getActiveProviders,\r\n        getProducts,\r\n        getProductById,\r\n        createProduct,\r\n        updateProduct,\r\n        deleteProduct,\r\n        clearProduct,\r\n        getMeasureUnits\r\n    }\r\n)(ProductsPage)\r\n","\r\nexport const providerInputConfig = [\r\n    {\r\n    label: \"ФИО\",\r\n    placeholder: \"Анисимова Виктория Викторовна\",\r\n    required: \"Укажите имя поставщика\",\r\n    },\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"+(999) 00-00-00\",\r\n        required: \"Укажите телефон поставщика\",\r\n        type: 'phone'\r\n    },\r\n    {\r\n        label: \"E-mail\",\r\n        placeholder: \"example@gmail.com\",\r\n    },\r\n    {\r\n        label: \"Адрес\",\r\n        placeholder: \"Чуйская область Бишкек\",\r\n        type: 'map',\r\n        required: \"Укажите адрес поставщика\",\r\n    },\r\n    {\r\n        label: \"Товары\",\r\n        placeholder: \"Картошка,...\",\r\n        required: \"Укажите товары поставщика\",\r\n    },\r\n    {\r\n        label: \"Банковский счет\",\r\n        placeholder: \"40702810500000000001\",\r\n    },\r\n    {\r\n        label: \"Фото пасспорта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,application/pdf',\r\n        imageCount: 2\r\n    },\r\n    {\r\n        label: \"Фото сертификата\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Фото контракта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Статус\",\r\n        type: 'check'\r\n    },\r\n\r\n    ]","import {badStatusSVG, goodStatusSVG} from \"../../assets/icons\";\r\nimport React from \"react\";\r\n\r\nexport const ProviderColumns  =[\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'isActive',\r\n        render: (value)=>value? <img src={goodStatusSVG} /> : <img src={badStatusSVG} alt=\"\"/>\r\n    }\r\n]","export const recordViewProviderConfig  =[\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n    },\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'produces',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'placeOfProduction',\r\n    },\r\n    {\r\n        title: \"Фото пасспорта\",\r\n        dataIndex: 'supplierFile',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Фото сертификата\",\r\n        dataIndex: 'supplierFile',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearProvider,\r\n    createProvider,\r\n    deleteProvider, getProviderById,\r\n    getProviders,\r\n    updateProvider\r\n} from \"../../redux/reducers/providerReducer\";\r\nimport {providerInputConfig} from \"../../configs/Providers/inputFormConfig\";\r\nimport {ProviderColumns} from \"../../configs/Providers/tableColumnsConfig\";\r\nimport {recordViewProviderConfig} from \"../../configs/Providers/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst ProvidersPage = ({providers,providerById,getProviders,getProviderById,createProvider,updateProvider,deleteProvider,clearProvider,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'providers'}\r\n            pageTitle ={'Поставщики'}\r\n\r\n            tableData={providers}\r\n            tableColumnsConfig={ProviderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProviderConfig}\r\n\r\n            creatorTitle={'Создание поставщика'}\r\n            updaterTitle={'Редактирование поставщика'}\r\n            formInputsConfig={providerInputConfig}\r\n            //optionsForSelectorData={providers}\r\n           // loadSelectorData={}\r\n            creatorInitialFormValues={{\r\n                fullName: '',\r\n                phone: '',\r\n                email: '',\r\n                placeOfProduction: '',\r\n                produces: '',\r\n                walletNumber: '',\r\n                PASSPORT: [],\r\n                SERTIFICATE: [],\r\n                CONTRACT: [],\r\n                isActive: false\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction:  providerById?.placeOfProduction,\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            getDataFunc={getProviders}\r\n            valueById={providerById}\r\n            getByIdFunc={getProviderById}\r\n            createFunc={createProvider}\r\n            updateFunc={updateProvider}\r\n            clearFunc={clearProvider}\r\n            deleteFunc={deleteProvider}\r\n            isLoading={props.providerFetchLoader}\r\n            hasData={props.hasProvider}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        providers: state.provider.providers,\r\n        providerById: state.provider.providerById,\r\n        providerFetchLoader: state.provider.providerFetchLoader,\r\n        hasProvider: state.provider.hasProvider\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getProviders,\r\n        getProviderById,\r\n        createProvider,\r\n        updateProvider,\r\n        deleteProvider,\r\n        clearProvider\r\n    }\r\n)(ProvidersPage)\r\n","import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img src={checkPasSVG} alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PasswordInput from \"../Inputs/PasswordInput/PasswordInput\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport {connect} from \"react-redux\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport {writeAuthMessage} from \"../../redux/reducers/mainReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst AuthForm = (props)=>{\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required(),\r\n                password: Yup.string().required(),\r\n            })}\r\n            onSubmit={(values)=>props.submitHandler(values)}\r\n        >\r\n            <Form\r\n                onClick={()=>props.writeAuthMessage('')}\r\n            >\r\n                <Field name=\"username\" placeholder=\"Логин\">\r\n                    {({field:{name},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} />}\r\n                </Field>\r\n                <Field name=\"password\" >\r\n                    {({field:{name},form: { setFieldValue}})=> <PasswordInput setFieldValue={setFieldValue} name={name} placeholder=\"Пароль\"/>}\r\n                </Field>\r\n                {props.authFetchLoader || props.userFetchLoader ? <Preloader /> :\r\n                <button className={\"auth__btn\"} type={'submit'}>Войти</button>\r\n                }\r\n                {props.authErrorMessage && <ErrorMsg text={props.authErrorMessage}/>}\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authErrorMessage: state.main.authErrorMessage,\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeAuthMessage})(AuthForm)","import React from 'react'\r\nimport AuthForm from \"./AuthForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {authSignIn, togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\nconst AuthContainer = ({authSignIn})=>{\r\n\r\n    const submitHandler = (values)=>authSignIn(values)\r\n    return(\r\n        <AuthForm submitHandler={submitHandler}/>\r\n    )\r\n}\r\n\r\nexport default connect(null,{authSignIn})(AuthContainer)","import React from 'react'\r\nimport './AuthPage.css'\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container'>\r\n           <div className=\"auth__block\">\r\n               <div className=\"auth__title\">Авторизация</div>\r\n               <AuthContainer />\r\n           </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","export const recordViewCategoryConfig  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n\r\n        dataIndex: 'imagePath',\r\n        type: 'image'\r\n    },\r\n]","export const CategoryColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n\r\n    },\r\n]","export const categoryInputConfig = [{\r\n    label: \"Название\",\r\n    placeholder: \"Овощи\",\r\n    required: \"Введите название категории\",\r\n\r\n},\r\n    {\r\n        label: \"Описание\",\r\n        placeholder: \"...\",\r\n    },\r\n    {\r\n        label: \"Родительская категория\",\r\n        placeholder: \"Выберите родительскую категорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        nullable: true\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n        dataIndex: 'image',\r\n        type: 'image',\r\n        fileTypes:'image/svg+xml',\r\n        required: 'Добавьте иконку'\r\n    },\r\n]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearCategory,\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById, getSearchedCategory, updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {recordViewCategoryConfig} from \"../../configs/Categories/recordViewConfig\";\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/inputFormConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categories,hasCategories,categoryById,getSearchedCategory,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n            recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Создание категории'}\r\n            updaterTitle={'Редактирование категории'}\r\n            formInputsConfig={categoryInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : []\r\n            }}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                description: '',\r\n                parentCategoryId: null,\r\n                image: ''}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                description: categoryById?.description,\r\n                parentCategoryId: categoryById?.parentCategory?.id ? categoryById.parentCategory.id :  null,\r\n                image:  categoryById?.imagePath\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n            clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n            hasData={hasCategories}\r\n            isLoading={props.categoryFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById,\r\n        hasCategories: state.category.hasCategories,\r\n        categoryFetchLoader: state.category.categoryFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        clearCategory,\r\n    }\r\n    )(CategoriesPage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isLoading: state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","import  React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            <div className={'createOrEditContainer__title'}><Link to={props.urlToBack}><img src={backSVG} alt=\"\"/></Link> <h2>{\"Редактирование профиля\"}</h2></div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: props.profile?.firstName,\r\n                    lastName: props.profile?.lastName,\r\n                    middleName: props.profile?.middleName,\r\n                    email: props.profile?.email\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    firstName: Yup.string(),\r\n                    lastName: Yup.string(),\r\n                    middleName: Yup.string(),\r\n                    email: Yup.string()\r\n                })}\r\n                onSubmit={async (values)=>await props.handleSubmit(values)}\r\n            >\r\n                {({handleSubmit,errors,values}) => {\r\n\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'firstName'}>Имя\r\n                                <Field name=\"firstName\" placeholder=\"Виктория\"/>\r\n                                <span className='authError'><ErrorMessage name=\"firstName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'lastName'}>Фамилия\r\n                                <Field name=\"lastName\" placeholder=\"Ансимова\"/>\r\n                                <span className='authError'><ErrorMessage name=\"lastName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'middleName'}>Отчество\r\n                                <Field name=\"middleName\" placeholder=\"Викторовна\"/>\r\n                                <span className='authError'><ErrorMessage name=\"middleName\"/></span>\r\n                                </label>\r\n                            </div>\r\n\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    urlToTable={'providers'}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n                                <CancelBtn\r\n                                    urlToTable={'providers'}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;","import React, {useEffect} from 'react'\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport {getUserById, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst ProfileContainer = (props)=>{\r\n    useEffect(()=>{\r\n        if(props.userId) {\r\n            props.getUserById(props.userId)\r\n        }\r\n    },[props.userId])\r\n    const handleSubmit = values=>props.updateUser(values,localStorage.getItem('id'))\r\n    return(\r\n        !props.userFetchLoader && !props.authFetchLoader && props.profile   ?\r\n        <ProfileForm {...props} handleSubmit={handleSubmit}/> :\r\n            <Preloader />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        userId: state.main.userId,\r\n        profile: state.user.userById\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateUser,getUserById})(ProfileContainer)","import React from 'react'\r\n\r\nimport ProfileContainer from \"../../components/Profile/ProfileContainer\";\r\n\r\n\r\n\r\n\r\nconst ProfilePage = ()=>{\r\n\r\n    return(\r\n    <ProfileContainer urlToBack={'/providers'}/>\r\n    )\r\n}\r\n\r\nexport  default ProfilePage","import React, {useEffect, useRef, useState} from 'react'\r\nimport './pageLoader.css'\r\nimport {loaderLogoSVG} from '../../assets/icons'\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {connect} from \"react-redux\";\r\nimport {Transition,Spring,config} from \"react-spring/renderprops\";\r\nimport {togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\nconst PageLoader = ({isPageLoader})=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"box\" ><img src={loaderLogoSVG}  alt=\"\"/></div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n\r\n        isPageLoader: state.main.isPageLoader,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{togglePageLoader})(PageLoader)","import {\r\n    WRITE_FAQ,\r\n    WRITE_FAQ_BY_ID,\r\n    ADDED_FAQ,\r\n    DELETED_FAQ,\r\n    UPDATED_FAQ, SEARCHING,FAQ_TOGGLE_FETCH_LOADER\r\n} from './types'\r\nimport {\r\n    faqDelByIdReq,\r\n    faqGetByIdReq,\r\n    faqGetReq,\r\n    faqPostReq,\r\n    faqUpdReq\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./mainReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    faq: [],\r\n    faqById: {},\r\n    hasFaq: true,\r\n    faqFetchLoader: false\r\n}\r\n\r\n\r\nexport const faqReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n     case FAQ_TOGGLE_FETCH_LOADER:\r\n                return{\r\n                    ...state,\r\n                    faqFetchLoader: action.payload\r\n                }\r\n        case WRITE_FAQ:\r\n            return{\r\n                ...state,\r\n               faq: [...state.faq,...action.payload],\r\n               hasFaq: checkHasData(action.payload)\r\n            }\r\n             case SEARCHING:\r\n            return {\r\n                ...state,\r\n                faq: [],\r\n                hasFaq: true\r\n            }\r\n        case WRITE_FAQ_BY_ID:\r\n            return{\r\n                ...state,\r\n                faqById: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const faqToggleLoader = bool=>{\r\n    return{\r\n        type: FAQ_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getFaq = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, faqGetReq, WRITE_FAQ, faqToggleLoader,page,searchText)\r\n}\r\nexport const getFaqById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, faqGetByIdReq, WRITE_FAQ_BY_ID, faqToggleLoader,id)\r\n}\r\nexport const createFaq = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqPostReq,data,faqToggleLoader)\r\n}\r\nexport const deleteFaq = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,faqDelByIdReq,id[i],faqToggleLoader)\r\n        }\r\n    }\r\n}\r\nexport const updateFaq = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqUpdReq,data,faqToggleLoader,id)\r\n}\r\nexport const clearFaq = ()=>{\r\n    return{\r\n        type: WRITE_FAQ_BY_ID,\r\n        action: []\r\n    }\r\n}\r\n","export const faqInputConfig = [{\r\n    label: \"Вопрос\",\r\n    placeholder: \"...\",\r\n    required: \"Введите вопрос\",\r\n    type: 'textarea'\r\n\r\n},\r\n    {\r\n        label: \"Ответ\",\r\n        placeholder: \"...\",\r\n        required: \"Введите ответ\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const FaqColumns  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewFaqConfig  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearFaq, createFaq, deleteFaq, getFaq, getFaqById, updateFaq} from \"../../redux/reducers/faqReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {faqInputConfig} from \"../../configs/Faq/inputFormConfig\";\r\nimport {FaqColumns} from \"../../configs/Faq/tableColumnsConfig\";\r\nimport {recordViewFaqConfig} from \"../../configs/Faq/recordViewConfig\";\r\n\r\n\r\nconst FaqPage = props=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'faq'}\r\n            pageTitle ={'FAQ'}\r\n\r\n            tableData={props.faq}\r\n            tableColumnsConfig={FaqColumns}\r\n\r\n            recordViewTitlesConfig={recordViewFaqConfig}\r\n\r\n            creatorTitle={'Создание вопроса-ответа'}\r\n            updaterTitle={'Редактирование вопроса-ответа'}\r\n            formInputsConfig={faqInputConfig}\r\n            creatorInitialFormValues={{\r\n                question: \"\",\r\n                answer: \"\",\r\n                order: \"\"\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                question: props.faqById?.question,\r\n                answer: props.faqById?.answer,\r\n                order: props.faqById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getFaq}\r\n            valueById={props.faqById}\r\n            getByIdFunc={props.getFaqById}\r\n            createFunc={props.createFaq}\r\n            updateFunc={props.updateFaq}\r\n            deleteFunc={props.deleteFaq}\r\n            clearFunc={props.clearFaq}\r\n            isLoading={props.faqFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        faq: state.faq.faq,\r\n        faqById: state.faq.faqById,\r\n        faqFetchLoader: state.faq.faqFetchLoader\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getFaq,\r\n        getFaqById,\r\n        createFaq,\r\n        updateFaq,\r\n        deleteFaq,\r\n        clearFaq\r\n    }\r\n)(FaqPage)\r\n","import {\r\n    WRITE_ABOUT_US,\r\n    WRITE_ABOUT_US_BY_ID,\r\n    ADDED_ABOUT_US,\r\n    DELETED_ABOUT_US,\r\n    UPDATED_ABOUT_US, SEARCHING, ABOUT_TOGGLE_FETCH_LOADER, WRITE_CATEGORIES\r\n} from './types'\r\nimport {\r\n    aboutUsDelByIdReq,\r\n    aboutUsGetByIdReq,\r\n    aboutUsGetReq,\r\n    aboutUsPostReq,\r\n    aboutUsUpdReq, categoryGetSearchReq\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {categoryToggleLoader} from \"./categoryReducer\";\r\n\r\nconst initialState={\r\n    aboutUs: [],\r\n    aboutUsById: {},\r\n    hasAbout: true,\r\n    aboutFetchLoader: false\r\n}\r\n\r\n\r\nexport const aboutUsReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ABOUT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                aboutFetchLoader: action.payload\r\n            }\r\n        case WRITE_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: [...state.aboutUs,...action.payload],\r\n                hasAbout: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                aboutUs: [],\r\n                hasAbout: true\r\n            }\r\n        case WRITE_ABOUT_US_BY_ID:\r\n            return{\r\n                ...state,\r\n                aboutUsById: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const aboutToggleLoader = bool=>{\r\n    return{\r\n        type: 'ABOUT_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const getAboutUs = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, aboutUsGetReq, WRITE_ABOUT_US, aboutToggleLoader,page,searchText)\r\n}\r\nexport const getAboutUsById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, aboutUsGetByIdReq, WRITE_ABOUT_US_BY_ID, aboutToggleLoader,id)\r\n}\r\nexport const createAboutUs = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsPostReq,data,aboutToggleLoader)\r\n}\r\nexport const deleteAboutUs = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,aboutUsDelByIdReq,id[i],aboutToggleLoader)\r\n        }\r\n    }\r\n}\r\nexport const updateAboutUs = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsUpdReq,data,aboutToggleLoader,id)\r\n}\r\n\r\n","export const aboutUsInputConfig = [{\r\n    label: \"Загловок\",\r\n    placeholder: \"Заголовок...\",\r\n\r\n\r\n},\r\n    {\r\n        label: \"Параграф\",\r\n        placeholder: \"...\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const AboutUsColumns  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewAboutUsConfig  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    createAboutUs,\r\n    deleteAboutUs,\r\n    getAboutUs,\r\n    getAboutUsById,\r\n    updateAboutUs\r\n} from \"../../redux/reducers/aboutUsReducer\";\r\nimport {aboutUsInputConfig} from \"../../configs/AboutUs/inputFormConfig\";\r\nimport {AboutUsColumns} from \"../../configs/AboutUs/tableColumnsConfig\";\r\nimport {recordViewAboutUsConfig} from \"../../configs/AboutUs/recordViewConfig\";\r\n\r\n\r\nconst AboutUsPage = props=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'aboutus'}\r\n            pageTitle ={'О нас'}\r\n\r\n            tableData={props.aboutUs}\r\n            tableColumnsConfig={AboutUsColumns}\r\n\r\n            recordViewTitlesConfig={recordViewAboutUsConfig}\r\n\r\n            creatorTitle={'Создание параграфа \"О нас\"'}\r\n            updaterTitle={'Редактирование параграфа \"О нас\"'}\r\n            formInputsConfig={aboutUsInputConfig}\r\n            creatorInitialFormValues={{\r\n                header: '',\r\n                paragraph: '',\r\n                order: ''\r\n            }}\r\n            updaterInitialFormValues={{\r\n\r\n                header: props.aboutUsById?.header,\r\n                paragraph: props.aboutUsById?.paragraph,\r\n                order: props.aboutUsById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getAboutUs}\r\n            valueById={props.aboutUsById}\r\n            getByIdFunc={props.getAboutUsById}\r\n            createFunc={props.createAboutUs}\r\n            updateFunc={props.updateAboutUs}\r\n            deleteFunc={props.deleteAboutUs}\r\n            isLoading={props.aboutFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        aboutUs: state.aboutUs.aboutUs,\r\n        aboutUsById: state.aboutUs.aboutUsById,\r\n        aboutFetchLoader: state.aboutUs.aboutFetchLoader\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getAboutUs,\r\n        getAboutUsById,\r\n        createAboutUs,\r\n        updateAboutUs,\r\n        deleteAboutUs,\r\n    }\r\n)(AboutUsPage)\r\n","\r\nexport const settingsInputConfig = [\r\n    {\r\n    label: \"Цена за доставку\",\r\n    placeholder: \"150\",\r\n    required: \"Укажите цену доставки\",\r\n    }\r\n    ]","import React from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDeliveryCash, updateDeliveryCash} from \"../../redux/reducers/orderReducer\";\r\nimport {settingsInputConfig} from \"../../configs/Settings/inputFormConfig\";\r\n\r\n\r\n\r\nconst SettingsPage  = props=>{\r\n    return(\r\n        <>\r\n            <h2 className='page-content__title'>Настройки</h2>\r\n            <FormContainer\r\n                getByIdFunc={props.getDeliveryCash}\r\n                valueById={props.deliveryCash}\r\n                initialVals={{\r\n                    deliveryPrice: props.deliveryCash?.deliveryPrice\r\n                }}\r\n                updReq={props.updateDeliveryCash}\r\n                formTitle={'Настройки заказа'}\r\n                inputConfig={settingsInputConfig}\r\n                isLoading={props.orderFetchLoader}\r\n            />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        deliveryCash: state.order.deliveryCash\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateDeliveryCash,getDeliveryCash})(SettingsPage)","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport OrdersPage from './pages/Orders/OrdersPage';\r\nimport UsersPage from './pages/Users/UsersPage';\r\nimport ProductsPage from './pages/Products/ProductsPage';\r\nimport ProvidersPage from './pages/Providers/ProvidersPage';\r\nimport AuthPage from \"./pages/Auth/AuthPage\";\r\nimport CategoriesPage from \"./pages/Categories/CategoriesPage\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfilePage from \"./pages/Profile/ProfilePage\";\r\nimport {authRefresh, toggleAuth} from \"./redux/reducers/mainReducer\";\r\nimport {getUserById} from \"./redux/reducers/userReducer\";\r\nimport {expChecker} from \"./components/Auth/expChecker\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {logout} from \"./components/Auth/logout\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport PageLoader from \"./components/pageLoader/pageLoader\";\r\nimport FaqPage from \"./pages/Faq/FaqPage\";\r\nimport AboutUsPage from \"./pages/AboutUs/AboutUsPage\";\r\nimport SettingsPage from \"./pages/Settings/SettingsPage\";\r\n\r\nfunction App(props) {\r\n\r\n    useEffect( ()=>{\r\n        console.log('check')\r\n        if (expChecker()) {                    //проверка на время токена\r\n            props.toggleAuth(true)\r\n            setTimeout(() =>props.toggleAuth(false),expChecker())\r\n        } else if (tokensChecker()) {                            //отправка на новый токен\r\n            const fetch = () => {\r\n                props.authRefresh({\r\n                    accessToken: localStorage.getItem('accessToken'),\r\n                    refreshToken: localStorage.getItem('refreshToken'),\r\n                    username: props.username\r\n                })\r\n            }\r\n           fetch()\r\n        } else {                                                            //выход из аккаунта\r\n            props.toggleAuth(false)\r\n            logout()\r\n            props.history.push('/')\r\n        }\r\n    },[props.isAuthorized])\r\n\r\n  return(\r\n\r\n      (props.isPageLoader || props.isAuthorized===undefined ) ? <PageLoader/>:\r\n            <>\r\n                {props.modal.isOpen && <Modal/>}\r\n\r\n                  {props.isAuthorized ?\r\n                      <>\r\n                          <Header/>\r\n                          <div className=\"container\">\r\n                              <SidebarList/>\r\n                              <div className=\"page-content\">\r\n                                  <Switch>\r\n                                      <Route path={'/orders'} component={OrdersPage}/>\r\n                                      <Route path={'/users'} component={UsersPage}/>\r\n                                      <Route path={'/products'} component={ProductsPage}/>\r\n                                      <Route path={'/categories'} component={CategoriesPage}/>\r\n                                      <Route path={'/providers'} component={ProvidersPage}/>\r\n                                      <Route path={'/profile'} exact component={ProfilePage}/>\r\n                                      <Route path={'/faq'}  component={FaqPage}/>\r\n                                      <Route path={'/aboutus'}  component={AboutUsPage}/>\r\n                                      <Route path={'/settings'}  component={SettingsPage}/>\r\n                                  </Switch>\r\n                              </div>\r\n                          </div>\r\n                      </>\r\n                      :\r\n                      <>\r\n                          <Switch>\r\n                              <Route path={'/'} exact component={AuthPage}/>\r\n                          </Switch>\r\n\r\n                      </>\r\n                  }\r\n             </>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        visible : state.modal.isOpenModal.isOpen,\r\n        isAuthorized: state.main.isAuthorized,\r\n        isPageLoader: state.main.isPageLoader,\r\n        userById: state.user.userById,\r\n        providerById: state.provider.providerById,\r\n        productById: state.product.productById,\r\n        categoryById: state.category.categoryById,\r\n        categories: state.category.categories,\r\n        users: state.user.users,\r\n        products: state.product.products,\r\n        providers: state.provider.providers,\r\n        isLoading : state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal,\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserById,authRefresh})(withRouter(App));\r\n","export const tokensChecker = ()=>{\r\n    const accessToken = localStorage.getItem('accessToken')\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    if(refreshToken && accessToken){\r\n        return true\r\n    }\r\n    return false\r\n}","import { combineReducers } from \"redux\";\r\nimport {tableReducer} from \"./tableReducer\";\r\nimport {modalReducer} from \"./modalReducer\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {productReducer} from \"./productReducer\";\r\nimport {providerReducer} from \"./providerReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {orderReducer} from \"./orderReducer\";\r\nimport {faqReducer} from \"./faqReducer\";\r\nimport {aboutUsReducer} from \"./aboutUsReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    main: mainReducer,\r\n    table: tableReducer,\r\n    modal: modalReducer,\r\n\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    provider: providerReducer,\r\n    user:userReducer,\r\n    order: orderReducer,\r\n    faq: faqReducer,\r\n    aboutUs: aboutUsReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport {rootReducer} from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk,\r\n        ),\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}