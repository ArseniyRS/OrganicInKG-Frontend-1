{"version":3,"sources":["assets/icons/category.svg","assets/icons/about.svg","assets/icons/user.svg","assets/icons/delivery.svg","assets/icons/package.svg","assets/icons/radish.svg","assets/icons/information.svg","assets/icons/search.svg","assets/icons/badStatus.svg","assets/icons/goodStatus.svg","assets/icons/delete.svg","assets/icons/back.svg","assets/icons/checkPassword.svg","assets/icons/plus.svg","assets/icons/openList.svg","assets/icons/Rolling-0.6s-197px.svg","assets/icons/Rolling-0.6s-197px2.svg","assets/active_icons/category_active.svg","assets/active_icons/provider_active.svg","assets/active_icons/product_active.svg","assets/active_icons/user_active.svg","assets/active_icons/quest_active.svg","assets/active_icons/about_active.svg","assets/active_icons/order_active.svg","assets/active_icons/settings_active.svg","assets/icons/settings.svg","assets/img/logo.svg","assets/img/loader-logo.svg","assets/icons/error.svg","assets/icons/upload-button.svg","assets/icons/edit.svg","assets/icons/trash.svg","assets/icons/leftArrow.svg","redux/reducers/types.js","utils/api/Request.js","utils/templates/getTemplate.jsx","utils/templates/createOrChangeTemplate.js","utils/templates/deleteTemplate.js","utils/checkHasData.js","utils/templates/getSearchedTemplate.js","utils/templates/updateItemInStore.js","redux/reducers/orderReducer.js","components/Auth/logout.js","redux/reducers/mainReducer.js","components/Auth/expChecker.js","components/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Sidebar/SidebarItem.jsx","components/Sidebar/sideBarConfig.js","components/Sidebar/SidebarList.jsx","components/Search-panel/SearchPanel.jsx","components/Btns/AddBtn.jsx","redux/reducers/modalReducer.jsx","redux/reducers/tableReducer.js","components/Btns/DeleteBtn.jsx","components/Table/TableItemColumn.jsx","utils/toBeatifyFiledsValue.js","components/Table/Table-item.jsx","components/Modals/ErrorMessage.jsx","components/Table/Table.jsx","components/RecordViewer/RecordViewer.jsx","components/RecordViewer/RecordViewerContainer.jsx","components/Btns/EditBtn.jsx","components/Btns/CancelBtn.jsx","components/Inputs/SelectorInput/SelectorItem.jsx","components/Inputs/SelectorInput/SelectorList.jsx","components/Inputs/SelectorInput/Selector.js","components/Inputs/SelectorInput/SelectorInput.jsx","utils/toUglyfyFieldsValue.js","components/ImgUploader/ImgUploader.jsx","components/Inputs/PhoneInput/PhoneInput.jsx","components/Inputs/CheckInput/CheckInput.jsx","components/Inputs/Selector/SelectItem.js","components/Inputs/Selector/SelectBlock.js","components/Inputs/Selector/SelectField.jsx","components/Inputs/MapBlock/MapBlock.jsx","components/FormGenerator/FormInput.jsx","components/FormGenerator/Former.jsx","components/FormGenerator/validationGenerator.js","components/FormGenerator/FormContainer.jsx","components/PageRenderer/PageRendererContainer.jsx","configs/Orders/tableColumnsConfig.js","configs/Orders/recordViewConfig.js","configs/Orders/inputFormConfig.js","pages/Orders/OrdersPage.jsx","redux/reducers/userReducer.js","configs/Users/tableColumnsConfig.js","configs/Users/recordViewConfig.js","pages/Users/UsersPage.jsx","configs/Products/tableColumnsConfig.js","configs/Products/recordViewConfig.js","configs/Products/inputFormConfig.js","utils/templates/toClearImageArray.js","redux/reducers/productReducer.js","utils/templates/formDataTemplate.js","redux/reducers/providerReducer.js","redux/reducers/categoryReducer.js","pages/Products/ProductsPage.jsx","configs/Providers/inputFormConfig.js","configs/Providers/tableColumnsConfig.js","configs/Providers/recordViewConfig.js","pages/Providers/ProvidersPage.jsx","components/Inputs/PasswordInput/PasswordInput.jsx","components/Auth/AuthForm.jsx","components/Auth/AuthContainer.jsx","pages/Auth/AuthPage.jsx","configs/Categories/recordViewConfig.js","configs/Categories/tableColumnsConfig.js","configs/Categories/inputFormConfig.js","pages/Categories/CategoriesPage.jsx","components/Modals/Modal.jsx","components/Profile/ProfileForm.jsx","components/Profile/ProfileContainer.jsx","pages/Profile/ProfilePage.jsx","redux/reducers/faqReducer.jsx","components/pageLoader/pageLoader.js","configs/Faq/inputFormConfig.js","configs/Faq/tableColumnsConfig.js","configs/Faq/recordViewConfig.js","pages/Faq/FaqPage.js","redux/reducers/aboutUsReducer.js","configs/AboutUs/inputFormConfig.js","configs/AboutUs/tableColumnsConfig.js","configs/AboutUs/recordViewConfig.js","pages/AboutUs/AboutUsPage.js","configs/Settings/inputFormConfig.js","pages/Settings/SettingsPage.js","App.jsx","components/Auth/tokensChecker.js","redux/reducers/index.jsx","redux/store.jsx","index.jsx"],"names":["module","exports","SEARCHING","tokenGetter","headers","localStorage","getItem","instance","axios","baseURL","authReq","data","post","then","response","authRefreshReq","categoryGetByIdReq","id","get","categoryPostReq","categoryDelByIdReq","delete","categoryUpdReq","put","categoryGetSearchReq","searchText","page","productsGetReq","productGetByIdReq","productPostReq","productDelByIdReq","productUpdReq","productImgPostReq","entries","pair","console","log","measureUnitGetReq","providersGetReq","providerGetByIdReq","providerPostReq","providerImgPostReq","providerDelByIdReq","providerUpdReq","providerActiveGetReq","providerPlaceOfProductionPostReq","usersGetReq","userGetByIdReq","userDelByIdReq","userUpdReq","ordersGetReq","orderGetByIdReq","orderPostReq","orderDelByIdReq","orderUpdStatusReq","deliveryCashGetReq","deliveryCashUpdReq","faqGetReq","faqGetByIdReq","faqPostReq","faqDelByIdReq","faqUpdReq","aboutUsGetReq","aboutUsGetByIdReq","aboutUsPostReq","aboutUsDelByIdReq","aboutUsUpdReq","getTemplate","dispatch","getFunc","actionType","toggleLoader","a","result","type","payload","createOrChangeTemplate","func","deleteTemplate","deleteFunc","catch","resp","checkHasData","length","getSearchedTemplate","updateItemInStore","state","idx","newArrayData","findIndex","item","parseInt","slice","initialState","orders","orderById","deliveryCash","hasOrders","orderFetchLoader","orderToggleLoader","bool","logout","removeItem","authFetchLoader","isAuthorized","isPageLoader","authErrorMessage","username","userId","undefined","writeAuthMessage","str","togglePageLoader","toggleAuth","value","getUserName","firstName","phoneNumber","tokenToLocalStorage","setItem","body","accessToken","JSON","stringify","Date","parse","tokenExpirationTime","refreshExpirationTime","refreshToken","expChecker","exp","now","isExpired","token","getExpirationDate","Preloader","props","className","style","width","height","connect","main","writeUserId","useEffect","to","src","logoSVG","alt","onClick","withRouter","name","svg","activeSvg","history","useState","clicked","setClick","location","pathname","indexOf","classes","classNames","push","sideBarConfig","providerSVG","providerActiveSVG","orderSVG","orderActiveSVG","productSVG","productActiveSVG","userSVG","userActiveSVG","categorySVG","categoryActiveSVG","questionSVG","questionActiveSVG","aboutSVG","aboutActiveSVG","settingsSVG","settingsActiveSVG","elements","map","index","key","SearchPanel","searchSVG","placeholder","onChange","event","handleSearchText","target","AddBtn","urlToCreate","isOpenModal","isOpen","title","confirmFunc","urlToTable","toggleModal","obj","recordViewId","elementsToDelete","tableMessage","writeTableMessage","table","confirmHandler","deleteSVG","TableItemColumn","column","render","toBeautifyFieldsValue","NaN","writeElementsToDelete","values","columns","handlerClick","deleting","check","setCheck","buff","splice","boxShadow","valuesToArray","Object","valsKey","keys","i","j","dataIndex","object","tableItemColumn","ErrorMsg","text","errorSVG","isLoading","getDataFunc","adding","hasData","getDataFuncSearch","setSearchText","setPage","useDispatch","timeoutId","setTimeout","clearTimeout","dataLength","next","hasMore","loader","endMessage","textAlign","initialScrollY","titles","urlToUpd","match","editing","recordViewValuesConfig","backSVG","results","Array","isArray","valueChooser","params","array","fieldSearcherInObj","searchedField","prop","valueById","clearFunc","getByIdFunc","disabled","SelectorItem","isOpenList","setOpenList","handleClick","thirdStyle","checked","setChecked","styles","children","openList","SelectorList","Selector","setVisibleSelector","selectorRef","useRef","closeSelector","e","current","contains","document","addEventListener","removeEventListener","ref","SelectorInput","setFieldValue","visibleSelector","selected","setSelected","inputText","setInputText","toUglyfyFieldsValue","plusSVG","ImgUploader","imageCount","fileTypes","files","setFiles","error","setError","randomNameGenerator","res","random","Math","floor","String","fromCharCode","createFile","urls","url","fetch","blob","metadata","file","File","getBase64","string","data_url","loadFiles","callback","reader","FileReader","readAsDataURL","useDropzone","accept","onDrop","acceptedFiles","split","getRootProps","getInputProps","thumbs","trashSVG","deleteItem","Url","imgUrl","toUpperCase","uploadBtnSVG","PhoneInput","mask","replace","CheckInput","marginTop","defaultChecked","SelectItem","fullName","SelectBlock","SelectField","selectedValue","setSelectedValue","MapBlock","ymaps","React","placemarkRef","mapRef","city","country","region","street","place","setPlace","address","setAddress","enterprise","query","apikey","modules","instanceRef","onLoad","ympasInstance","coords","geometry","setCoordinates","Placemark","iconCaption","preset","draggable","createPlacemark","geoObjects","add","properties","set","geocode","firstGeoObject","getAddressLine","getLocalities","getCountry","getAdministrativeAreas","getThoroughfare","balloonContent","getAddress","defaultState","center","zoom","position","FormInput","label","selectInputData","selectorProperty","options","readOnly","htmlFor","field","form","as","Former","inputs","initialVals","inputConfig","optionsForSelector","readonly","schema","config","dataType","Yup","required","min","max","nullable","validationGenerator","formTitle","initialValues","validationSchema","onSubmit","handleSubmit","errors","createReq","updReq","loadSelectorData","pageUrl","pageTitle","tableData","tableColumnsConfig","recordViewTitlesConfig","creatorTitle","updaterTitle","formInputsConfig","optionsForSelectorData","creatorInitialFormValues","updaterInitialFormValues","createFunc","updateFunc","exact","path","OrderColumns","background","color","borderRadius","padding","margin","recordViewOrderConfig","orderInputConfig","order","clearOrder","action","getOrderById","createOrder","deleteOrder","getOrders","updateOrder","orderStatus","orderNumber","client","lastName","deliveryAddress","deliveryType","desiredDeliveryDate","elsomPaymentOrderStatus","paymentType","storageAddress","product","products","amount","measureUnitResponse","totalPrice","currency","orderTotalPrice","status","users","userById","hasUsers","userFetchLoader","userToggleLoader","getUserById","UsersColumns","recordViewUserConfig","user","getUsers","deleteUser","clearUser","ProductColumns","recordViewProductConfig","productInputConfig","toClearImageArray","productById","ratingById","hasProducts","measureUnits","productFetchLoader","productToggleLoader","formDataProviderTemplate","formData","FormData","append","providers","providerById","activeProviders","hasProvider","providerFetchLoader","providerToggleLoader","categories","categoryById","searchedCategories","hasCategories","categoryFetchLoader","categoryToggleLoader","getCategory","category","provider","getActiveProviders","getProducts","getProductById","createProduct","images","updateProduct","deleteProduct","clearProduct","getMeasureUnits","units","supplier","description","price","measure","productImages","imageUrl","boughtCount","raiting","comments","comment","middleName","email","categoryId","supplierId","measureUnitId","providerInputConfig","ProviderColumns","goodStatusSVG","badStatusSVG","recordViewProviderConfig","getProviders","getProviderById","createProvider","placeOfProduction","newData","updateProvider","deleteProvider","clearProvider","phone","produces","walletNumber","ewalletNumber","PASSPORT","supplierFile","filter","supplierFileType","SERTIFICATE","CONTRACT","isActive","PasswordInput","visiblePassword","setVisiblePassword","checkPasSVG","password","submitHandler","authSignIn","statusCodeValue","AuthPage","recordViewCategoryConfig","CategoryColumns","categoryInputConfig","getCategoryById","createCategory","Blob","parentCategoryId","image","updateCategory","deleteCategory","clearCategory","getSearchedCategory","parentCategory","imagePath","isFetchLoader","modal","ProfileForm","urlToBack","profile","updateUser","ProfilePage","loaderLogoSVG","faq","faqById","hasFaq","faqFetchLoader","faqToggleLoader","faqInputConfig","FaqColumns","recordViewFaqConfig","getFaq","getFaqById","createFaq","updateFaq","deleteFaq","clearFaq","question","answer","aboutUs","aboutUsById","hasAbout","aboutFetchLoader","aboutToggleLoader","aboutUsInputConfig","AboutUsColumns","recordViewAboutUsConfig","getAboutUs","getAboutUsById","createAboutUs","updateAboutUs","deleteAboutUs","header","paragraph","settingsInputConfig","updateDeliveryCash","deliveryPrice","getDeliveryCash","visible","authRefresh","resultCode","tokensChecker","component","OrdersPage","UsersPage","ProductsPage","CategoriesPage","ProvidersPage","FaqPage","AboutUsPage","SettingsPage","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b771b51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/category.3b77e2c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.c7046490.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.d4e8ec26.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.3124dc10.svg\";","module.exports = __webpack_public_path__ + \"static/media/package.ea3689e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/radish.6758276d.svg\";","module.exports = __webpack_public_path__ + \"static/media/information.fda9f597.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.4fe23475.svg\";","module.exports = __webpack_public_path__ + \"static/media/badStatus.a3728383.svg\";","module.exports = __webpack_public_path__ + \"static/media/goodStatus.59610b8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.03ad081f.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.dbbc4fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkPassword.daa811a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.26de1661.svg\";","module.exports = __webpack_public_path__ + \"static/media/openList.1e941aa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px.1a1f3581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rolling-0.6s-197px2.a0c4e4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/category_active.3b235469.svg\";","module.exports = __webpack_public_path__ + \"static/media/provider_active.0102fbce.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_active.2d8b0549.svg\";","module.exports = __webpack_public_path__ + \"static/media/user_active.dddff899.svg\";","module.exports = __webpack_public_path__ + \"static/media/quest_active.a5b33018.svg\";","module.exports = __webpack_public_path__ + \"static/media/about_active.b67ae761.svg\";","module.exports = __webpack_public_path__ + \"static/media/order_active.a45e3323.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_active.84168eb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.e4dc6ced.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.22df365b.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-logo.ac95c358.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.d0eff87b.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-button.02d6feca.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.40153392.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.8be502ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.addc9207.svg\";","\r\n\r\nexport const WRITE_RECORD_ID = 'WRITE_RECORD_ID'\r\nexport const WRITE_ELEMENTS_TO_DELETE = 'WRITE_ELEMENTS_TO_DELETE'\r\nexport const WRITE_TABLE_MESSAGE = 'WRITE_TABLE_MESSAGE'\r\nexport const SEARCHING='SEARCHING'\r\n\r\nexport const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\nexport const TOGGLE_FETCH_LOADER = 'TOGGLE_FETCH_LOADER'\r\nexport const TOGGLE_PAGE_LOADER = 'TOGGLE_PAGE_LOADER'\r\nexport const WRITE_AUTH_MESSAGE = 'WRITE_AUTH_MESSAGE'\r\nexport const WRITE_USERNAME = 'WRITE_USERNAME'\r\nexport const WRITE_USER_ID = 'WRITE_USER_ID'\r\n\r\n\r\n\r\nexport const WRITE_CATEGORIES = 'WRITE_CATEGORIES'\r\nexport const WRITE_CATEGORY_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const ADDED_CATEGORY = 'ADDED_CATEGORY'\r\nexport const DELETED_CATEGORY = 'DELETED_CATEGORY'\r\nexport const UPDATED_CATEGORY = 'UPDATED_CATEGORY'\r\nexport const CATEGORY_TOGGLE_FETCH_LOADER = 'CATEGORY_TOGGLE_FETCH_LOADER'\r\n\r\n\r\n\r\nexport const TOGGLE_AUTH ='TOGGLE_AUTH'\r\n\r\n\r\nexport const WRITE_PRODUCTS = 'WRITE_PRODUCTS'\r\nexport const WRITE_PRODUCT_BY_ID = 'WRITE_PRODUCT_BY_ID'\r\nexport const WRITE_RAITING_BY_ID = 'WRITE_RAITING_BY_ID'\r\nexport const ADDED_PRODUCT = 'ADDED_PRODUCT'\r\nexport const DELETED_PRODUCT = 'DELETED_PRODUCT'\r\nexport const UPDATED_PRODUCT = 'UPDATED_PRODUCT'\r\nexport const WRITE_MEASURE_UNITS='WRITE_MEASURE_UNITS'\r\nexport const PRODUCT_TOGGLE_FETCH_LOADER='PRODUCT_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_PROVIDER_BY_ID = 'WRITE_PROVIDER_BY_ID'\r\nexport const WRITE_PROVIDER = 'WRITE_PROVIDER'\r\nexport const WRITE_ACTIVE_PROVIDERS = 'WRITE_ACTIVE_PROVIDERS'\r\nexport const ADDED_PROVIDER = 'ADDED_PROVIDER'\r\nexport const DELETED_PROVIDER = 'DELETED_PROVIDER'\r\nexport const UPDATED_PROVIDER = 'UPDATED_PROVIDER'\r\nexport const PROVIDER_TOGGLE_FETCH_LOADER = 'PROVIDER_TOGGLE_FETCH_LOADER'\r\n\r\nexport const WRITE_USERS = 'WRITE_USERS'\r\nexport const WRITE_USER_BY_ID = 'WRITE_USER_BY_ID'\r\nexport const DELETED_USER = 'DELETED_USER'\r\nexport const USER_TOGGLE_FETCH_LOADER = 'USER_TOGGLE_FETCH_LOADER'\r\n\r\nexport const WRITE_ORDERS = 'WRITE_ORDERS'\r\nexport const WRITE_ORDER_BY_ID = 'WRITE_ORDER_BY_ID'\r\nexport const ADDED_ORDER = 'ADDED_ORDER'\r\nexport const DELETED_ORDER = 'DELETED_ORDER'\r\nexport const UPDATED_ORDER = 'UPDATED_ORDER'\r\nexport const ORDER_TOGGLE_FETCH_LOADER = 'ORDER_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const WRITE_DELIVERY_CASH = 'WRITE_DELIVERY_CASH'\r\n\r\n\r\nexport const WRITE_FAQ = 'WRITE_FAQ'\r\nexport const WRITE_FAQ_BY_ID = 'WRITE_FAQ_BY_ID'\r\nexport const ADDED_FAQ = 'ADDED_FAQ'\r\nexport const DELETED_FAQ = 'DELETED_FAQ'\r\nexport const UPDATED_FAQ = 'UPDATED_FAQ'\r\nexport const FAQ_TOGGLE_FETCH_LOADER = 'FAQ_TOGGLE_FETCH_LOADER'\r\n\r\n\r\nexport const  WRITE_ABOUT_US = 'WRITE_ABOUT_US'\r\nexport const  WRITE_ABOUT_US_BY_ID = 'WRITE_ABOUT_US_BY_ID'\r\nexport const  ADDED_ABOUT_US = 'ADDED_ABOUT_US'\r\nexport const  DELETED_ABOUT_US = 'DELETED_ABOUT_US'\r\nexport const  UPDATED_ABOUT_US = 'UPDATED_ABOUT_US'\r\nexport const  ABOUT_TOGGLE_FETCH_LOADER = 'ABOUT_TOGGLE_FETCH_LOADER'","\r\nimport * as axios from 'axios'\r\nconst tokenGetter = ()=>{ return { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`} }}\r\nconst instance = axios.create({\r\n    baseURL: 'https://organicinkg.net:8443/api/v1/',\r\n})\r\nexport const authReq = (data)=>instance.post('auth',data).then(response=>response.data)\r\nexport const authRefreshReq = (data)=>instance.post('refresh',data).then(response=>response.data)\r\n\r\n\r\nexport const categoryGetReq = (page)=>instance.get(`categories?page=${page}&size=20`).then(response=>response.data)\r\nexport const categoryGetByIdReq = (id)=>instance.get(`categories/${id}`).then(response=>response.data)\r\nexport const categoryPostReq = (data)=>instance.post('categories',data)\r\nexport const categoryDelReq = (id)=>instance.delete(`categories`,id)\r\nexport const categoryDelByIdReq = (id)=>instance.delete(`categories/${id}`)\r\nexport const categoryUpdReq = (data,id)=>instance.put(`categories/${id}`,data)\r\nexport const categoryGetSearchReq = (searchText,page)=>instance.get(`${searchText ? \r\n    `categories/search?name=${searchText}&page=${page}&size=20` \r\n    : `categories?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\n\r\n\r\nexport const productsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `products/like?prodName=${searchText}&page=${page}&size=20`\r\n    : `products?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const productGetByIdReq = (id)=>instance.get(`products/${id}`).then(response=>response.data)\r\nexport const productPostReq = (data)=>instance.post('products',data)\r\nexport const productDelReq = (id)=>instance.delete(`products`,id)\r\nexport const productDelByIdReq = (id)=>instance.delete(`products/${id}`)\r\nexport const productUpdReq = (data,id)=>instance.put(`products/${id}`,data)\r\n\r\nexport const productImgPostReq = (data)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n   return instance.post(`productImages`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\n}\r\nexport const productImgUpdReq = (data,id)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n    return instance.put(`productImages/${id}`,data, {headers: { 'content-type': 'multipart/form-data' }})\r\n}\r\n\r\nexport const measureUnitGetReq = ()=>instance.get(`measureUnit`).then(response=>response.data)\r\n\r\n\r\nexport const providersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `supplier/search?name=${searchText}&page=${page}&size=20`\r\n    : `supplier?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const providerGetByIdReq = (id)=>instance.get(`supplier/${id}`).then(response=>response.data)\r\nexport const providerPostReq = (data)=>instance.post('supplier',data)\r\nexport const providerImgPostReq = (data)=>{\r\n    for (let pair of data.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n    return instance.post('supplierFile',data)\r\n}\r\nexport const providerDelReq = (id)=>instance.delete(`supplier`,id)\r\nexport const providerDelByIdReq = (id)=>instance.delete(`supplier/${id}`)\r\nexport const providerUpdReq = (data,id)=>instance.put(`supplier/${id}`,data)\r\nexport const providerActiveGetReq = ()=>instance.get(`supplier/active`).then(response=>response.data)\r\nexport const providerPlaceOfProductionPostReq = (data)=>instance.post(`placeOfProduction`,data)\r\nexport const providerPlaceOfProductionGetByIdReq = (id)=>instance.post(`placeOfProduction/${id}`).then(response=>response.data)\r\n\r\nexport const usersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `client/search?firstName=${searchText}&page=${page}&size=20`\r\n    : `client/?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const userGetByIdReq = (id)=>instance.get(`client/${id}`).then(response=>response.data)\r\nexport const userDelReq = (id)=>instance.delete(`client`,id)\r\nexport const userDelByIdReq = (id)=>instance.delete(`client/${id}`)\r\nexport const userUpdReq = (data,id)=>instance.put(`client/${id}`,data)\r\n\r\n\r\n\r\n\r\nexport const ordersGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `orders/search?name=${searchText}&page=${page}&size=20`\r\n    : `orders?page=${page}&size=20`}`)\r\n    .then(response=>response.data)\r\nexport const orderGetByIdReq = (id)=>instance.get(`orders/${id}`).then(response=>response.data)\r\nexport const orderPostReq = (data)=>instance.post('orders',data)\r\nexport const orderDelReq = (id)=>instance.delete(`orders`,id)\r\nexport const orderDelByIdReq = (id)=>instance.delete(`orders/${id}`)\r\nexport const orderUpdReq = (data,id)=>instance.put(`orders/${id}`,data,tokenGetter())\r\nexport const orderUpdStatusReq = (data,id)=>instance.put(`orders/status/${id}?orderStatus=${data}`,data)\r\n\r\nexport const deliveryCashGetReq = ()=>instance.get(`orderSetting/1`).then(response=>response.data)\r\nexport const deliveryCashUpdReq = (data)=>instance.put(`orderSetting/1`,data)\r\n\r\n\r\n\r\n\r\nexport const faqGetReq = (searchText,page)=>instance.get(`${searchText ? `faq/search?question=${searchText}&page=${page}&size=20`\r\n    : `faq/?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const faqGetByIdReq = (id)=>instance.get(`faq/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const faqPostReq = (data)=>instance.post('faq',data,tokenGetter())\r\nexport const faqDelByIdReq = (id)=>instance.delete(`faq/${id}`,tokenGetter())\r\nexport const faqUpdReq = (data,id)=>instance.put(`faq/${id}`,data,tokenGetter())\r\n\r\nexport const aboutUsGetReq = (searchText,page)=>instance.get(`${searchText ?\r\n    `about/search?header=${searchText}&page=${page}&size=20`\r\n    : `about/?page=${page}&size=20`}`,tokenGetter())\r\n    .then(response=>response.data)\r\nexport const aboutUsGetByIdReq = (id)=>instance.get(`about/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const aboutUsPostReq = (data)=>instance.post('about',data,tokenGetter())\r\nexport const aboutUsDelByIdReq = (id)=>instance.delete(`about/${id}`,tokenGetter())\r\nexport const aboutUsUpdReq = (data,id)=>instance.put(`about/${id}`,data,tokenGetter())","export const getTemplate = async (dispatch,getFunc, actionType,toggleLoader,id=null,page)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(page? page : id);\r\n    console.log(response)\r\n    if(response?.result || response?.result===null) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n\r\n    }\r\n    dispatch(toggleLoader(false))\r\n\r\n}","\r\n\r\nexport const createOrChangeTemplate = async (\r\n    dispatch,\r\n    func,\r\n    data,\r\n    toggleLoader,\r\n    id=''\r\n    )=>{\r\n    dispatch(toggleLoader);\r\n    await func(data,id)\r\n    dispatch(toggleLoader)\r\n}","export const deleteTemplate = async (dispatch,deleteFunc,id,toggleLoader,actionType)=>{\r\n    dispatch(toggleLoader(true))\r\n    await deleteFunc(id).then(()=>dispatch({type:actionType,payload: id}))\r\n   .catch(resp=>console.log(resp))\r\n    dispatch(toggleLoader(false))\r\n}","export const checkHasData = data=>{\r\n    if(!data.length){\r\n        return false\r\n    }\r\n    return true\r\n}","export const getSearchedTemplate = async (dispatch,getFunc, actionType,toggleLoader,page,searchText)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(searchText,page);\r\n    console.log(response)\r\n    if(response?.result) {\r\n        dispatch({type: actionType, payload: response.result})\r\n    }else{\r\n        dispatch({type: actionType, payload: response})\r\n    }\r\n    dispatch(toggleLoader(false))\r\n}","export const updateItemInStore = (state,data,type)=>{\r\n    let idx = -1;\r\n    const newArrayData = [...state]\r\n    switch (type) {\r\n        case 'delete':\r\n            idx = state.findIndex(item=>item.id === parseInt(data))\r\n            return [...newArrayData.slice(0, idx), ...newArrayData.slice(idx + 1)]\r\n        case 'update':\r\n            idx = state.findIndex(item=>item.id === parseInt(data.id))\r\n            return [...newArrayData.slice(0, idx),data, ...newArrayData.slice(idx + 1)]\r\n        default:{\r\n            return\r\n        }\r\n    }\r\n}","import {\r\n    WRITE_ORDERS,\r\n    WRITE_ORDER_BY_ID,\r\n    SEARCHING,\r\n    ORDER_TOGGLE_FETCH_LOADER,\r\n    WRITE_DELIVERY_CASH, DELETED_ORDER\r\n} from './types'\r\nimport {\r\n    deliveryCashGetReq,\r\n    deliveryCashUpdReq,\r\n    orderDelByIdReq, orderGetByIdReq, orderPostReq, ordersGetReq,  orderUpdStatusReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    orders: [],\r\n    orderById: {},\r\n    deliveryCash : {},\r\n    hasOrders: true,\r\n    orderFetchLoader: false\r\n}\r\n\r\n\r\nexport const orderReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ORDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                orderFetchLoader: action.payload\r\n            }\r\n        case WRITE_ORDERS:\r\n            return{\r\n                ...state,\r\n                orders: [...state.orders,...action.payload],\r\n                hasOrders: checkHasData(action.payload)\r\n            }\r\n        case WRITE_DELIVERY_CASH:\r\n            return{\r\n                ...state,\r\n                deliveryCash: action.payload,\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                orders: [],\r\n                hasOrders: true\r\n            }\r\n        case WRITE_ORDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                orderById: action.payload\r\n            }\r\n        case DELETED_ORDER:\r\n            return{\r\n                ...state,\r\n                orders: updateItemInStore(state.orders,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearOrder = ()=>{\r\n    return{\r\n        type: WRITE_ORDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const orderToggleLoader = bool=>{\r\n    return{\r\n        type: ORDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getOrders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, ordersGetReq, WRITE_ORDERS, orderToggleLoader,page,searchText)\r\n}\r\nexport const getOrderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, orderGetByIdReq, WRITE_ORDER_BY_ID, orderToggleLoader,id)\r\n}\r\nexport const getDeliveryCash = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,deliveryCashGetReq,WRITE_DELIVERY_CASH,orderToggleLoader)\r\n}\r\n\r\nexport const updateDeliveryCash = data=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,deliveryCashUpdReq,{deliveryPrice: parseInt(data.deliveryPrice), deliveryType: \"COURIER\"},orderToggleLoader,1)\r\n}\r\n\r\nexport const createOrder = data=>{\r\n    return async dispatch => createOrChangeTemplate(dispatch, orderPostReq, data, orderToggleLoader)\r\n}\r\nexport const deleteOrder = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,orderDelByIdReq,id[i],orderToggleLoader,DELETED_ORDER)\r\n        }\r\n    }\r\n}\r\nexport const updateOrder = (id,data) =>{\r\n    return async dispatch =>{\r\n        dispatch(orderToggleLoader(true))\r\n        await orderUpdStatusReq( data.orderStatus,id)\r\n        dispatch(orderToggleLoader(false))\r\n    }\r\n}\r\n\r\n","export const logout = ()=>{\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('tokenExpirationTime')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('refreshExpirationTime')\r\n    localStorage.removeItem('id')\r\n}","import {\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME,\r\n    WRITE_USER_ID\r\n} from './types'\r\nimport {authRefreshReq, authReq, userGetByIdReq} from \"../../utils/api/Request\";\r\nimport {logout} from \"../../components/Auth/logout\";\r\n\r\n\r\nconst initialState={\r\n    authFetchLoader: false,\r\n    isAuthorized: true,\r\n    isPageLoader: false,\r\n    authErrorMessage: '',\r\n    username: '',\r\n    userId: undefined\r\n}\r\n\r\n\r\nexport const mainReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                authFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n        }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload,\r\n            }\r\n        case WRITE_USER_ID:\r\n        return {\r\n            ...state,\r\n            userId: action.payload\r\n        }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeUserId = value=>{\r\n    return{\r\n        type: 'WRITE_USER_ID',\r\n        payload: value\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const toggleLoader = bool=>{\r\n    return{\r\n        type: 'TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const authRefresh = data=> {\r\n    return async dispatch => {\r\n        dispatch(toggleLoader(true))\r\n        await authRefreshReq(data).then(async response => {\r\n            if(response.resultCode==='NOT_FOUND'){\r\n                logout()\r\n            }else {\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const getUserName=()=>{\r\n    return async dispatch=>{\r\n        dispatch(toggleLoader(true))\r\n        await userGetByIdReq(localStorage.getItem('id')).then(response=>{\r\n            dispatch(writeUsername(response.result?.firstName ? response.result?.firstName : response.result?.phoneNumber))\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(toggleLoader(true))\r\n        await authReq(data).then(async response=>{\r\n            console.log(response)\r\n            if(response.result.statusCodeValue===400){\r\n                dispatch(writeAuthMessage('Неверно введены данные.'))\r\n            }else {\r\n                dispatch(togglePageLoader(true))\r\n                dispatch(toggleAuth(true))\r\n                dispatch(tokenToLocalStorage(response))\r\n                dispatch(getUserName())\r\n            }\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\n\r\nconst tokenToLocalStorage = (response)=>{\r\n    localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n    localStorage.setItem(\"tokenExpirationTime\", JSON.stringify(Date.parse(response.result.body.tokenExpirationTime)))\r\n    localStorage.setItem(\"refreshExpirationTime\", JSON.stringify(Date.parse(response.result.body.refreshExpirationTime)))\r\n    localStorage.setItem(\"id\", response.result.body.id)\r\n    localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n}\r\n\r\n\r\n","const getExpirationDate = (token,exp)=> {\r\n    if (!token || !exp) {\r\n        return undefined\r\n    }\r\n    return exp\r\n};\r\n\r\nconst isExpired = (exp) => {\r\n    if (!exp) {\r\n        return false;\r\n    }\r\n    if (Date.now() < exp){\r\n        return exp - Date.now()\r\n    }else{\r\n        return false\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const  expChecker = ()=>isExpired(getExpirationDate(localStorage.getItem(\"accessToken\"),localStorage.getItem('tokenExpirationTime')))","import React from 'react'\r\nimport './Preloader.css'\r\nconst Preloader = (props)=>{\r\n    return(\r\n       <div className={'preloader'}>\r\n                <span className=\"circle circle-1\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-2\" style={{width: props.width,height: props.height}}></span>\r\n                <span className=\"circle circle-3\" style={{width: props.width,height: props.height}}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect} from 'react'\r\nimport './Header.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {logout} from \"../Auth/logout\";\r\nimport {getUserName, toggleAuth, writeUserId} from \"../../redux/reducers/mainReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoSVG} from '../../assets/icons'\r\nimport {expChecker} from \"../Auth/expChecker\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst Header = (props)=>{\r\n\r\nuseEffect(()=>{\r\n    if(expChecker()) {\r\n        props.getUserName()\r\n        props.writeUserId(parseInt(localStorage.getItem('id')))\r\n    }\r\n},[])\r\n    return(\r\n        <div className='header'>\r\n        <div className='container'>\r\n\r\n        <div className=\"header__container\">\r\n            <Link to={\"/providers\"}><img src={logoSVG} alt=\"\"/></Link>\r\n            <div className=\"header-profile\">\r\n                {props.username ?\r\n                <span className='header-profile__name'>{props.username}</span>\r\n                :\r\n                    <Preloader width={'6px'} height={'6px'}/>}\r\n\r\n                <Link to={\"/profile\"}><span className='header-profile__password'>Профиль</span></Link>\r\n                <span className='header-profile__divider'>/</span>\r\n                <span className='header-profile__exit' onClick={()=> {\r\n                    logout()\r\n                    props.toggleAuth(false)\r\n                }}>Выйти</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserName,writeUserId})(Header)","import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,svg,\r\n                         activeSvg,\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n           return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes} onClick={()=>{\r\n            setClick(true)\r\n            history.push(to)\r\n        }}><img src={clicked ? activeSvg : svg} alt=\"\"/><span>{name}</span></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","import {\r\n    categorySVG,\r\n    orderSVG,\r\n    productSVG,\r\n    providerSVG,\r\n    questionSVG,\r\n    userSVG,\r\n    orderActiveSVG,\r\n    categoryActiveSVG,\r\n    providerActiveSVG,\r\n    productActiveSVG,\r\n    userActiveSVG,\r\n    questionActiveSVG,\r\n    aboutActiveSVG,\r\n    aboutSVG, settingsSVG, settingsActiveSVG\r\n} from \"../../assets/icons\";\r\n\r\nexport const sideBarConfig = [\r\n    {\r\n        to: '/providers',\r\n        name: 'Поставщики',\r\n        svg: providerSVG,\r\n        activeSvg: providerActiveSVG\r\n    },\r\n    {\r\n        to: '/orders',\r\n        name: 'Заказы',\r\n        svg: orderSVG,\r\n        activeSvg: orderActiveSVG\r\n    },\r\n    {\r\n        to: '/products',\r\n        name: 'Товары',\r\n        svg: productSVG,\r\n        activeSvg: productActiveSVG\r\n    },\r\n    {\r\n        to: '/users',\r\n        name: 'Пользователи',\r\n        svg: userSVG,\r\n        activeSvg: userActiveSVG\r\n    },\r\n    {\r\n        to: '/categories',\r\n        name: 'Категории',\r\n        svg: categorySVG,\r\n        activeSvg: categoryActiveSVG\r\n    },\r\n    {\r\n        to: '/faq',\r\n        name: 'Вопросы',\r\n        svg: questionSVG,\r\n        activeSvg: questionActiveSVG\r\n    },\r\n    {\r\n        to: '/aboutus',\r\n        name: 'О нас',\r\n        svg: aboutSVG,\r\n        activeSvg: aboutActiveSVG\r\n    },\r\n    {\r\n        to: '/settings',\r\n        name: 'Настройки',\r\n        svg: settingsSVG,\r\n        activeSvg: settingsActiveSVG\r\n    }\r\n]","import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst SidebarList  = (props)=>{\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n                svg={item.svg}\r\n                name={item.name}\r\n                activeSvg={item.activeSvg}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","import React,{useEffect,useState} from 'react'\r\nimport {searchSVG } from '../../assets/icons'\r\nimport './Search-panel.css'\r\n\r\nconst SearchPanel = (props)=>{\r\n    return(\r\n        <div className='searchPanel'>\r\n            <span><img src={searchSVG} alt=\"\"/><input type=\"text\" placeholder={'Поиск'} onChange={(event) => props.handleSearchText(event.target.value)}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel","import React from 'react'\r\nimport './Btns.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst AddBtn = ({urlToCreate})=>{\r\n    return(\r\n        <Link to={urlToCreate} className='addBtn'>Добавить</Link>\r\n    )\r\n}\r\nexport default AddBtn","import { TOGGLE_MODAL} from './types'\r\n\r\nconst initialState={\r\n    isOpenModal: {\r\n        isOpen:false,\r\n        title:'',\r\n        confirmFunc: undefined,\r\n        urlToTable : ''\r\n    }\r\n}\r\n\r\n\r\nexport const modalReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_MODAL:\r\n            return{\r\n                ...state,\r\n                isOpenModal: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const toggleModal = obj=>{\r\n    return{\r\n        type:  TOGGLE_MODAL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\n","import { WRITE_RECORD_ID,WRITE_ELEMENTS_TO_DELETE,WRITE_TABLE_MESSAGE} from './types'\r\n\r\nconst initialState={\r\n   recordViewId:'',\r\n    elementsToDelete: [],\r\n    tableMessage: ''\r\n}\r\n\r\n\r\nexport const tableReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case WRITE_RECORD_ID:\r\n            return{\r\n                ...state,\r\n                recordViewId: action.payload\r\n            }\r\n        case WRITE_ELEMENTS_TO_DELETE:\r\n            return{\r\n                ...state,\r\n                elementsToDelete: action.payload\r\n            }\r\n        case WRITE_TABLE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                tableMessage: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeTableMessage = str=>{\r\n    return{\r\n        type: WRITE_TABLE_MESSAGE,\r\n        payload: str\r\n    }\r\n}\r\nexport const writeElementsToDelete = values=>{\r\n    return{\r\n        type:  WRITE_ELEMENTS_TO_DELETE,\r\n        payload: values\r\n    }\r\n}\r\nexport const writeRecordId = value=>{\r\n    return{\r\n        type:  WRITE_RECORD_ID,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Btns.css'\r\nimport {deleteSVG} from \"../../assets/icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\n\r\nconst DeleteBtn = ({toggleModal,deleteFunc,elementsToDelete,writeTableMessage})=>{\r\n\r\n    const confirmHandler = ()=>{\r\n          deleteFunc(elementsToDelete)\r\n    }\r\n\r\n    return(\r\n        <img className={'deleteBtn'} src={deleteSVG} alt=\"\"  onClick={()=>{\r\n            if(elementsToDelete.length===0){\r\n             return writeTableMessage('Вы не выбрали ни одной записи!')\r\n            }\r\n            return toggleModal({isOpen:true,title:'Вы действительно хотите удалить запись(-и)?',confirmFunc: confirmHandler})\r\n        }}/>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal,writeTableMessage})(DeleteBtn)","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\nconst TableItemColumn = ({item,column})=>{\r\n\r\n    return(\r\n        <div className='tableItemColumn'>\r\n            <span className='tableItemColumn__title'>\r\n                {item.title}\r\n            </span>\r\n            <span className='tableItemColumn__value'>\r\n                {column?.render ? column.render(item.value): item.value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItemColumn","export const toBeautifyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'CASH':\r\n            return 'Наличные'\r\n        case 'ELSOM':\r\n            return 'Эльсом'\r\n        case 'COURIER':\r\n            return 'Курьер'\r\n        case 'STORAGE':\r\n            return 'Самовывоз'\r\n        case 'AWAITING_DELIVERY':\r\n            return 'Ожидает доставку'\r\n        case 'PAID_AWAITNG_DELIVERY':\r\n            return 'Оплачен, ожидает доставку'\r\n        case 'DELIVERED_AND_PAID':\r\n            return 'Доставлен и оплачен'\r\n        case 'DELIVERED':\r\n            return 'Доставлен'\r\n        case 'CLOSED':\r\n            return 'Закрыт'\r\n        case null:\r\n            return 'Не указано'\r\n        case 'null':\r\n            return 'Не указано'\r\n        case '':\r\n            return 'Не указано'\r\n        case NaN:\r\n            return 'Не указано'\r\n        case undefined:\r\n            return 'Не указано'\r\n        case 'SOM':\r\n            return 'сом'\r\n        case 'USD':\r\n            return '$'\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport TableItemColumn from \"./TableItemColumn\";\r\nimport {connect} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst TableItem= ({columns,data,handlerClick,elementsToDelete,writeElementsToDelete,deleting,writeTableMessage})=>{\r\n    const [check,setCheck] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(deleting) {\r\n            let buff = [...elementsToDelete]\r\n\r\n            if (check) {\r\n                buff.push(data.id)\r\n                writeElementsToDelete(buff)\r\n            } else {\r\n                const index = buff.indexOf(data.id)\r\n                if (index > -1) {\r\n                    buff.splice(index, 1);\r\n                    writeElementsToDelete(buff)\r\n                }\r\n            }\r\n            return () => {\r\n                writeElementsToDelete([])\r\n            }\r\n        }\r\n    },[check])\r\n    const tableItemColumn = ()=> {\r\n        let result = []\r\n\r\n        const valuesToArray = Object.values(data).slice(1,data.length)\r\n        const valsKey = Object.keys(data).slice(1, data.length)\r\n        for (let i = 0; i < columns.length; i++) {\r\n            for (let j = 0; j < valsKey.length; j++) {\r\n                if (valsKey[j] === columns[i].dataIndex) {\r\n                    const value = ()=> {\r\n                        if(columns[i]?.object){\r\n                            return valuesToArray[j]?.[`${columns[i].object}`]\r\n                        }\r\n                        return valuesToArray[j]\r\n                    }\r\n                    result.push((\r\n                            <TableItemColumn key={`${j}-${data.id}`} column={columns[i]} item={{title: columns[i].title, value: toBeautifyFieldsValue(value())}}/>\r\n                    ))\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    let style={}\r\n    useEffect(()=>{\r\n        if(check){\r\n            style= {\r\n                boxShadow: '0px 1px 8px rgba(0,155,0,.4)'\r\n            }\r\n        }\r\n\r\n    },[])\r\n    return(\r\n        <div className={'tableItem-container'}\r\n        >\r\n            {deleting &&\r\n            <label className=\"tableItem-checkbox-label\">\r\n                <input className=\"tableItem-checkbox__default\" type=\"checkbox\" onClick={() => {\r\n                    writeTableMessage('')\r\n                    setCheck(!check)\r\n                }}/>\r\n                <span className=\"tableItem-checkbox__new\"></span>\r\n            </label>\r\n            }\r\n        <div  className='tableItem' style={style}  onClick={()=>handlerClick(data.id)}>\r\n\r\n           {tableItemColumn()}\r\n           \r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(TableItem)","import React from 'react'\r\nimport {errorSVG} from \"../../assets/icons\";\r\n\r\n\r\n\r\nconst ErrorMsg = ({text})=>{\r\n    return(\r\n\r\n        <span className={'errorMessage'}><img src={errorSVG} alt=\"\"/>{text}</span>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useEffect, useState} from 'react'\r\nimport TableItem from \"./Table-item\";\r\nimport './Table.css'\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\n\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\n\r\n\r\nconst Table = ({isLoading,\r\n                   getDataFunc,\r\n                   data=[],\r\n                   columns=[],\r\n                   handlerClick,\r\n                   deleting,\r\n                   tableMessage,\r\n                   writeTableMessage,\r\n                   deleteFunc,\r\n                   adding,\r\n                   urlToCreate,\r\n                   getDataFuncSearch,\r\n                   hasData\r\n               })=>{\r\n    const [searchText,setSearchText] = useState('')\r\n    const [page,setPage] = useState(1)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            writeTableMessage('')\r\n        }\r\n    },[])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n                    getDataFunc(1,searchText)\r\n                    setPage(2)\r\n                    dispatch({type: 'SEARCHING'})\r\n            }\r\n            , 1000);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [searchText]);\r\n\r\n    const elements = data.map(item=> <TableItem key={`tableItem-${item.id}`} columns={columns} data={item} handlerClick = {handlerClick} deleting={deleting}/>)\r\n\r\n    return(\r\n\r\n        <div className='table-container'>\r\n            <div className='page-functional'>\r\n                <SearchPanel handleSearchText={setSearchText} />\r\n                <div className={'page-functional__btns'}>\r\n                {adding &&\r\n                <AddBtn\r\n                    urlToCreate={urlToCreate}\r\n                />\r\n                }\r\n                {deleting &&\r\n                <DeleteBtn\r\n                    deleteFunc = {deleteFunc}\r\n                />}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"tableItem-container__wrapper\">\r\n                {(tableMessage && isLoading) && <ErrorMsg text={tableMessage}/>}\r\n                <InfiniteScroll\r\n                    dataLength={data.length} //This is important field to render the next data\r\n                    next={()=>{\r\n\r\n                        getDataFunc(page,searchText)\r\n                        setPage(page+1)\r\n                    }}\r\n                    hasMore={hasData}\r\n                    loader={<Preloader/>}\r\n                    endMessage={\r\n                        <p style={{ textAlign: 'center' }}>\r\n                            <b>Загружены все записи.</b>\r\n                        </p>\r\n                    }\r\n                    initialScrollY={0}\r\n                >\r\n\r\n                    {elements}\r\n                </InfiniteScroll>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        tableMessage : state.table.tableMessage\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeTableMessage})(Table)\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport './RecordView.css'\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\nconst RecordViewer=({titles,values={},urlToUpd,urlToTable,match,editing,recordViewValuesConfig})=>{\r\n    const valuesToArray = recordViewValuesConfig ? Object.values(recordViewValuesConfig) :Object.values(values).slice(1,values.length)\r\n    const valsKey =recordViewValuesConfig ? Object.keys(recordViewValuesConfig) : Object.keys(values).slice(1,values.length)\r\n    const elements = ()=>{\r\n        let results=[];\r\n        for(let i=0;i<titles.length;i++){\r\n            for(let j=0;j<valsKey.length;j++){\r\n                if( valsKey[j]===titles[i].dataIndex){\r\n                    results.push((\r\n                        <div key={j} className='recordView__item'>\r\n                            <span className='recordView__item-title'>{titles[i].title}</span>\r\n\r\n                            {titles[i]?.type==='image' ?\r\n                                <div className={'recordView__item-imgWrapper'}>\r\n\r\n\r\n                                    { ////////////////////////////////////////////////////////////////////\r\n                                        Array.isArray(valueChooser(titles[i], valuesToArray[j])) ?      // проверка на массив картинок\r\n                                        valueChooser(titles[i], valuesToArray[j]).map(item => {\r\n                                            return (\r\n                                                <div key={item} className={'recordView__item-imgContainer'}><img\r\n                                                    src={item} alt=\"\"/></div>\r\n                                            )\r\n                                        })                                                              // вывод только одной картинки\r\n                                        :  <div className={'recordView__item-imgContainer'}>\r\n                                            <img src={ valuesToArray[j]} alt=\"\"/></div>\r\n                                        //////////////////////////////////////////////////////////////////\r\n                                    }\r\n                                    </div>\r\n                           : <span className='recordView__item-value'> {toBeautifyFieldsValue(valueChooser(titles[i],valuesToArray[j]))}</span>}\r\n                        </div>\r\n                    ))\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\nreturn results\r\n    }\r\n    return(\r\n        <div className='recordView__container'>\r\n            <div className='recordView__container-title'><Link to={urlToTable}><img src={backSVG} alt=\"\"/></Link><h2>{valuesToArray[0]}</h2></div>\r\n            {elements()}\r\n            {editing &&\r\n            <Link to={`${urlToUpd}/${match.params.id}`} className={'recordView__btn'}>Редактировать запись</Link>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withRouter(RecordViewer);\r\n\r\nconst valueChooser = (title,value)=> {\r\n    if(title?.object){\r\n        return value?.[`${title.object}`]\r\n    }else if(title?.array){\r\n        if(title.array){\r\n            return fieldSearcherInObj(value,title.array)\r\n        }\r\n    }\r\n    return value\r\n}\r\n\r\nfunction fieldSearcherInObj(obj,searchedField) {\r\n    const result = [];\r\n    for (let prop in obj) {\r\n        const value = obj[prop];\r\n        if(searchedField === prop){\r\n            return value\r\n        }\r\n        if (typeof value === 'object') {\r\n            result.push(fieldSearcherInObj(value,searchedField));\r\n        }\r\n    }\r\n    return result;\r\n}","import React, {useEffect} from 'react'\r\nimport RecordViewer from \"./RecordViewer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst RecordViewerContainer = (\r\n    {\r\n        titles,\r\n        urlToUpd,\r\n        urlToTable,\r\n        match,\r\n        valueById,\r\n        clearFunc,\r\n        getByIdFunc,\r\n\r\n        recordViewValuesConfig,\r\n\r\n        isLoading,\r\n        editing\r\n    }\r\n)=>{\r\n    useEffect(()=>{\r\n        getByIdFunc(match.params.id)\r\n        return ()=>clearFunc()\r\n    },[])\r\n    return(\r\n        valueById && !isLoading ?\r\n        <RecordViewer\r\n            titles={titles}\r\n            values={valueById}\r\n            urlToUpd={urlToUpd}\r\n            urlToTable={urlToTable}\r\n            editing={editing}\r\n            recordViewValuesConfig={recordViewValuesConfig}\r\n        /> : <Preloader />\r\n    )\r\n}\r\n\r\nexport default withRouter(RecordViewerContainer)","import React from 'react'\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst EditBtn = ({toggleModal,confirmFunc,urlToTable='main',disabled=false})=>{\r\n    return(\r\n        <div className='createOrEditBtn-submit'\r\n                onClick={async ()=>{\r\n                    if(!disabled){\r\n                        return toggleModal(\r\n                            {   isOpen:true,\r\n                                title:'Вы действительно хотите сохранить изменения?',\r\n                                confirmFunc: confirmFunc,\r\n                                urlToTable: urlToTable\r\n                            },\r\n                        )\r\n                    }\r\n                   return confirmFunc()\r\n                }}>\r\n            Сохранить</div>\r\n                )\r\n}\r\n\r\nexport default connect(null,{toggleModal})(EditBtn)","import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}>\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null,{toggleModal})(CancelBtn)","import React, {useState} from 'react'\r\nimport {openList} from \"../../../assets/icons\";\r\nimport SelectorList from \"./SelectorList\";\r\nimport classNames from 'classnames'\r\n\r\n\r\n\r\nconst SelectorItem = ({data,isOpenList,setOpenList,handleClick,thirdStyle=false})=>{\r\n    const [checked, setChecked] = useState(true)\r\n    const styles = classNames({\r\n        'selectorInput__item' : !isOpenList && !thirdStyle,\r\n        \"selectorInput__item-2\":  isOpenList,\r\n        'selectorInput__item-3' : thirdStyle\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <li  className={styles}  onClick={()=> {\r\n\r\n                setChecked(!checked)\r\n                data?.children && setOpenList(!isOpenList)\r\n                if(checked) {\r\n                 return handleClick(data.name)\r\n                }else{\r\n                    return handleClick('')\r\n                }\r\n            }}>\r\n              {data.name}\r\n                   {data?.children && <img src={openList} alt=\"\"/>}\r\n            </li>\r\n            {isOpenList && data.children.map(item=><SelectorList thirdStyle={true} data={item} handleClick={handleClick}/>)}\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorItem","import React, {useState} from 'react'\r\nimport SelectorItem from \"./SelectorItem\";\r\n\r\n\r\n\r\n\r\nconst SelectorList = ({data,handleClick,thirdStyle})=>{\r\n    const [isOpenList,setOpenList] = useState(false);\r\n    return(\r\n        <>\r\n            {data?.children ?\r\n                <ul key={data.id} className={isOpenList ? 'selectorInput__list-clicked' :'selectorInput__list'}>\r\n                <SelectorItem\r\n                    isOpenList={isOpenList}\r\n                    setOpenList={setOpenList}\r\n                    handleClick={handleClick}\r\n                    data={data}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n\r\n\r\n            </ul>\r\n            :\r\n                <SelectorItem\r\n                    data={data}\r\n                    handleClick={handleClick}\r\n                    thirdStyle={thirdStyle}\r\n                />\r\n            }\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectorList","import React, {useEffect, useRef, useState} from 'react'\r\nimport SelectorList from \"./SelectorList\";\r\n\r\nconst Selector = ({handleClick,setVisibleSelector,data})=>{\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e)=>{\r\n        if(!selectorRef.current.contains(e.target)){\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        document.addEventListener('click',closeSelector,false)\r\n        return ()=>{\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    },[])\r\n\r\n    const elements = data.map(item=>{\r\n        return(\r\n            <SelectorList handleClick={handleClick} key={item.id} data={item} />\r\n        )\r\n    })\r\n    return(\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                {elements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selector","import React, {useEffect, useRef, useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG, plusSVG} from \"../../../assets/icons\";\r\nimport Selector from \"./Selector\";\r\nimport {toUglyfyFieldsValue} from \"../../../utils/toUglyfyFieldsValue\";\r\n\r\n\r\nconst SelectorInput = ({name,value,setFieldValue,placeholder,data})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selected, setSelected] = useState('')\r\n    const [inputText,setInputText] = useState(value);\r\n    const onChange = (value)=>{\r\n        console.log(value)\r\n        setInputText(value)\r\n    }\r\n    useEffect(()=>{\r\n        setFieldValue(name,inputText)\r\n    },[inputText])\r\n\r\n\r\n    useEffect(()=>{\r\n  setInputText(inputText + ` ${toUglyfyFieldsValue(selected)} `)\r\n\r\n\r\n    },[selected])\r\n\r\n\r\n    return(\r\n\r\n        <div className={'selectorInput'}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   onChange={e=>onChange(e.target.value)}\r\n                    value={inputText}\r\n                   />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"\r\n                 onClick={(event)=>setVisibleSelector(!visibleSelector)}/>\r\n            {visibleSelector && <Selector data={data} setVisibleSelector={setVisibleSelector} handleClick = {setSelected}/>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default  SelectorInput\r\n\r\n\r\n","export const toUglyfyFieldsValue = (value)=>{\r\n    switch (value) {\r\n\r\n        case 'Наличные':\r\n            return 'CASH'\r\n        case 'Эльсом':\r\n            return 'ELSOM'\r\n        case 'Курьер':\r\n            return 'COURIER'\r\n        case 'Самовывоз':\r\n            return 'STORAGE'\r\n        case 'В доставке':\r\n            return 'AWAITING_DELIVERY'\r\n        case 'Доставлен и оплачен':\r\n            return 'DELIVERED_AND_PAID'\r\n        case 'Закрыт':\r\n            return 'CLOSED'\r\n\r\n        default:\r\n            return value\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport {trashSVG, uploadBtnSVG} from '../../assets/icons'\r\nimport {useDropzone} from \"react-dropzone\";\r\n\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value=[],imageCount=1,fileTypes=\"image/jpeg ,image/gif, image/png, image/svg+xml, application/pdf\"})=>{\r\n    const [files,setFiles] = useState([])\r\n    const [error,setError] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setFieldValue(name,files)\r\n    },[files])\r\n    const randomNameGenerator = () => {\r\n        let res = '';\r\n        for(let i = 0; i < 20; i++){\r\n            const random = Math.floor(Math.random() * 27);\r\n            res += String.fromCharCode(97 + random);\r\n        };\r\n        return res;\r\n    };\r\n    const createFile= async (urls)=>{\r\n        let result =[]\r\n       urls.map( async url => {\r\n            let response = await fetch(url);\r\n            let data = await response.blob();\r\n            let metadata = {type: data.type};\r\n            let file = new File([data], randomNameGenerator(),metadata);\r\n            await getBase64(file,(string)=>  result.push({file: file, data_url: string}))\r\n        })\r\n        return setFiles(result)\r\n    }\r\n\r\n    const loadFiles = async ()=>{\r\n        if(typeof value === 'string' && value!==''){\r\n            await createFile([value])\r\n        }else if(Array.isArray(value)){\r\n            await createFile([value])\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        loadFiles()\r\n    },[])\r\n    function getBase64(file, callback) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => callback(reader.result));\r\n      reader.readAsDataURL(file);\r\n    }\r\n\r\n\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        accept: fileTypes,\r\n        onDrop: acceptedFiles => {\r\n                if(files.length>=imageCount) {\r\n                    setError(`Максимальное количество файлов: ${imageCount}`)\r\n                    return\r\n                }\r\n            for(let type in fileTypes){\r\n             if(type.split('application/') || type.split('image/')===acceptedFiles.type) {\r\n                 acceptedFiles.map(file => {\r\n                     getBase64(file,(string)=>{\r\n                         setFiles([...files,{file: file, data_url : string}])})})}\r\n                else{\r\n                    setError(`Загрузка файлов возможно только с типом: ${fileTypes}`)\r\n                }\r\n            }\r\n        }\r\n    });\r\n    const deleteItem = index =>setFiles([...files.slice(0, index), ...files.slice(index + 1)])\r\n    const thumbs = files.map((file,index) =>{\r\n        return (\r\n        <div  key={index} className={'upload__image-container'}>\r\n            <div className=\"upload__image-item\">\r\n                <div className='upload__image-delete'><img src={trashSVG} onClick={()=>deleteItem(index)} alt=\"\"/></div>\r\n                {typeof file !== 'string' ?\r\n                    file?.file?.type.match('image') || file?.Url ?\r\n                        <img src={file?.data_url ? file?.data_url : file?.imgUrl} alt=\"\"/>\r\n                        : file.file.type.match('application/pdf')\r\n                        ? <span\r\n                            className={'upload__file-itemText'}>{file.file.type.toUpperCase().split('APPLICATION/')}</span>\r\n                        : <span></span>\r\n                    : <img src={file} alt=\"\"/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )})\r\n\r\n    return (\r\n        <div className=\"upload__image-wrapper\" onClick={()=>setError('')}>\r\n            <div {...getRootProps({className : 'upload__image-uploadBtn'})}>\r\n                <input {...getInputProps()} />\r\n                <img src={uploadBtnSVG} alt=\"\"/>\r\n                Нажмите или перетащите файл, чтобы загрузить\r\n            </div>\r\n            <div className={'upload__image-container'}>\r\n                {thumbs}\r\n            </div>\r\n            {error && <span className='formErrorMessage'>{error}</span>}\r\n        </div>\r\n    );\r\n    }\r\n export default ImgUploader\r\n","import React from 'react'\r\nimport InputMask from 'react-input-mask';\r\n\r\n\r\n\r\nconst PhoneInput = ({name,setFieldValue,placeholder,value})=>{\r\n    const onChange = (value)=>setFieldValue(name,value.replace(/[\\ \\(\\)\\-]/g, \"\"))\r\n    return(\r\n        <InputMask\r\n            mask=\"\\+\\9\\9\\6\\ (999) 99-99-99\"\r\n            placeholder={'+996 (___) __-__-__'}\r\n            name={name}\r\n            onChange={e=>onChange(e.target.value)}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default  PhoneInput","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n\r\nconst CheckInput = ({name,value,setFieldValue})=>{\r\n    const [checked,setCheck] = useState(value)\r\n    useEffect(()=>{\r\n        setFieldValue(name,checked)\r\n    },[checked])\r\n    return(\r\n        <label className=\"tableItem-checkbox-label\"\r\n               style={{marginTop: '15px'}}\r\n        >\r\n            <input className=\"tableItem-checkbox__default\" name={name}\r\n                   type=\"checkbox\"\r\n                   onChange={()=>setCheck(!checked)}\r\n               defaultChecked={value}\r\n               />\r\n            <span className=\"tableItem-checkbox__new\"></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default CheckInput","import React, {useEffect} from 'react'\r\nimport {toBeautifyFieldsValue} from \"../../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst SelectItem = props=>{\r\n\r\n    return (\r\n        typeof props.data === 'object' ?\r\n        <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data.id,props.data.name ?\r\n                                                props.data.name :\r\n                                                props.data.fullName)\r\n        }}>\r\n            {toBeautifyFieldsValue(props.data.name ? props.data.name : props.data.fullName ) }\r\n        </li>\r\n            :\r\n            <li  className={'selectorInput__item'}  onClick={()=> {\r\n                props.handleClick(props.data,props.data)\r\n            }}>\r\n                {toBeautifyFieldsValue(props.data)}\r\n            </li>\r\n\r\n    )\r\n}\r\nexport default SelectItem","import React, {useEffect, useRef} from 'react'\r\nimport SelectItem from \"./SelectItem\";\r\n\r\nconst SelectBlock = ({handleClick, setVisibleSelector, data})=> {\r\n\r\n    const selectorRef = useRef(null)\r\n    const closeSelector = (e) => {\r\n        if (!selectorRef.current.contains(e.target)) {\r\n            setVisibleSelector(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('click', closeSelector, false)\r\n        return () => {\r\n            document.removeEventListener('click', closeSelector)\r\n        }\r\n    }, [])\r\n\r\n    const elements = data.map((item,index) => <SelectItem key={index} data={item} handleClick={handleClick} />)\r\n    return (\r\n\r\n        <div className={'selectorInput__selector'} ref={selectorRef}>\r\n            <div className={'selectorInput__selector-container'}>\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectBlock","import React, {useEffect, useRef, useState} from 'react'\r\nimport {openList, plusSVG} from \"../../../assets/icons\";\r\nimport SelectBlock from \"./SelectBlock\";\r\n\r\n\r\n\r\nconst SelectField = ({data=[],name,value,setFieldValue,placeholder,})=>{\r\n    const [visibleSelector, setVisibleSelector]  = useState(false);\r\n    const [selectedValue,setSelectedValue] = useState('')\r\n    const selectedItem = (id,text)=>{\r\n        setFieldValue(name,id)\r\n        setSelectedValue(text)\r\n    }\r\n    useEffect(()=>{\r\n        data.map(item=>{\r\n            if(typeof item==='object'){\r\n                if(item.id===value){\r\n                    setSelectedValue(item?.name ? item.name : item.fullName)\r\n                }\r\n            }else{\r\n                if(item===value){\r\n                    setSelectedValue(item)\r\n                }\r\n            }\r\n        })\r\n    },[data])\r\n    //const onChange = (text)=>setFieldValue(name,text)\r\n    return(\r\n        <div className={'selectorInput'} onClick={(event)=>setVisibleSelector(!visibleSelector)}>\r\n\r\n            <input type={'text'}\r\n                   placeholder={placeholder}\r\n                   name={name}\r\n                   value={selectedValue}\r\n            />\r\n            <img className={'selectorInput__visible'} src={plusSVG} alt=\"\"/>\r\n            {(visibleSelector && data.length!==0) && <SelectBlock data={data}  setVisibleSelector={setVisibleSelector} handleClick = {selectedItem}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectField\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Map, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n\r\n    const [place, setPlace] = React.useState({\r\n        city: props.value.city || \"\",\r\n        country: props.value.country || \"\",\r\n        region: props.value.region || \"\",\r\n        street: props.value.street || \"\",\r\n    });\r\n    const [address, setAddress] = React.useState(`${place.country} ${place.city} ${place.region} ${place.street}`);\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,place)\r\n    },[place])\r\n    const createPlacemark = (coords) => {\r\n\r\n        return new ymaps.current.Placemark(\r\n            coords,\r\n            {\r\n                iconCaption: \"Секунду...\"\r\n            },\r\n            {\r\n                preset: \"islands#violetDotIconWithCaption\",\r\n                draggable: false\r\n            }\r\n        );\r\n    };\r\n\r\n    const getAddress = (coords) => {\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            setPlace({\r\n                city: firstGeoObject.getLocalities()[0] || '',\r\n                country:firstGeoObject.getCountry() || '',\r\n                region: firstGeoObject.getAdministrativeAreas()[0] || '',\r\n                street: firstGeoObject.getThoroughfare() || ''\r\n            })\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <input type=\"text\" name={props.name} value={address}/>\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n                />\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, Form} from \"formik\";\r\nimport SelectorInput from \"../Inputs/SelectorInput/SelectorInput\";\r\nimport ImgUploader from \"../ImgUploader/ImgUploader\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport CheckInput from \"../Inputs/CheckInput/CheckInput\";\r\nimport SelectField from \"../Inputs/Selector/SelectField\";\r\nimport MapBlock from \"../Inputs/MapBlock/MapBlock\";\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                placeholder,\r\n                type='',\r\n               selectInputData=[],\r\n               selectorProperty,\r\n               options=[],\r\n                       fileTypes,\r\n                       imageCount,\r\n                       readOnly=false,\r\n    ...props\r\n                   })=>{\r\n    return(\r\n        <div className=\"createOrEditField\">\r\n            <label htmlFor={name}>{label}</label>\r\n            {type === 'selectInput' ?\r\n                <Field name={name} placeholder={placeholder}>\r\n                    {({field: {name, value}, form: {setFieldValue}}) => {\r\n                    return (\r\n                    <SelectorInput\r\n                    setFieldValue={setFieldValue}\r\n                    value={value}\r\n                    name={name}\r\n                    data={selectInputData}\r\n                    placeholder={placeholder}/>\r\n                    )\r\n                }}\r\n                </Field>\r\n\r\n                : type==='phone' ?\r\n                    <Field name={name} >\r\n                     {({field:{name,value},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} value={value}/>}\r\n                    </Field>\r\n                        : type==='check' ?\r\n                            <Field   name={name} >\r\n                                {({field:{name,value},form: { setFieldValue}})=><CheckInput value={value} setFieldValue={setFieldValue} name={name} />}\r\n                          </Field>\r\n                : type==='selector' ?\r\n                            <Field name={name} placeholder={placeholder}>\r\n                                {({field: {name, value}, form: {setFieldValue}}) => {\r\n                                   return <SelectField\r\n                                       data={options[selectorProperty]}\r\n                                       setFieldValue={setFieldValue}\r\n                                       value={value}\r\n                                       name={name}\r\n                                       placeholder={placeholder}\r\n                                   />\r\n                                }}\r\n                                </Field>\r\n\r\n\r\n                : type==='textarea' ?\r\n                    <Field name={name} as={'textarea'} placeholder={placeholder} />\r\n\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              fileTypes={fileTypes}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name} >\r\n              {({field:{name,value},form: { setFieldValue}}) => <MapBlock\r\n                                                                setFieldValue={setFieldValue}\r\n                                                                value={value}\r\n                                                                name={name}/>}\r\n                </Field>\r\n                :\r\n                         <Field name={name} placeholder={placeholder} readOnly={readOnly} />\r\n\r\n            }\r\n\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput","import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik, useFormikContext} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = Object.keys(props.initialVals).map((item,index)=>{\r\n        return(\r\n            <FormInput\r\n                key={item}\r\n                name={item}\r\n                placeholder={props.inputConfig[index]?.placeholder}\r\n                label={props.inputConfig[index]?.label}\r\n                type={props.inputConfig[index]?.type}\r\n                selectInputData={props.inputConfig[index]?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={props.inputConfig[index]?.selectorProperty}\r\n                fileTypes={props.inputConfig[index]?.fileTypes}\r\n                imageCount={props.inputConfig[index]?.imageCount}\r\n                readOnly={props.inputConfig[index]?.readonly}\r\n            />\r\n        )\r\n    })\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            {props.formTitle &&\r\n            <div className={'createOrEditContainer__title'}>\r\n                <Link to={props.urlToTable}><img src={backSVG} alt=\"\"/></Link>\r\n                <h2>{props.formTitle}</h2>\r\n            </div>\r\n            }\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values)=>{\r\n                  await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n\r\n                    return (\r\n                    <Form>\r\n                        {inputs}\r\n                        <div className={\"createOrEditContainer__btns\"}>\r\n                            <EditBtn\r\n\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                        <CancelBtn urlToTable={props.urlToTable}/>\r\n                        </div>\r\n                    </Form>\r\n                )}}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default Former","import * as Yup from \"yup\";\r\n\r\nexport const validationGenerator = (key, config)=>{\r\n    let schema = {}\r\n    key.map((item,index)=> {\r\n        if(config[index]?.dataType) {\r\n            switch (config[index].dataType) {\r\n                case 'number':\r\n                    schema[item] = Yup.number();\r\n                    break;\r\n                default:\r\n                    schema[item] = Yup.string()\r\n            }\r\n        }\r\n            else{\r\n                schema[item] = Yup.string()\r\n            }\r\n\r\n\r\n\r\n        if(config[index]?.required){\r\n            schema[item] =  schema[item].required(config[index].required)\r\n        }\r\n        if(config[index]?.min){\r\n            schema[item] =  schema[item].min(config[index].min)\r\n        }\r\n        if(config[index]?.max){\r\n            schema[item] =  schema[item].min(config[index].max)\r\n        }\r\n        if(config[index]?.nullable){\r\n            schema[item] =  schema[item].nullable(config[index].nullable)\r\n        }\r\n    })\r\n    return schema\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id) {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        (!isLoading && props.valueById) || (!isLoading && !props.params?.id)\r\n            ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n        : <Preloader />\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","import React, {useEffect, useRef, useState} from 'react'\r\nimport Header from \"../Header/Header\";\r\nimport SidebarList from \"../Sidebar/SidebarList\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport SearchPanel from \"../Search-panel/SearchPanel\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport Table from \"../Table/Table\";\r\nimport RecordViewerContainer from \"../RecordViewer/RecordViewerContainer\";\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n    isLoading,\r\n    hasData,\r\n\r\n     recordViewValuesConfig,\r\n\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n                      })=>{\r\n    const clickOnRecord=(id)=>history.push(`/${pageUrl}/view/${id}`)\r\n    return(\r\n        <>\r\n                    <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n                            <h2 className='page-content__title'>{pageTitle}</h2>\r\n\r\n                            <Table\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                                adding={adding}\r\n                                urlToCreate = {`/${pageUrl}/${pageUrl}-creator`}\r\n                                deleteFunc = {deleteFunc}\r\n                                hasData={hasData}\r\n                            />\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        <Route path={`/${pageUrl}/view/:id`}>\r\n                            <RecordViewerContainer\r\n                                titles={recordViewTitlesConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n                                urlToTable={`/${pageUrl}`}\r\n\r\n\r\n                                recordViewValuesConfig={recordViewValuesConfig}\r\n                                valueById={valueById}\r\n                                getByIdFunc={getByIdFunc}\r\n                                clearFunc={clearFunc}\r\n                                isLoading={isLoading}\r\n\r\n                                editing={editing}\r\n                            />\r\n                        </Route>\r\n                    </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PageRenderer)","import React from \"react\";\r\nexport const OrderColumns  =[\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'orderStatus',\r\n        render: (value)=>\r\n            value==='Ожидает доставку'  || value ==='Оплачен, ожидает доставку' ?\r\n            <span style={{background: '#FF6800',color: '#f2f2f2',borderRadius: '5px',padding: '3px',margin: '3px 0'}}>{value}</span>\r\n            :value==='Доставлен' || value === 'Доставлен и оплачен' ? <span style={{background: '#009B00',color: '#f2f2f2',borderRadius: '5px',padding: '3px'}}>{value}</span>\r\n            :value==='Закрыт' ? <span style={{background: '#fff',color: '#000',borderRadius: '5px',padding: '3px'}}>{value}</span> : value\r\n\r\n        }\r\n\r\n]","export const recordViewOrderConfig  =[\r\n    {\r\n        title: \"Номер заказа\",\r\n        dataIndex: 'orderNumber'\r\n    },\r\n    {\r\n        title: \"Дата заказа\",\r\n        dataIndex: 'desiredDeliveryDate',\r\n    },\r\n    {\r\n      title: \"Заказчик\",\r\n      dataIndex: 'client'\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'product',\r\n    },\r\n    {\r\n        title: \"Сумма\",\r\n      dataIndex: 'totalPrice'\r\n    },\r\n    {\r\n        title: \"Адрес доставки\",\r\n        dataIndex: 'deliveryAddress',\r\n    },\r\n    {\r\n        title: \"Тип доставки\",\r\n        dataIndex: 'deliveryType',\r\n    },\r\n    {\r\n        title: \"Тип оплаты\",\r\n        dataIndex: 'paymentType',\r\n    },\r\n    {\r\n        title: \"Адрес склада\",\r\n        dataIndex: 'storageAddress',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'cashPaymentOrderStatus',\r\n    },\r\n    {\r\n        title: \"Статус заказа\",\r\n        dataIndex: 'orderStatus',\r\n    },\r\n\r\n]","import {addressData} from \"../../components/Inputs/SelectorInput/data/addressData\";\r\n\r\nexport const orderInputConfig = [\r\n    {\r\n        label: 'Имя',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Фамилия',\r\n        readonly: true\r\n    },\r\n    {\r\n        label: 'Номер телефона',\r\n        readonly: true\r\n    },\r\n    {\r\n    label: \"Адрес доставки\",\r\n   placeholder: \"Бишкек Советская Боконбаева\",\r\n    readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Тип доставки\",\r\n        placeholder: \"Самовывоз/Курьер\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'deliveryType',\r\n    },\r\n    {\r\n        label: \"Дата заказа\",\r\n        readonly: true\r\n    },\r\n    {\r\n        label: \"Тип оплаты\",\r\n        placeholder: \"Эльсом/Наличные\",\r\n        readonly: true\r\n        // type: 'selector',\r\n        // selectorProperty: 'paymentType',\r\n    },\r\n    {\r\n        label: \"Адрес склада\",\r\n        placeholder: \"Бишкек Советская Боконбаева\",\r\n        readonly: true\r\n        // type: 'map',\r\n        // selectInputData:addressData\r\n    },\r\n    {\r\n        label: \"Статус заказа\",\r\n        placeholder: \"Выберите статус\",\r\n        type: 'selector',\r\n        selectorProperty: 'status',\r\n    }\r\n   ]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder\r\n} from \"../../redux/reducers/orderReducer\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {OrderColumns} from \"../../configs/Orders/tableColumnsConfig\";\r\nimport {recordViewOrderConfig} from \"../../configs/Orders/recordViewConfig\";\r\nimport {orderInputConfig} from \"../../configs/Orders/inputFormConfig\";\r\nimport {toBeautifyFieldsValue} from \"../../utils/toBeatifyFiledsValue\";\r\n\r\n\r\n\r\n\r\nconst OrdersPage = ({orders,orderById,clearOrder,  getOrderById, createOrder,deleteOrder, getOrders, updateOrder,...props})=>{\r\n    console.log(orderById)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'orders'}\r\n            pageTitle ={'Заказы'}\r\n\r\n            tableData={orders}\r\n            tableColumnsConfig={OrderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewOrderConfig}\r\n            recordViewValuesConfig={{\r\n                orderNumber: orderById?.orderNumber,\r\n                client: <div>{orderById?.lastName} {orderById?.firstName}  | {orderById?.phoneNumber}</div>,\r\n                orderStatus: orderById?.orderStatus ,\r\n                deliveryAddress:orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                elsomPaymentOrderStatus: orderById?.elsomPaymentOrderStatus,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                product:  orderById?.products?.map(item=>{\r\n                    return <div><span>{item.product.name}</span>  <span>{`${item.amount}  ${item.product?.measureUnitResponse?.name}`}</span>  <span> {`${item.totalPrice} ${toBeautifyFieldsValue(item?.product?.currency)}`}  </span></div>\r\n                }),\r\n                totalPrice: orderById?.orderTotalPrice\r\n            }}\r\n\r\n            optionsForSelectorData={{\r\n                status:  [ 'AWAITING_DELIVERY','DELIVERED_AND_PAID','PAID_AWAITNG_DELIVERY', 'DELIVERED', 'CLOSED'],\r\n                deliveryType: ['COURIER', 'STORAGE'],\r\n                paymentType: ['ELSOM','CASH']\r\n\r\n            }}\r\n            formInputsConfig ={orderInputConfig}\r\n            creatorTitle={'Создание заказа'}\r\n            updaterTitle={'Редактирование заказа'}\r\n           adding={false}\r\n            updaterInitialFormValues={{\r\n                firstName: orderById?.firstName,\r\n                lastName: orderById?.lastName,\r\n                phoneNumber: orderById?.phoneNumber,\r\n                deliveryAddress: orderById?.deliveryAddress,\r\n                deliveryType: orderById?.deliveryType,\r\n                desiredDeliveryDate: orderById?.desiredDeliveryDate,\r\n                paymentType: orderById?.paymentType,\r\n                storageAddress: orderById?.storageAddress,\r\n                orderStatus: orderById?.orderStatus,\r\n\r\n            }}\r\n\r\n            getDataFunc={getOrders}\r\n            valueById={orderById}\r\n            getByIdFunc={getOrderById}\r\n            createFunc={createOrder}\r\n            updateFunc={updateOrder}\r\n            clearFunc={clearOrder}\r\n            deleteFunc={deleteOrder}\r\n            isLoading={props.orderFetchLoader}\r\n            hasData={props.hasOrders}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orders: state.order.orders,\r\n        orderById: state.order.orderById,\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        hasOrders: state.order.hasOrders\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        clearOrder,\r\n        getOrderById,\r\n        createOrder,\r\n        deleteOrder,\r\n        getOrders,\r\n        updateOrder\r\n    }\r\n)(OrdersPage)\r\n","import { DELETED_USER, SEARCHING, USER_TOGGLE_FETCH_LOADER, WRITE_USER_BY_ID, WRITE_USERS} from './types'\r\nimport {\r\n\r\n    userDelByIdReq,\r\n    userGetByIdReq, usersGetReq, userUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    users: [],\r\n    userById: {},\r\n    hasUsers: true,\r\n    userFetchLoader: false\r\n}\r\n\r\n\r\nexport const userReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_USERS:\r\n            return{\r\n                ...state,\r\n                users: [...state.users,...action.payload],\r\n                hasUsers: checkHasData(action.payload)\r\n            }\r\n        case USER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                userFetchLoader: action.payload\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                hasUsers: true\r\n            }\r\n        case WRITE_USER_BY_ID:\r\n            return{\r\n                ...state,\r\n                userById: action.payload\r\n            }\r\n        case DELETED_USER:\r\n            return{\r\n                ...state,\r\n                users: updateItemInStore(state.users,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: WRITE_USER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const userToggleLoader = bool=>{\r\n    return{\r\n        type: USER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\nexport const getUsers = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, usersGetReq, WRITE_USERS, userToggleLoader,page,searchText)\r\n}\r\nexport const getUserById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, userGetByIdReq, WRITE_USER_BY_ID, userToggleLoader,id)\r\n}\r\nexport const deleteUser = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,userDelByIdReq,id[i],userToggleLoader,DELETED_USER)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (data,id)=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,userUpdReq,data,userToggleLoader,id)\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport const UsersColumns  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n\r\n]","export const recordViewUserConfig  =[\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'firstName',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'lastName',\r\n    },\r\n    {\r\n        title: \"Отчество\",\r\n        dataIndex: 'middleName',\r\n    },\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phoneNumber',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'address',\r\n    },\r\n    // {\r\n    //     title: \"Фото пасспорта\",\r\n    //     dataIndex: 'passport',\r\n    // },\r\n    // {\r\n    //     title: \"Фото сертификата\",\r\n    //     dataIndex: 'sertificate',\r\n    // },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearUser, deleteUser, getUserById, getUsers} from \"../../redux/reducers/userReducer\";\r\nimport {UsersColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {recordViewUserConfig} from \"../../configs/Users/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({   users,\r\n                            userById,\r\n                            getUsers,\r\n                            getUserById,\r\n                            deleteUser,\r\n                            clearUser,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'users'}\r\n            pageTitle ={'Пользователи'}\r\n\r\n            tableData={users}\r\n            tableColumnsConfig={UsersColumns}\r\n\r\n            recordViewTitlesConfig={recordViewUserConfig}\r\n\r\n\r\n\r\n            getDataFunc={getUsers}\r\n            valueById={userById}\r\n            getByIdFunc={getUserById}\r\n            clearFunc={clearUser}\r\n            deleteFunc={deleteUser}\r\n            adding={false}\r\n            editing={false}\r\n            isLoading={props.userFetchLoader}\r\n            hasData={props.hasUsers}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        userFetchLoader: state.user.userFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getUsers,\r\n        getUserById,\r\n        deleteUser,\r\n        clearUser\r\n    }\r\n)(CategoriesPage)\r\n","import React from \"react\";\r\n\r\nexport const ProductColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Категория\",\r\n        dataIndex: 'category',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Поставщик\",\r\n        dataIndex: 'supplier',\r\n        object: 'fullName'\r\n    },\r\n]","export const recordViewProductConfig  =[{\r\n    title: \"Название товара\",\r\n        dataIndex: 'name',\r\n},\r\n{\r\n    title: \"Категория товара\",\r\n        dataIndex: 'category',\r\n},\r\n    {\r\n        title: \"Поставщик товара\",\r\n        dataIndex: 'supplier',\r\n    },\r\n\r\n{\r\n    title: \"Описание\",\r\n        dataIndex: 'description',\r\n},\r\n{\r\n    title: \"Цена товара\",\r\n        dataIndex: 'price',\r\n},\r\n{\r\n    title: \"Количество товара\",\r\n        dataIndex: 'measure',\r\n},\r\n    {\r\n        title: \"Фото товара\",\r\n        dataIndex: 'images',\r\n        type: 'image'\r\n    },\r\n    {\r\n        title: 'Рейтинг товара',\r\n        dataIndex: 'raiting',\r\n\r\n    },\r\n    {\r\n        title: 'Количество покупок',\r\n        dataIndex: 'boughtCount'\r\n    },\r\n    {\r\n        title: 'Комментарии',\r\n        dataIndex: 'comments'\r\n    }\r\n\r\n    ]","export const productInputConfig = [\r\n    {\r\n        label: \"Название товара\",\r\n        placeholder: \"Картошка\",\r\n        required: 'Введите название товара',\r\n    },\r\n    {\r\n        label: \"Категория товара\",\r\n        placeholder: \"Выберите категорию товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        required: 'Выберите категорию товара',\r\n        nullable: true,\r\n    },\r\n    {\r\n        label: \"Поставщик товара\",\r\n        placeholder: \"Выберите поставщика товара\",\r\n        type: 'selector',\r\n        selectorProperty: 'provider',\r\n        nullable: true,\r\n        required: 'Выберите поставщика товара',\r\n\r\n    },\r\n\r\n    {\r\n        label: \"Описание товара\",\r\n        placeholder: \"Самый вкусный картофель\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Цена товара\",\r\n        placeholder: \"30 сом/кг\",\r\n        dataType: 'number',\r\n        required: 'Укажите цену товара',\r\n    },\r\n    {\r\n        label: \"Валюта\",\r\n        type: 'selector',\r\n        selectorProperty: 'currency',\r\n        nullable: true,\r\n        placeholder: \"сом\",\r\n        required: 'Укажите валюту',\r\n    },\r\n    {\r\n        label: \"Количество товара\",\r\n        placeholder: \"100500\",\r\n        dataType: 'number',\r\n        required: 'Укажите количество товара',\r\n    },\r\n    {\r\n        label: \"Ед.измерения\",\r\n        type: 'selector',\r\n        selectorProperty: 'units',\r\n        nullable: true,\r\n        placeholder: \"кг\",\r\n        required: 'Укажите ед.измерения',\r\n    },\r\n    {\r\n        label: \"Фото товара\",\r\n        type: 'image',\r\n        fileTypes:'image/jpeg,image/png',\r\n        imageCount: 6\r\n    },\r\n\r\n    ]\r\n\r\n","export const toClearImageArray = data => {\r\n    return data.length!==0 ? data.map(item=>item?.file ? item.file: item) : null\r\n}","import {\r\n    WRITE_PRODUCTS,\r\n    WRITE_PRODUCT_BY_ID,\r\n    WRITE_RAITING_BY_ID,\r\n    SEARCHING,\r\n    WRITE_MEASURE_UNITS,\r\n    PRODUCT_TOGGLE_FETCH_LOADER, DELETED_CATEGORY, DELETED_PRODUCT,\r\n} from './types'\r\nimport {\r\n    productsGetReq,\r\n    productPostReq,\r\n    productUpdReq,\r\n    productDelByIdReq,\r\n    productImgPostReq,\r\n    productGetByIdReq, productImgUpdReq,  measureUnitGetReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {toggleLoader} from \"./mainReducer\";\r\n\r\nconst initialState={\r\n    products: [],\r\n    productById: {},\r\n    ratingById: undefined,\r\n    hasProducts: true,\r\n    measureUnits: [],\r\n    productFetchLoader: false\r\n\r\n}\r\n\r\n\r\nexport const productReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                productFetchLoader: action.payload\r\n            }\r\n        case WRITE_MEASURE_UNITS:\r\n            return{\r\n                ...state,\r\n                measureUnits: action.payload,\r\n            }\r\n        case WRITE_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                products: [...state.products,...action.payload],\r\n                hasProducts: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                products: [],\r\n                hasProducts: true\r\n            }\r\n        case WRITE_PRODUCT_BY_ID:\r\n            return{\r\n                ...state,\r\n                productById: action.payload\r\n            }\r\n        case WRITE_RAITING_BY_ID:\r\n            return{\r\n                ...state,\r\n                ratingById: action.payload\r\n            }\r\n        case DELETED_PRODUCT:\r\n            return{\r\n                ...state,\r\n                products: updateItemInStore(state.products,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const productToggleLoader = bool=>{\r\n    return{\r\n        type: PRODUCT_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearProduct = ()=>{\r\n    return{\r\n        type: WRITE_PRODUCT_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getMeasureUnits = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,measureUnitGetReq,WRITE_MEASURE_UNITS,toggleLoader)\r\n}\r\nexport const getProducts = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, productsGetReq, WRITE_PRODUCTS, productToggleLoader,page,searchText)\r\n}\r\nexport const getProductById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, productGetByIdReq, WRITE_PRODUCT_BY_ID, productToggleLoader,id)\r\n}\r\nexport const createProduct = data=>{\r\n    return async dispatch => {\r\n            dispatch(productToggleLoader(true))\r\n            await productPostReq(data)\r\n                .then(async resp => {\r\n                    if (data.images) {\r\n                        const formData = new FormData()\r\n                        toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                        formData.append('productId', resp.data.result.id)\r\n                        await productImgPostReq(formData)\r\n                    }\r\n                })\r\n            dispatch(productToggleLoader(false))\r\n    }\r\n}\r\nexport const deleteProduct = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,productDelByIdReq,id[i],productToggleLoader,DELETED_PRODUCT)\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const updateProduct = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(productToggleLoader(true))\r\n        await productUpdReq(data,id)\r\n            .then( async resp=>{\r\n                if(data.images) {\r\n                    const formData = new FormData()\r\n                    toClearImageArray(data.images).map(item => formData.append('images', item))\r\n                    formData.append('productId', resp.data.result.id)\r\n                    await productImgPostReq(formData)\r\n                }\r\n            })\r\n\r\n        dispatch(productToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import {providerImgPostReq} from \"../api/Request\";\r\n\r\n\r\nexport const formDataProviderTemplate = async (id,data,key)=>{\r\n    console.log(data[key])\r\n    const formData = new FormData()\r\n    formData.append('supplierId', id)\r\n    formData.append('supplierFileType', key)\r\n    data[key].map(item=>formData.append('images',item.file))\r\n    await providerImgPostReq(formData)\r\n}","import {\r\n    WRITE_PROVIDER,\r\n    WRITE_PROVIDER_BY_ID,\r\n    WRITE_ACTIVE_PROVIDERS,\r\n    ADDED_PROVIDER,\r\n    DELETED_PROVIDER, UPDATED_PROVIDER, SEARCHING, PROVIDER_TOGGLE_FETCH_LOADER, DELETED_PRODUCT,\r\n} from './types'\r\nimport {\r\n    providerGetByIdReq,\r\n    providersGetReq,\r\n    providerPostReq,\r\n    providerUpdReq,\r\n    providerDelByIdReq,\r\n    providerActiveGetReq, providerPlaceOfProductionPostReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {formDataProviderTemplate} from \"../../utils/templates/formDataTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    providers: [],\r\n    providerById: {},\r\n    activeProviders: [],\r\n    hasProvider: true,\r\n    providerFetchLoader: false\r\n}\r\n\r\n\r\nexport const providerReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case PROVIDER_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                providerFetchLoader: action.payload\r\n            }\r\n        case WRITE_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: [...state.providers,...action.payload],\r\n                hasProvider: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                providers: [],\r\n                hasProvider: true\r\n            }\r\n        case WRITE_PROVIDER_BY_ID:\r\n            return{\r\n                ...state,\r\n                providerById: action.payload\r\n            }\r\n        case WRITE_ACTIVE_PROVIDERS:\r\n            return{\r\n                ...state,\r\n                activeProviders: action.payload\r\n            }\r\n\r\n        case DELETED_PROVIDER:\r\n            return{\r\n                ...state,\r\n                providers: updateItemInStore(state.providers,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearProvider = ()=>{\r\n    return{\r\n        type: WRITE_PROVIDER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const providerToggleLoader = bool=>{\r\n    return{\r\n        type: PROVIDER_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getActiveProviders = (page)=>{\r\n    return async dispatch => getTemplate(dispatch,providerActiveGetReq,WRITE_ACTIVE_PROVIDERS,providerToggleLoader,page)\r\n}\r\nexport const getProviders = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, providersGetReq, WRITE_PROVIDER, providerToggleLoader,page,searchText)\r\n}\r\nexport const getProviderById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, providerGetByIdReq, WRITE_PROVIDER_BY_ID, providerToggleLoader,id)\r\n}\r\nexport const createProvider = (data)=>{\r\n        return async dispatch => {\r\n            dispatch(providerToggleLoader(true))\r\n            await providerPlaceOfProductionPostReq(data.placeOfProduction).then(async res=> {\r\n                const newData = data\r\n                newData['placeOfProductionId'] = res.data.result.id\r\n                await providerPostReq(newData)\r\n                    .then(resp => {\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'PASSPORT')\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'SERTIFICATE')\r\n                        formDataProviderTemplate(resp.data.result.id, data, 'CONTRACT')\r\n                    })\r\n                dispatch(providerToggleLoader(false))\r\n            })\r\n        }\r\n}\r\nexport const deleteProvider = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,providerDelByIdReq,id[i],providerToggleLoader,DELETED_PROVIDER)\r\n        }\r\n    }\r\n}\r\nexport const updateProvider = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,providerUpdReq,data,providerToggleLoader,id)\r\n}\r\n\r\n","import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    DELETED_CATEGORY,\r\n    SEARCHING, CATEGORY_TOGGLE_FETCH_LOADER\r\n} from './types'\r\nimport {\r\n    categoryDelByIdReq,\r\n    categoryGetByIdReq,\r\n     categoryGetSearchReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    searchedCategories: [],\r\n    hasCategories: true,\r\n    categoryFetchLoader: false\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case CATEGORY_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                categoryFetchLoader: action.payload\r\n            }\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: [...state.categories,...action.payload],\r\n                hasCategories: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                categories: [],\r\n                hasCategories: true\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n        case DELETED_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const categoryToggleLoader = bool=>{\r\n    return{\r\n        type: 'CATEGORY_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getCategory = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, categoryGetSearchReq, WRITE_CATEGORIES, categoryToggleLoader,page,searchText)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, categoryToggleLoader,id)\r\n}\r\nexport const createCategory = data=>{\r\n        return async dispatch => {\r\n                dispatch(categoryToggleLoader(true))\r\n                const formData = new FormData()\r\n                formData.append('categoryRequest', new Blob([JSON.stringify({\r\n                    \"name\": `${data.name}`,\r\n                    \"description\": data.description,\r\n                    \"parentCategoryId\": data.parentCategoryId\r\n                })], {type: \"application/json\"}));\r\n                if (toClearImageArray(data.image) !== null) {\r\n                    toClearImageArray(data.image).map(item => formData.append('image', item))\r\n                } else {\r\n                    formData.append('image', null)\r\n                }\r\n                await categoryPostReq(formData).catch(error => console.log(error.response))\r\n                dispatch(categoryToggleLoader(false))\r\n        }\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n          await deleteTemplate(dispatch,categoryDelByIdReq,id[i],categoryToggleLoader,DELETED_CATEGORY)\r\n        }\r\n    }\r\n}\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => {\r\n        dispatch(categoryToggleLoader(true))\r\n        const formData = new FormData()\r\n        formData.append('categoryRequest', new Blob([JSON.stringify({\r\n            \"id\": data.id,\r\n            \"name\": `${data.name}`,\r\n            \"description\": data.description,\r\n            \"parentCategoryId\": data.parentCategoryId\r\n        })], {type: \"application/json\"}));\r\n        if (toClearImageArray(data.image) !== null) {\r\n            toClearImageArray(data.image).map(item => formData.append('image', item))\r\n        } else {\r\n            formData.append('image', null)\r\n        }\r\n        await categoryUpdReq(formData,id).catch(error => console.log(error.response))\r\n        dispatch(categoryToggleLoader(false))\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\n\r\n\r\nimport {ProductColumns} from \"../../configs/Products/tableColumnsConfig\";\r\nimport {recordViewProductConfig} from \"../../configs/Products/recordViewConfig\";\r\nimport {productInputConfig} from \"../../configs/Products/inputFormConfig\";\r\nimport {\r\n    clearProduct,\r\n    createProduct,\r\n    deleteProduct, getMeasureUnits,\r\n    getProductById,\r\n    getProducts,\r\n    updateProduct\r\n} from \"../../redux/reducers/productReducer\";\r\nimport {getActiveProviders} from \"../../redux/reducers/providerReducer\";\r\nimport {getCategory} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\nconst ProductsPage = ({   products,\r\n                          productById,\r\n                          ratingById,\r\n                          getProducts,\r\n                          getProductById,\r\n                          createProduct,\r\n                          updateProduct,\r\n                          deleteProduct,\r\n                          clearProduct,\r\n                          categories,\r\n                          activeProviders,\r\n                          getCategory,\r\n                          getActiveProviders,\r\n                          hasProducts,\r\n                          measureUnits,\r\n                          getMeasureUnits,\r\n    ...props\r\n                      })=>{\r\n    console.log(measureUnits)\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'products'}\r\n            pageTitle ={'Товары'}\r\n\r\n            tableData={products}\r\n            tableColumnsConfig={ProductColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProductConfig}\r\n\r\n            creatorTitle={'Создание товара'}\r\n            updaterTitle={'Редактирование товара'}\r\n            formInputsConfig={productInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : [],\r\n                provider: activeProviders  ? [...activeProviders] : [],\r\n                currency: ['SOM','USD'],\r\n                units: measureUnits  ?  [...measureUnits] : []\r\n            }}\r\n            recordViewValuesConfig={{\r\n                name: productById?.name,\r\n                category: productById?.category?.name,\r\n                supplier: productById?.supplier?.fullName,\r\n                description: productById?.description,\r\n                price: `${productById?.price} ${productById?.currency}`,\r\n                measure: `${productById?.measure} ${productById?.measureUnitResponse?.name}`,\r\n                images: productById?.productImages?.map(item=>item.imageUrl),\r\n                boughtCount: productById?.boughtCount,\r\n                raiting: productById?.raiting,\r\n                comments: productById?.comment?.map(item=>{\r\n                    return <div><span>{`${item.client?.lastName} ${item.client?.firstName} ${item.client?.middleName}`}</span>\r\n                        <span>{item.client?.email}</span>  <span> {item.comment} </span></div>\r\n                })\r\n\r\n            }}\r\n            loadSelectorData={[getCategory,getActiveProviders,getMeasureUnits]}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                categoryId: null,\r\n                supplierId: null,\r\n                description: '',\r\n                price: 0,\r\n                currency: '',\r\n                measure: 0,\r\n                measureUnitId: 0,\r\n                images: []\r\n            }}\r\n            updaterInitialFormValues={{\r\n                name: productById?.name,\r\n                categoryId: productById?.category?.id,\r\n                supplierId: productById?.supplier?.id,\r\n                description: productById?.description,\r\n                price: productById?.price,\r\n                currency: productById?.currency,\r\n                measure: productById?.measure,\r\n                measureUnitId: productById?.measureUnitResponse?.id,\r\n                images: productById?.productImages?.map(item=>item.imageUrl)\r\n            }}\r\n            getDataFunc={getProducts}\r\n            valueById={productById}\r\n            getByIdFunc={getProductById}\r\n            createFunc={createProduct}\r\n            updateFunc={updateProduct}\r\n            clearFunc={clearProduct}\r\n            deleteFunc={deleteProduct}\r\n            hasData={hasProducts}\r\n            isLoading={props.productFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        products: state.product.products,\r\n        hasProducts: state.product.hasProducts,\r\n        productById: state.product.productById,\r\n        ratingById: state.product.ratingById,\r\n        categories: state.category.categories,\r\n        activeProviders: state.provider.activeProviders,\r\n        measureUnits : state.product.measureUnits,\r\n        productFetchLoader: state.product.productFetchLoader,\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getActiveProviders,\r\n        getProducts,\r\n        getProductById,\r\n        createProduct,\r\n        updateProduct,\r\n        deleteProduct,\r\n        clearProduct,\r\n        getMeasureUnits\r\n    }\r\n)(ProductsPage)\r\n","\r\nexport const providerInputConfig = [\r\n    {\r\n    label: \"ФИО\",\r\n    placeholder: \"Анисимова Виктория Викторовна\",\r\n    required: \"Укажите имя поставщика\",\r\n    },\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"+(999) 00-00-00\",\r\n        required: \"Укажите телефон поставщика\",\r\n        type: 'phone'\r\n    },\r\n    {\r\n        label: \"E-mail\",\r\n        placeholder: \"example@gmail.com\",\r\n    },\r\n    {\r\n        label: \"Адрес\",\r\n        placeholder: \"Чуйская область Бишкек\",\r\n        type: 'map',\r\n        required: \"Укажите адрес поставщика\",\r\n    },\r\n    {\r\n        label: \"Товары\",\r\n        placeholder: \"Картошка,...\",\r\n        required: \"Укажите товары поставщика\",\r\n    },\r\n    {\r\n        label: \"Банковский счет\",\r\n        placeholder: \"40702810500000000001\",\r\n    },\r\n    {\r\n        label: \"Фото пасспорта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,application/pdf',\r\n        imageCount: 2\r\n    },\r\n    {\r\n        label: \"Фото сертификата\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Фото контракта\",\r\n        type: 'image',\r\n        fileTypes:'image/png,image/jpg,image/jpeg,application/pdf',\r\n        imageCount: 6\r\n    },\r\n    {\r\n        label: \"Статус\",\r\n        type: 'check'\r\n    },\r\n\r\n    ]","import {badStatusSVG, goodStatusSVG} from \"../../assets/icons\";\r\nimport React from \"react\";\r\n\r\nexport const ProviderColumns  =[\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'isActive',\r\n        render: (value)=>value? <img src={goodStatusSVG} /> : <img src={badStatusSVG} alt=\"\"/>\r\n    }\r\n]","export const recordViewProviderConfig  =[\r\n    {\r\n        title: \"E-mail\",\r\n        dataIndex: 'email',\r\n    },\r\n    {\r\n        title: \"Телефон\",\r\n        dataIndex: 'phone',\r\n    },\r\n    {\r\n        title: \"ФИО\",\r\n        dataIndex: 'fullName',\r\n    },\r\n    {\r\n        title: \"Товары\",\r\n        dataIndex: 'produces',\r\n    },\r\n    {\r\n        title: \"Адрес\",\r\n        dataIndex: 'placeOfProduction',\r\n    },\r\n    {\r\n        title: \"Фото пасспорта\",\r\n        dataIndex: 'supplierFile',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Фото сертификата\",\r\n        dataIndex: 'supplierFile',\r\n        object: 'supplierFileType'\r\n    },\r\n    {\r\n        title: \"Банковский счет\",\r\n        dataIndex: 'ewalletNumber',\r\n    },\r\n    {\r\n        title: \"Статус\",\r\n        dataIndex: 'status',\r\n    },\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearProvider,\r\n    createProvider,\r\n    deleteProvider, getProviderById,\r\n    getProviders,\r\n    updateProvider\r\n} from \"../../redux/reducers/providerReducer\";\r\nimport {providerInputConfig} from \"../../configs/Providers/inputFormConfig\";\r\nimport {ProviderColumns} from \"../../configs/Providers/tableColumnsConfig\";\r\nimport {recordViewProviderConfig} from \"../../configs/Providers/recordViewConfig\";\r\n\r\n\r\n\r\n\r\nconst ProvidersPage = ({providers,providerById,getProviders,getProviderById,createProvider,updateProvider,deleteProvider,clearProvider,...props})=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'providers'}\r\n            pageTitle ={'Поставщики'}\r\n\r\n            tableData={providers}\r\n            tableColumnsConfig={ProviderColumns}\r\n\r\n            recordViewTitlesConfig={recordViewProviderConfig}\r\n            recordViewValuesConfig={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction:  <span></span>,\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            creatorTitle={'Создание поставщика'}\r\n            updaterTitle={'Редактирование поставщика'}\r\n            formInputsConfig={providerInputConfig}\r\n            creatorInitialFormValues={{\r\n                fullName: '',\r\n                phone: '',\r\n                email: '',\r\n                placeOfProduction: {},\r\n                produces: '',\r\n                walletNumber: '',\r\n                PASSPORT: [],\r\n                SERTIFICATE: [],\r\n                CONTRACT: [],\r\n                isActive: false\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                fullName: providerById?.fullName,\r\n                phone: providerById?.phone,\r\n                email:  providerById?.email,\r\n                placeOfProduction: {\r\n                    country: providerById?.placeOfProduction?.country,\r\n                    city: providerById?.placeOfProduction?.city,\r\n                    region: providerById?.placeOfProduction?.region,\r\n                    street: providerById?.placeOfProduction?.street\r\n                },\r\n                produces:  providerById?.produces,\r\n                walletNumber:  providerById?.ewalletNumber,\r\n                PASSPORT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='PASSPORT'),\r\n                SERTIFICATE: providerById?.supplierFile?.filter(item=>item.supplierFileType==='SERTIFICATE'),\r\n                CONTRACT: providerById?.supplierFile?.filter(item=>item.supplierFileType==='CONTRACT'),\r\n                isActive:  providerById?.isActive\r\n            }}\r\n            getDataFunc={getProviders}\r\n            valueById={providerById}\r\n            getByIdFunc={getProviderById}\r\n            createFunc={createProvider}\r\n            updateFunc={updateProvider}\r\n            clearFunc={clearProvider}\r\n            deleteFunc={deleteProvider}\r\n            isLoading={props.providerFetchLoader}\r\n            hasData={props.hasProvider}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        providers: state.provider.providers,\r\n        providerById: state.provider.providerById,\r\n        providerFetchLoader: state.provider.providerFetchLoader,\r\n        hasProvider: state.provider.hasProvider\r\n\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getProviders,\r\n        getProviderById,\r\n        createProvider,\r\n        updateProvider,\r\n        deleteProvider,\r\n        clearProvider\r\n    }\r\n)(ProvidersPage)\r\n","import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\nimport {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img src={checkPasSVG} alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PasswordInput from \"../Inputs/PasswordInput/PasswordInput\";\r\nimport PhoneInput from \"../Inputs/PhoneInput/PhoneInput\";\r\nimport {connect} from \"react-redux\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport {writeAuthMessage} from \"../../redux/reducers/mainReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst AuthForm = (props)=>{\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                username:'',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required(),\r\n                password: Yup.string().required(),\r\n            })}\r\n            onSubmit={(values)=>props.submitHandler(values)}\r\n        >\r\n            <Form\r\n                onClick={()=>props.writeAuthMessage('')}\r\n            >\r\n                <Field name=\"username\" placeholder=\"Логин\">\r\n                    {({field:{name},form: { setFieldValue}})=>  <PhoneInput setFieldValue={setFieldValue} name={name} />}\r\n                </Field>\r\n                <Field name=\"password\" >\r\n                    {({field:{name},form: { setFieldValue}})=> <PasswordInput setFieldValue={setFieldValue} name={name} placeholder=\"Пароль\"/>}\r\n                </Field>\r\n                {props.authFetchLoader || props.userFetchLoader ? <Preloader /> :\r\n                <button className={\"auth__btn\"} type={'submit'}>Войти</button>\r\n                }\r\n                {props.authErrorMessage && <ErrorMsg text={props.authErrorMessage}/>}\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authErrorMessage: state.main.authErrorMessage,\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{writeAuthMessage})(AuthForm)","import React from 'react'\r\nimport AuthForm from \"./AuthForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {authSignIn, togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\nconst AuthContainer = ({authSignIn})=>{\r\n\r\n    const submitHandler = (values)=>authSignIn(values)\r\n    return(\r\n        <AuthForm submitHandler={submitHandler}/>\r\n    )\r\n}\r\n\r\nexport default connect(null,{authSignIn})(AuthContainer)","import React from 'react'\r\nimport './AuthPage.css'\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container'>\r\n           <div className=\"auth__block\">\r\n               <div className=\"auth__title\">Авторизация</div>\r\n               <AuthContainer />\r\n           </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","export const recordViewCategoryConfig  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n\r\n        dataIndex: 'imagePath',\r\n        type: 'image'\r\n    },\r\n]","export const CategoryColumns  =[\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n    },\r\n    {\r\n        title: \"Родительская категория\",\r\n        dataIndex: 'parentCategory',\r\n        object: 'name'\r\n    },\r\n    {\r\n        title: \"Описание\",\r\n        dataIndex: 'description',\r\n\r\n    },\r\n]","export const categoryInputConfig = [{\r\n    label: \"Название\",\r\n    placeholder: \"Овощи\",\r\n    required: \"Введите название категории\",\r\n\r\n},\r\n    {\r\n        label: \"Описание\",\r\n        placeholder: \"...\",\r\n    },\r\n    {\r\n        label: \"Родительская категория\",\r\n        placeholder: \"Выберите родительскую категорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        nullable: true\r\n    },\r\n    {\r\n        title: \"Иконка категории\",\r\n        dataIndex: 'image',\r\n        type: 'image',\r\n        fileTypes:'image/svg+xml',\r\n        required: 'Добавьте иконку'\r\n    },\r\n]\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    clearCategory,\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById, getSearchedCategory, updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {recordViewCategoryConfig} from \"../../configs/Categories/recordViewConfig\";\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/inputFormConfig\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categories,hasCategories,categoryById,getSearchedCategory,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory,...props})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n            recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Создание категории'}\r\n            updaterTitle={'Редактирование категории'}\r\n            formInputsConfig={categoryInputConfig}\r\n            optionsForSelectorData={{\r\n                category: categories ? [...categories] : []\r\n            }}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                description: '',\r\n                parentCategoryId: null,\r\n                image: ''}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                description: categoryById?.description,\r\n                parentCategoryId: categoryById?.parentCategory?.id ? categoryById.parentCategory.id :  null,\r\n                image:  categoryById?.imagePath\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n            clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n            hasData={hasCategories}\r\n            isLoading={props.categoryFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById,\r\n        hasCategories: state.category.hasCategories,\r\n        categoryFetchLoader: state.category.categoryFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        clearCategory,\r\n    }\r\n    )(CategoriesPage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isLoading: state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","import  React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {backSVG} from \"../../assets/icons\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst ProfileForm = (props)=>{\r\n    return(\r\n        <div className='createOrEditContainer'>\r\n            <div className={'createOrEditContainer__title'}><Link to={props.urlToBack}><img src={backSVG} alt=\"\"/></Link> <h2>{\"Редактирование профиля\"}</h2></div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: props.profile?.firstName,\r\n                    lastName: props.profile?.lastName,\r\n                    middleName: props.profile?.middleName,\r\n                    email: props.profile?.email\r\n                }}\r\n                validationSchema={Yup.object({\r\n                    firstName: Yup.string(),\r\n                    lastName: Yup.string(),\r\n                    middleName: Yup.string(),\r\n                    email: Yup.string()\r\n                })}\r\n                onSubmit={(values)=>props.handleSubmit(values)}\r\n            >\r\n                {({handleSubmit,errors,values}) => {\r\n\r\n                    return (\r\n                        <Form>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'firstName'}>Имя\r\n                                <Field name=\"firstName\" placeholder=\"Виктория\"/>\r\n                                <span className='authError'><ErrorMessage name=\"firstName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'lastName'}>Фамилия\r\n                                <Field name=\"lastName\" placeholder=\"Ансимова\"/>\r\n                                <span className='authError'><ErrorMessage name=\"lastName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'middleName'}>Отчество\r\n                                <Field name=\"middleName\" placeholder=\"Викторовна\"/>\r\n                                <span className='authError'><ErrorMessage name=\"middleName\"/></span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"createOrEditField\">\r\n                                <label htmlFor={'email'}>E-mail\r\n                                    <Field name=\"email\" placeholder=\"example.com\"/>\r\n                                    <span className='authError'><ErrorMessage name=\"email\"/></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    urlToTable={'providers'}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n                                <CancelBtn\r\n                                    urlToTable={'providers'}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileForm;","import React, {useEffect} from 'react'\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport {getUserById, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\n\r\nconst ProfileContainer = (props)=>{\r\n    useEffect(()=>{\r\n        if(props.userId) {\r\n            props.getUserById(props.userId)\r\n        }\r\n    },[props.userId])\r\n    const handleSubmit = values=>props.updateUser(values,localStorage.getItem('id'))\r\n\r\n    return(\r\n        !props.userFetchLoader && !props.authFetchLoader && props.profile   ?\r\n        <ProfileForm {...props} handleSubmit={handleSubmit}/> :\r\n            <Preloader />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        authFetchLoader: state.main.authFetchLoader,\r\n        userFetchLoader: state.user.userFetchLoader,\r\n        userId: state.main.userId,\r\n        profile: state.user.userById\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateUser,getUserById})(ProfileContainer)","import React from 'react'\r\n\r\nimport ProfileContainer from \"../../components/Profile/ProfileContainer\";\r\n\r\n\r\n\r\n\r\nconst ProfilePage = ()=>{\r\n\r\n    return(\r\n    <ProfileContainer urlToBack={'/providers'}/>\r\n    )\r\n}\r\n\r\nexport  default ProfilePage","import {\r\n    WRITE_FAQ,\r\n    WRITE_FAQ_BY_ID,\r\n    SEARCHING, FAQ_TOGGLE_FETCH_LOADER,  DELETED_FAQ\r\n} from './types'\r\nimport {\r\n    faqDelByIdReq,\r\n    faqGetByIdReq,\r\n    faqGetReq,\r\n    faqPostReq,\r\n    faqUpdReq\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\n\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    faq: [],\r\n    faqById: {},\r\n    hasFaq: true,\r\n    faqFetchLoader: false\r\n}\r\n\r\n\r\nexport const faqReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case FAQ_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                faqFetchLoader: action.payload\r\n            }\r\n        case WRITE_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: [...state.faq,...action.payload],\r\n                hasFaq: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                faq: [],\r\n                hasFaq: true\r\n            }\r\n        case WRITE_FAQ_BY_ID:\r\n            return{\r\n                ...state,\r\n                faqById: action.payload\r\n            }\r\n        case DELETED_FAQ:\r\n            return{\r\n                ...state,\r\n                faq: updateItemInStore(state.faq,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const faqToggleLoader = bool=>{\r\n    return{\r\n        type: FAQ_TOGGLE_FETCH_LOADER,\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const getFaq = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, faqGetReq, WRITE_FAQ, faqToggleLoader,page,searchText)\r\n}\r\nexport const getFaqById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, faqGetByIdReq, WRITE_FAQ_BY_ID, faqToggleLoader,id)\r\n}\r\nexport const createFaq = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqPostReq,data,faqToggleLoader)\r\n}\r\nexport const deleteFaq = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,faqDelByIdReq,id[i],faqToggleLoader,DELETED_FAQ)\r\n        }\r\n    }\r\n}\r\nexport const updateFaq = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,faqUpdReq,data,faqToggleLoader,id)\r\n}\r\nexport const clearFaq = ()=>{\r\n    return{\r\n        type: WRITE_FAQ_BY_ID,\r\n        action: []\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport './pageLoader.css'\r\nimport {loaderLogoSVG} from '../../assets/icons'\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport {connect} from \"react-redux\";\r\nimport {Transition,Spring,config} from \"react-spring/renderprops\";\r\nimport {togglePageLoader} from \"../../redux/reducers/mainReducer\";\r\n\r\nconst PageLoader = ({isPageLoader})=>{\r\n\r\n    return(\r\n        <>\r\n            <div className=\"box\" ><img src={loaderLogoSVG}  alt=\"\"/></div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n\r\n        isPageLoader: state.main.isPageLoader,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{togglePageLoader})(PageLoader)","export const faqInputConfig = [{\r\n    label: \"Вопрос\",\r\n    placeholder: \"...\",\r\n    required: \"Введите вопрос\",\r\n    type: 'textarea'\r\n\r\n},\r\n    {\r\n        label: \"Ответ\",\r\n        placeholder: \"...\",\r\n        required: \"Введите ответ\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const FaqColumns  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewFaqConfig  =[\r\n    {\r\n        title: \"Вопрос\",\r\n        dataIndex: 'question',\r\n    },\r\n    {\r\n        title: \"Ответ\",\r\n        dataIndex: 'answer',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {clearFaq, createFaq, deleteFaq, getFaq, getFaqById, updateFaq} from \"../../redux/reducers/faqReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {faqInputConfig} from \"../../configs/Faq/inputFormConfig\";\r\nimport {FaqColumns} from \"../../configs/Faq/tableColumnsConfig\";\r\nimport {recordViewFaqConfig} from \"../../configs/Faq/recordViewConfig\";\r\n\r\n\r\nconst FaqPage = props=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'faq'}\r\n            pageTitle ={'FAQ'}\r\n\r\n            tableData={props.faq}\r\n            tableColumnsConfig={FaqColumns}\r\n\r\n            recordViewTitlesConfig={recordViewFaqConfig}\r\n\r\n            creatorTitle={'Создание вопроса-ответа'}\r\n            updaterTitle={'Редактирование вопроса-ответа'}\r\n            formInputsConfig={faqInputConfig}\r\n            creatorInitialFormValues={{\r\n                question: \"\",\r\n                answer: \"\",\r\n                order: \"\"\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                question: props.faqById?.question,\r\n                answer: props.faqById?.answer,\r\n                order: props.faqById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getFaq}\r\n            valueById={props.faqById}\r\n            getByIdFunc={props.getFaqById}\r\n            createFunc={props.createFaq}\r\n            updateFunc={props.updateFaq}\r\n            deleteFunc={props.deleteFaq}\r\n            clearFunc={props.clearFaq}\r\n            isLoading={props.faqFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        faq: state.faq.faq,\r\n        faqById: state.faq.faqById,\r\n        faqFetchLoader: state.faq.faqFetchLoader\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getFaq,\r\n        getFaqById,\r\n        createFaq,\r\n        updateFaq,\r\n        deleteFaq,\r\n        clearFaq\r\n    }\r\n)(FaqPage)\r\n","import {\r\n    WRITE_ABOUT_US,\r\n    WRITE_ABOUT_US_BY_ID,\r\n    ADDED_ABOUT_US,\r\n    DELETED_ABOUT_US,\r\n    UPDATED_ABOUT_US, SEARCHING, ABOUT_TOGGLE_FETCH_LOADER, WRITE_CATEGORIES\r\n} from './types'\r\nimport {\r\n    aboutUsDelByIdReq,\r\n    aboutUsGetByIdReq,\r\n    aboutUsGetReq,\r\n    aboutUsPostReq,\r\n    aboutUsUpdReq,\r\n} from \"../../utils/api/Request\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {checkHasData} from \"../../utils/checkHasData\";\r\nimport {getSearchedTemplate} from \"../../utils/templates/getSearchedTemplate\";\r\n\r\nconst initialState={\r\n    aboutUs: [],\r\n    aboutUsById: {},\r\n    hasAbout: true,\r\n    aboutFetchLoader: false\r\n}\r\n\r\n\r\nexport const aboutUsReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ABOUT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                aboutFetchLoader: action.payload\r\n            }\r\n        case WRITE_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: [...state.aboutUs,...action.payload],\r\n                hasAbout: checkHasData(action.payload)\r\n            }\r\n        case SEARCHING:\r\n            return {\r\n                ...state,\r\n                aboutUs: [],\r\n                hasAbout: true\r\n            }\r\n        case WRITE_ABOUT_US_BY_ID:\r\n            return{\r\n                ...state,\r\n                aboutUsById: action.payload\r\n            }\r\n        case DELETED_ABOUT_US:\r\n            return{\r\n                ...state,\r\n                aboutUs: updateItemInStore(state.aboutUs,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const aboutToggleLoader = bool=>{\r\n    return{\r\n        type: 'ABOUT_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const getAboutUs = (page,searchText)=> {\r\n    return async dispatch => getSearchedTemplate(dispatch, aboutUsGetReq, WRITE_ABOUT_US, aboutToggleLoader,page,searchText)\r\n}\r\nexport const getAboutUsById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, aboutUsGetByIdReq, WRITE_ABOUT_US_BY_ID, aboutToggleLoader,id)\r\n}\r\nexport const createAboutUs = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsPostReq,data,aboutToggleLoader)\r\n}\r\nexport const deleteAboutUs = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,aboutUsDelByIdReq,id[i],aboutToggleLoader,DELETED_ABOUT_US)\r\n        }\r\n    }\r\n}\r\nexport const updateAboutUs = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUsUpdReq,data,aboutToggleLoader,id)\r\n}\r\n\r\n","export const aboutUsInputConfig = [{\r\n    label: \"Загловок\",\r\n    placeholder: \"Заголовок...\",\r\n\r\n\r\n},\r\n    {\r\n        label: \"Параграф\",\r\n        placeholder: \"...\",\r\n        type: 'textarea'\r\n    },\r\n    {\r\n        label: \"Порядок\",\r\n        placeholder: \"1\",\r\n    },\r\n\r\n]\r\n\r\n","export const AboutUsColumns  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","export const recordViewAboutUsConfig  =[\r\n    {\r\n        title: \"Загловок\",\r\n        dataIndex: 'header',\r\n    },\r\n    {\r\n        title: \"Параграф\",\r\n        dataIndex: 'paragraph',\r\n    },\r\n    {\r\n        title: \"Порядок\",\r\n        dataIndex: 'order',\r\n    },\r\n]","import React from 'react'\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    createAboutUs,\r\n    deleteAboutUs,\r\n    getAboutUs,\r\n    getAboutUsById,\r\n    updateAboutUs\r\n} from \"../../redux/reducers/aboutUsReducer\";\r\nimport {aboutUsInputConfig} from \"../../configs/AboutUs/inputFormConfig\";\r\nimport {AboutUsColumns} from \"../../configs/AboutUs/tableColumnsConfig\";\r\nimport {recordViewAboutUsConfig} from \"../../configs/AboutUs/recordViewConfig\";\r\n\r\n\r\nconst AboutUsPage = props=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'aboutus'}\r\n            pageTitle ={'О нас'}\r\n\r\n            tableData={props.aboutUs}\r\n            tableColumnsConfig={AboutUsColumns}\r\n\r\n            recordViewTitlesConfig={recordViewAboutUsConfig}\r\n\r\n            creatorTitle={'Создание параграфа \"О нас\"'}\r\n            updaterTitle={'Редактирование параграфа \"О нас\"'}\r\n            formInputsConfig={aboutUsInputConfig}\r\n            creatorInitialFormValues={{\r\n                header: '',\r\n                paragraph: '',\r\n                order: ''\r\n            }}\r\n            updaterInitialFormValues={{\r\n\r\n                header: props.aboutUsById?.header,\r\n                paragraph: props.aboutUsById?.paragraph,\r\n                order: props.aboutUsById?.order\r\n\r\n            }}\r\n            getDataFunc={props.getAboutUs}\r\n            valueById={props.aboutUsById}\r\n            getByIdFunc={props.getAboutUsById}\r\n            createFunc={props.createAboutUs}\r\n            updateFunc={props.updateAboutUs}\r\n            deleteFunc={props.deleteAboutUs}\r\n            isLoading={props.aboutFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        aboutUs: state.aboutUs.aboutUs,\r\n        aboutUsById: state.aboutUs.aboutUsById,\r\n        aboutFetchLoader: state.aboutUs.aboutFetchLoader\r\n    }\r\n}\r\nexport  default  connect(mapStateToProps,\r\n    {\r\n        getAboutUs,\r\n        getAboutUsById,\r\n        createAboutUs,\r\n        updateAboutUs,\r\n        deleteAboutUs,\r\n    }\r\n)(AboutUsPage)\r\n","\r\nexport const settingsInputConfig = [\r\n    {\r\n    label: \"Цена за доставку\",\r\n    placeholder: \"150\",\r\n    required: \"Укажите цену доставки\",\r\n    }\r\n    ]","import React, {useEffect} from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getDeliveryCash, updateDeliveryCash} from \"../../redux/reducers/orderReducer\";\r\nimport {settingsInputConfig} from \"../../configs/Settings/inputFormConfig\";\r\n\r\n\r\n\r\nconst SettingsPage  = props=>{\r\n    useEffect(()=>{\r\n        props.getDeliveryCash()\r\n    },[])\r\n    return(\r\n        <>\r\n            <h2 className='page-content__title'>Настройки</h2>\r\n            <FormContainer\r\n                valueById={props.deliveryCash}\r\n                initialVals={{\r\n                    deliveryPrice: props.deliveryCash?.deliveryPrice\r\n                }}\r\n                createReq={props.updateDeliveryCash}\r\n                inputConfig={settingsInputConfig}\r\n                isLoading={props.orderFetchLoader}\r\n                urlToTable={'/settings'}\r\n            />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        orderFetchLoader: state.order.orderFetchLoader,\r\n        deliveryCash: state.order.deliveryCash\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{updateDeliveryCash,getDeliveryCash})(SettingsPage)","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport OrdersPage from './pages/Orders/OrdersPage';\r\nimport UsersPage from './pages/Users/UsersPage';\r\nimport ProductsPage from './pages/Products/ProductsPage';\r\nimport ProvidersPage from './pages/Providers/ProvidersPage';\r\nimport AuthPage from \"./pages/Auth/AuthPage\";\r\nimport CategoriesPage from \"./pages/Categories/CategoriesPage\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfilePage from \"./pages/Profile/ProfilePage\";\r\nimport {authRefresh, toggleAuth} from \"./redux/reducers/mainReducer\";\r\nimport {getUserById} from \"./redux/reducers/userReducer\";\r\nimport {expChecker} from \"./components/Auth/expChecker\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {logout} from \"./components/Auth/logout\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport PageLoader from \"./components/pageLoader/pageLoader\";\r\nimport FaqPage from \"./pages/Faq/FaqPage\";\r\nimport AboutUsPage from \"./pages/AboutUs/AboutUsPage\";\r\nimport SettingsPage from \"./pages/Settings/SettingsPage\";\r\n\r\nfunction App(props) {\r\n\r\n    useEffect( ()=>{\r\n        console.log('check')\r\n        if (expChecker()) {                    //проверка на время токена\r\n            props.toggleAuth(true)\r\n            setTimeout(() =>props.toggleAuth(false),expChecker())\r\n        } else if (tokensChecker()) {                            //отправка на новый токен\r\n            const fetch = () => {\r\n                props.authRefresh({\r\n                    accessToken: localStorage.getItem('accessToken'),\r\n                    refreshToken: localStorage.getItem('refreshToken'),\r\n                    username: props.username\r\n                })\r\n            }\r\n           fetch()\r\n        } else {                                                            //выход из аккаунта\r\n            props.toggleAuth(false)\r\n            logout()\r\n            props.history.push('/')\r\n        }\r\n    },[props.isAuthorized])\r\n\r\n  return(\r\n            <>\r\n                {props.modal.isOpen && <Modal/>}\r\n\r\n                  {props.isAuthorized ?\r\n                      <>\r\n                          <Header/>\r\n                          <div className=\"container\">\r\n                              <SidebarList/>\r\n                              <div className=\"page-content\">\r\n                                  <Switch>\r\n                                      <Route path={'/orders'} component={OrdersPage}/>\r\n                                      <Route path={'/users'} component={UsersPage}/>\r\n                                      <Route path={'/products'} component={ProductsPage}/>\r\n                                      <Route path={'/categories'} component={CategoriesPage}/>\r\n                                      <Route path={'/providers'} component={ProvidersPage}/>\r\n                                      <Route path={'/profile'} exact component={ProfilePage}/>\r\n                                      <Route path={'/faq'}  component={FaqPage}/>\r\n                                      <Route path={'/aboutus'}  component={AboutUsPage}/>\r\n                                      <Route path={'/settings'}  component={SettingsPage}/>\r\n                                  </Switch>\r\n                              </div>\r\n                          </div>\r\n                      </>\r\n                      :\r\n                      <>\r\n                          <Switch>\r\n                              <Route path={'/'} exact component={AuthPage}/>\r\n                          </Switch>\r\n\r\n                      </>\r\n                  }\r\n             </>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        visible : state.modal.isOpenModal.isOpen,\r\n        isAuthorized: state.main.isAuthorized,\r\n        isPageLoader: state.main.isPageLoader,\r\n        userById: state.user.userById,\r\n        providerById: state.provider.providerById,\r\n        productById: state.product.productById,\r\n        categoryById: state.category.categoryById,\r\n        categories: state.category.categories,\r\n        users: state.user.users,\r\n        products: state.product.products,\r\n        providers: state.provider.providers,\r\n        isLoading : state.main.isFetchLoader,\r\n        modal : state.modal.isOpenModal,\r\n        username:state.main.username\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleAuth,getUserById,authRefresh})(withRouter(App));\r\n","export const tokensChecker = ()=>{\r\n    const accessToken = localStorage.getItem('accessToken')\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    if(refreshToken && accessToken){\r\n        return true\r\n    }\r\n    return false\r\n}","import { combineReducers } from \"redux\";\r\nimport {tableReducer} from \"./tableReducer\";\r\nimport {modalReducer} from \"./modalReducer\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {productReducer} from \"./productReducer\";\r\nimport {providerReducer} from \"./providerReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\nimport {orderReducer} from \"./orderReducer\";\r\nimport {aboutUsReducer} from \"./aboutUsReducer\";\r\nimport {faqReducer} from \"./faqReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    main: mainReducer,\r\n    table: tableReducer,\r\n    modal: modalReducer,\r\n    category: categoryReducer,\r\n    product: productReducer,\r\n    provider: providerReducer,\r\n    user:userReducer,\r\n    order: orderReducer,\r\n    faq: faqReducer,\r\n    aboutUs: aboutUsReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport {rootReducer} from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk,\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\nexport default  store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}